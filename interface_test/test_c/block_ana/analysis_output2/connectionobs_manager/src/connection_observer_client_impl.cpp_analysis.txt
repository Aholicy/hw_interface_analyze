代码块类型: Method Declaration
块名称: RegisterObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:26:39
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t ConnectionObserverClientImpl::RegisterObserver(const std::shared_ptr<ConnectionObserver> &observer)
{
    if (!observer) {
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");
        return ERR_INVALID_OBSERVER;
    }

    auto proxy = GetServiceProxy();

    std::lock_guard<std::mutex> guard(observerLock_);
    if (!RegisterObserverToServiceLocked(proxy)) {
        TAG_LOGE(AAFwkTag::CONNECTION, "register failed");
        return ERR_REGISTER_FAILED;
    }

    return AddObserversLocked(observer);
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:28:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!observer) {
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");
        return ERR_INVALID_OBSERVER;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:29:9
复杂度: 0
定义变量: __libc_single_threaded, logTag
使用变量: CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:30:9
复杂度: 0
定义变量: 
使用变量: ERR_INVALID_OBSERVER
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_OBSERVER;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:36:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!RegisterObserverToServiceLocked(proxy)) {
        TAG_LOGE(AAFwkTag::CONNECTION, "register failed");
        return ERR_REGISTER_FAILED;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:37:9
复杂度: 0
定义变量: have_error, logTag
使用变量: CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "register failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:38:9
复杂度: 0
定义变量: progname
使用变量: ERR_REGISTER_FAILED
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_REGISTER_FAILED;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:41:5
复杂度: 0
定义变量: 
使用变量: __x, IF_PROT_DEFAULT, observer
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return AddObserversLocked(observer);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: AddObserversLocked
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:41:12
复杂度: 0
定义变量: 
使用变量: IF_PROT_DEFAULT, observer
关键位置: 否
日志评分: 0
代码:
    return AddObserversLocked(observer);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: UnregisterObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:44:39
复杂度: 2
定义变量: 
使用变量: __out
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t ConnectionObserverClientImpl::UnregisterObserver(const std::shared_ptr<ConnectionObserver> &observer)
{
    if (!observer) {
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");
        return ERR_INVALID_OBSERVER;
    }

    auto proxy = GetServiceProxy();

    std::lock_guard<std::mutex> guard(observerLock_);
    auto ret = RemoveObserversLocked(observer);
    if (userObservers_.empty()) {
        UnregisterFromServiceLocked(proxy);
    }

    return ret;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:46:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!observer) {
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");
        return ERR_INVALID_OBSERVER;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:47:9
复杂度: 0
定义变量: logTag
使用变量: __x, __i, __other, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:48:9
复杂度: 0
定义变量: __ret
使用变量: ERR_INVALID_OBSERVER
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_OBSERVER;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: RemoveObserversLocked
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:54:16
复杂度: 0
定义变量: npos, __b3, space, __remaining
使用变量: , __a, __n, __ret, __s, __base, __b2, _ISspace, _S_get_c_name, observer
关键位置: 否
日志评分: 0
代码:
    auto ret = RemoveObserversLocked(observer);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:55:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (userObservers_.empty()) {
        UnregisterFromServiceLocked(proxy);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:59:5
复杂度: 0
定义变量: 
使用变量: __builtin_strcmp, __value, __pred, __low, ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return ret;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: GetConnectionData
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:75:39
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t ConnectionObserverClientImpl::GetConnectionData(std::vector<ConnectionData> &connectionData)
{
    auto proxy = GetServiceProxy();
    if (!proxy) {
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");
        return ERR_NO_PROXY;
    }

    return proxy->GetConnectionData(connectionData);
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:78:5
复杂度: 1
定义变量: 
使用变量: __tmp
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!proxy) {
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");
        return ERR_NO_PROXY;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:79:9
复杂度: 0
定义变量: __parent, MAX_TRANSACTION_ID, logTag
使用变量: , __n, __result, _Base, __next, __ISwblank, partial, _Lp, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "invalid observer");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:80:9
复杂度: 0
定义变量: __tmp, __old, __child, INVALID_FD
使用变量: , __t, __x, __first, __s, __builtin_fabsl, __ISwcntrl, __outstr, ERR_NO_PROXY
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_NO_PROXY;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleExtensionConnected
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:86:36
复杂度: 2
定义变量: 
使用变量: , __tmp, __ret, __location
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
void ConnectionObserverClientImpl::HandleExtensionConnected(const ConnectionData &data)
{
    auto observers = GetObservers();
    for (auto it = observers.begin(); it != observers.end(); ++it) {
        auto observer = *it;
        if (observer) {
            observer->OnExtensionConnected(data);
        }
    }
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleExtensionDisconnected
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:97:36
复杂度: 2
定义变量: 
使用变量: , __first, __len, __throw_system_error
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
void ConnectionObserverClientImpl::HandleExtensionDisconnected(const ConnectionData &data)
{
    auto observers = GetObservers();
    for (auto it = observers.begin(); it != observers.end(); ++it) {
        auto observer = *it;
        if (observer) {
            observer->OnExtensionDisconnected(data);
        }
    }
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: RegisterObserverToServiceLocked
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:132:36
复杂度: 4
定义变量: 
使用变量: __ne_ptr
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
bool ConnectionObserverClientImpl::RegisterObserverToServiceLocked(const std::shared_ptr<ServiceProxyAdapter> &proxy)
{
    if (isRegistered_) {
        return true;
    }

    if (!proxy) {
        TAG_LOGE(AAFwkTag::CONNECTION, "fail to get service");
        return false;
    }

    if (!observer_) {
        observer_ = sptr<IConnectionObserver>(new (std::nothrow) ConnectionObserverStubImpl(shared_from_this()));
    }

    if (proxy->RegisterObserver(observer_) != ERR_OK) {
        TAG_LOGE(AAFwkTag::CONNECTION, "register observer failed");
        return false;
    }
    isRegistered_ = true;
    return true;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:134:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (isRegistered_) {
        return true;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:135:9
复杂度: 0
定义变量: 
使用变量: , __x, __p, __y, __str, __j, _Base, operator=, __ws
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return true;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:138:5
复杂度: 1
定义变量: 
使用变量: __node
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!proxy) {
        TAG_LOGE(AAFwkTag::CONNECTION, "fail to get service");
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:139:9
复杂度: 0
定义变量: npos, __parent, lockGuard, tagNames, logTag
使用变量: , __x, __a, __p, __f, __fn, __c, __cont, __capacity, _Base, __holeIndex, memory_order_seq_cst, __xnode, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "fail to get service");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:140:9
复杂度: 0
定义变量: __p, __it
使用变量: , __len, __holeIndex
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:143:5
复杂度: 1
定义变量: 
使用变量: __x
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!observer_) {
        observer_ = sptr<IConnectionObserver>(new (std::nothrow) ConnectionObserverStubImpl(shared_from_this()));
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:147:5
复杂度: 1
定义变量: 
使用变量: __capacity, __throw_concurrence_lock_error
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (proxy->RegisterObserver(observer_) != ERR_OK) {
        TAG_LOGE(AAFwkTag::CONNECTION, "register observer failed");
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:148:9
复杂度: 0
定义变量: __y1, __uc, logTag
使用变量: _Indices, __y, __c, operation_not_permitted, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "register observer failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:149:9
复杂度: 0
定义变量: __rt
使用变量: , __n, __hf
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:152:5
复杂度: 0
定义变量: __tmp, offset
使用变量: __dest
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return true;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: UnregisterFromServiceLocked
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:155:36
复杂度: 3
定义变量: 
使用变量: __pos, __builtin_operator_delete, __nh
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void ConnectionObserverClientImpl::UnregisterFromServiceLocked(const std::shared_ptr<ServiceProxyAdapter> &proxy)
{
    if (!isRegistered_ || !observer_) {
        return;
    }

    if (!proxy) {
        return;
    }

    if (proxy->UnregisterObserver(observer_) != ERR_OK) {
        TAG_LOGE(AAFwkTag::CONNECTION, "unregister observer failed");
        return;
    }
    isRegistered_ = false;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:157:5
复杂度: 1
定义变量: 
使用变量: __size
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!isRegistered_ || !observer_) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:158:9
复杂度: 0
定义变量: 
使用变量: , __a, __size, __pos, __gthread_active_p, __lc
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:161:5
复杂度: 1
定义变量: 
使用变量: , __throw_system_error, __lc, __throw_concurrence_unlock_error
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!proxy) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:162:9
复杂度: 0
定义变量: 
使用变量: __first, __cont, __count
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:165:5
复杂度: 1
定义变量: __n
使用变量: , __throw_system_error
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (proxy->UnregisterObserver(observer_) != ERR_OK) {
        TAG_LOGE(AAFwkTag::CONNECTION, "unregister observer failed");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:166:9
复杂度: 0
定义变量: __max_exponent10, logTag
使用变量: , __args, __first2, __alloc, __beg, _Base, _Dig, __predicate, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "unregister observer failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:167:9
复杂度: 0
定义变量: __plus
使用变量: , npos
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: AddObserversLocked
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:172:39
复杂度: 1
定义变量: 
使用变量: , __res, __position
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t ConnectionObserverClientImpl::AddObserversLocked(const std::shared_ptr<ConnectionObserver> &observer)
{
    if (userObservers_.find(observer) != userObservers_.end()) {
        TAG_LOGE(AAFwkTag::CONNECTION, "observer already registered");
        return ERR_OBSERVER_ALREADY_REGISTERED;
    }
    userObservers_.emplace(observer);
    return ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:174:5
复杂度: 1
定义变量: 
使用变量: __i, __p
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (userObservers_.find(observer) != userObservers_.end()) {
        TAG_LOGE(AAFwkTag::CONNECTION, "observer already registered");
        return ERR_OBSERVER_ALREADY_REGISTERED;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:175:9
复杂度: 0
定义变量: _Nd, logTag
使用变量: , __r, __x, __a, __b, __p, __args, __fn, __comp, __len, __capacity, __end, __beg, __victim, memory_order_seq_cst, _S_red, offset, tagNames, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "observer already registered");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:176:9
复杂度: 0
定义变量: __q1x, __lit_zero
使用变量: , __p, __n1, _S_word_bit, __predicate, __current, __lit, ERR_OBSERVER_ALREADY_REGISTERED
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_OBSERVER_ALREADY_REGISTERED;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: RemoveObserversLocked
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:182:39
复杂度: 1
定义变量: 
使用变量: , __is_constant_evaluated, __old, __builtin_unreachable
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t ConnectionObserverClientImpl::RemoveObserversLocked(const std::shared_ptr<ConnectionObserver> &observer)
{
    if (userObservers_.find(observer) == userObservers_.end()) {
        TAG_LOGE(AAFwkTag::CONNECTION, "no such observer");
        return ERR_OBSERVER_NOT_REGISTERED;
    }
    userObservers_.erase(observer);
    return ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:184:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (userObservers_.find(observer) == userObservers_.end()) {
        TAG_LOGE(AAFwkTag::CONNECTION, "no such observer");
        return ERR_OBSERVER_NOT_REGISTERED;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:185:9
复杂度: 0
定义变量: __n, BASE_EXT, logTag
使用变量: , __r, __first, __c, __last, __d, __first1, __result, __q1x, __r1y, __m, __node, __get_type_info, __lc, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "no such observer");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:186:9
复杂度: 0
定义变量: __old, BASE_WANTAGENT
使用变量: , __x, __a, __i, __c, __d, __alloc, __new_size, __m, __r1z, __ts, __lc, _S_red, ERR_OBSERVER_NOT_REGISTERED
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_OBSERVER_NOT_REGISTERED;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: GetServiceProxy
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:192:68
复杂度: 1
定义变量: 
使用变量: , __i, __is_constant_evaluated, __builtin_unreachable
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
std::shared_ptr<ServiceProxyAdapter> ConnectionObserverClientImpl::GetServiceProxy()
{
    std::lock_guard<std::mutex> guard(proxyLock_);
    if (!serviceAdapter_) {
        ConnectLocked();
    }
    return serviceAdapter_;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:195:5
复杂度: 1
定义变量: 
使用变量: , __first, __is_constant_evaluated, __last, __builtin_unreachable, __alloc
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!serviceAdapter_) {
        ConnectLocked();
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ConnectLocked
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:196:9
复杂度: 0
定义变量: __first1
使用变量: __first, __arg, __last, __comp, __q0x, __r0y, __uset, BASE_JSENV
关键位置: 否
日志评分: 0
代码:
        ConnectLocked();

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ConnectLocked
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:201:36
复杂度: 5
定义变量: __cmp
使用变量: , __guard, __found_grouping, __date, __time
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void ConnectionObserverClientImpl::ConnectLocked()
{
    if (serviceAdapter_ != nullptr) {
        return;
    }
    sptr<ISystemAbilityManager> systemManager = SystemAbilityManagerClient::GetInstance().GetSystemAbilityManager();
    if (systemManager == nullptr) {
        TAG_LOGE(AAFwkTag::CONNECTION, "get system ability registry failed");
        return;
    }
    sptr<IRemoteObject> remoteObj = systemManager->GetSystemAbility(ABILITY_MGR_SERVICE_ID);
    if (remoteObj == nullptr) {
        TAG_LOGE(AAFwkTag::CONNECTION, "connect AMS failed");
        return;
    }

    deathRecipient_ = sptr<IRemoteObject::DeathRecipient>(
        new (std::nothrow) ServiceDeathRecipient(shared_from_this()));
    if (deathRecipient_ == nullptr) {
        TAG_LOGE(AAFwkTag::CONNECTION, "create AbilityMgrDeathRecipient failed");
        return;
    }
    if ((remoteObj->IsProxyObject()) && (!remoteObj->AddDeathRecipient(deathRecipient_))) {
        TAG_LOGE(AAFwkTag::CONNECTION, "Add death recipient failed");
        return;
    }

    serviceAdapter_ = std::make_shared<ServiceProxyAdapter>(remoteObj);
    TAG_LOGI(AAFwkTag::CONNECTION, "Connect AMS success");
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:203:5
复杂度: 1
定义变量: __n
使用变量: __size, __now, __throw_concurrence_lock_error
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (serviceAdapter_ != nullptr) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:204:9
复杂度: 0
定义变量: __tmp
使用变量: __size, __res, __beg
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:207:5
复杂度: 1
定义变量: 
使用变量: , __i, __is_constant_evaluated, __other, __builtin_unreachable, __first2
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (systemManager == nullptr) {
        TAG_LOGE(AAFwkTag::CONNECTION, "get system ability registry failed");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:208:9
复杂度: 0
定义变量: __found_sci, logTag
使用变量: , __n, __i, __ret, __size, __first, __other, __last, __str, __q, __unary_pred, __pend, __qend, __testvalid, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "get system ability registry failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:209:9
复杂度: 0
定义变量: __p, __found_grouping
使用变量: __p, __size
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:212:5
复杂度: 1
定义变量: 
使用变量: , __prev
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (remoteObj == nullptr) {
        TAG_LOGE(AAFwkTag::CONNECTION, "connect AMS failed");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:213:9
复杂度: 0
定义变量: logTag
使用变量: , __t, __a, __p, __ret, __f, __last, __comp, __first2, __last2, npos, __end, __beg, __gthread_active_p, __prev, __umap, __cur, __urng, _S_is_eof, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "connect AMS failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:214:9
复杂度: 0
定义变量: __q
使用变量: , __first, __beg, __lc
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:219:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (deathRecipient_ == nullptr) {
        TAG_LOGE(AAFwkTag::CONNECTION, "create AbilityMgrDeathRecipient failed");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:220:9
复杂度: 0
定义变量: __coshift_, logTag
使用变量: , _Nm, __t, __x, __p, __y, __f, __first, __rhs, __e, __builtin_clzll, __diff, __beg, __shift, _Base, __cur, __urng, iostream_category, __lc, _Lp, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "create AbilityMgrDeathRecipient failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:221:9
复杂度: 0
定义变量: __dnew
使用变量: __a, operator+=
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:223:5
复杂度: 1
定义变量: 
使用变量: __size, __dnew
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if ((remoteObj->IsProxyObject()) && (!remoteObj->AddDeathRecipient(deathRecipient_))) {
        TAG_LOGE(AAFwkTag::CONNECTION, "Add death recipient failed");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:224:9
复杂度: 0
定义变量: __new_d, __lock, MIN_RAWDATA_SIZE, logTag
使用变量: , __a, __b, __n, __p, allocator_arg, __uhead, __size, __rhs, __c, __pos, __c1, __d, __beg, system_category, __lc, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "Add death recipient failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:225:9
复杂度: 0
定义变量: 
使用变量: , __pos, __comp, _Fnv_hash_bytes, __found_dec
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:229:5
复杂度: 0
定义变量: __tmp, __xlen, logTag
使用变量: , __x, __y, __size, __len, __d1, __d2, __length, __new_n1, __new_n0, __new_d, __secondChild, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGI(AAFwkTag::CONNECTION, "Connect AMS success");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRemoteDied
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:232:36
复杂度: 1
定义变量: 
使用变量: __dt
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
void ConnectionObserverClientImpl::HandleRemoteDied(const wptr<IRemoteObject> &remote)
{
    if (!ResetProxy(remote)) {
        return;
    }
    NotifyServiceDiedToObservers();
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:234:5
复杂度: 1
定义变量: 
使用变量: , __first, __secondChild
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!ResetProxy(remote)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ResetProxy
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:234:10
复杂度: 0
定义变量: __low
使用变量: value, , __x, __e, __new_size, remote
关键位置: 否
日志评分: 0
代码:
    if (!ResetProxy(remote)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:235:9
复杂度: 0
定义变量: __c
使用变量: , __a, __b, __ptr, operator+=
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: NotifyServiceDiedToObservers
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:237:5
复杂度: 0
定义变量: __tailSize
使用变量: , __x, __a, __i, __y, __ptr, __last, __end, __beg, __quot_lo
关键位置: 否
日志评分: 0
代码:
    NotifyServiceDiedToObservers();

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ResetProxy
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:240:36
复杂度: 2
定义变量: __cmp
使用变量: __is_constant_evaluated, __builtin_unreachable, __guard, __ampm_format, __ampm
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
bool ConnectionObserverClientImpl::ResetProxy(const wptr<IRemoteObject> &remote)
{
    std::lock_guard<std::mutex> guard(proxyLock_);
    if (serviceAdapter_ == nullptr) {
        return false;
    }

    auto proxyObject = serviceAdapter_->GetProxyObject();
    if ((proxyObject != nullptr) && (proxyObject == remote.promote())) {
        proxyObject->RemoveDeathRecipient(deathRecipient_);
        serviceAdapter_ = nullptr;
        return true;
    }

    return false;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:243:5
复杂度: 1
定义变量: 
使用变量: __n, __p
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (serviceAdapter_ == nullptr) {
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:244:9
复杂度: 0
定义变量: __e
使用变量: , __plus, __xtrc, operator+=
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:248:5
复杂度: 1
定义变量: 
使用变量: __c, __len
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if ((proxyObject != nullptr) && (proxyObject == remote.promote())) {
        proxyObject->RemoveDeathRecipient(deathRecipient_);
        serviceAdapter_ = nullptr;
        return true;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:251:9
复杂度: 0
定义变量: 
使用变量: __x, __p, __c, operator<, _Digs, __atomic_is_lock_free
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return true;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:254:5
复杂度: 0
定义变量: 
使用变量: __first, __last
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return false;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ResetStatus
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:257:36
复杂度: 0
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable, __days
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
void ConnectionObserverClientImpl::ResetStatus()
{
    std::lock_guard<std::mutex> guard(observerLock_);
    isRegistered_ = false;
    userObservers_.clear();
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: NotifyServiceDiedToObservers
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:264:36
复杂度: 2
定义变量: 
使用变量: , __days, __atomic_store
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
void ConnectionObserverClientImpl::NotifyServiceDiedToObservers()
{
    auto observers = GetObservers();
    ResetStatus();
    for (auto it = observers.begin(); it != observers.end(); ++it) {
        auto observer = *it;
        if (observer) {
            observer->OnServiceDied();
        }
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ResetStatus
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:267:5
复杂度: 0
定义变量: 
使用变量: __v, , __n, __p, __c, __gthread_mutex_timedlock, __ref, __lc
关键位置: 否
日志评分: 0
代码:
    ResetStatus();

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: GetObservers
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:276:87
复杂度: 0
定义变量: 
使用变量: , __n, __is_constant_evaluated, __builtin_unreachable, __days, __atomic_store
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
std::unordered_set<std::shared_ptr<ConnectionObserver>> ConnectionObserverClientImpl::GetObservers()
{
    std::lock_guard<std::mutex> guard(observerLock_);
    return userObservers_;
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteDied
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:282:59
复杂度: 1
定义变量: 
使用变量: __sv, __months, __atomic_load
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void ConnectionObserverClientImpl::ServiceDeathRecipient::OnRemoteDied(const wptr<IRemoteObject> &remote)
{
    TAG_LOGI(AAFwkTag::CONNECTION, "called");
    auto owner = owner_.lock();
    if (!owner) {
        TAG_LOGE(AAFwkTag::CONNECTION, "OnRemoteDied");
        return;
    }
    owner->HandleRemoteDied(remote);
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:284:5
复杂度: 0
定义变量: __tmp, __ptr, __urngmin, logTag
使用变量: , __x, __a, __n, __tail, __head, __first, __s, __cont, __new_capacity, __buf, operator&, __testvalid, __memory_order_mask, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGI(AAFwkTag::CONNECTION, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:286:5
复杂度: 1
定义变量: 
使用变量: __ptr
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!owner) {
        TAG_LOGE(AAFwkTag::CONNECTION, "OnRemoteDied");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:287:9
复杂度: 0
定义变量: _3, logTag
使用变量: , __t, __u, __it1, __val, __new_capacity, _Rb_tree_increment, CONNECTION
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::CONNECTION, "OnRemoteDied");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/connectionobs_manager/src/connection_observer_client_impl.cpp:288:9
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
