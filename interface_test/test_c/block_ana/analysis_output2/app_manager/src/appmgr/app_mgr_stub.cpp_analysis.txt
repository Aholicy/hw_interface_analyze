代码块类型: Method Declaration
块名称: OnRemoteRequest
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:47:17
复杂度: 1
定义变量: 
使用变量: __out
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int AppMgrStub::OnRemoteRequest(uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::OnReceived, code = %{public}u, flags= %{public}d.", code,
        option.GetFlags());
    std::u16string descriptor = AppMgrStub::GetDescriptor();
    std::u16string remoteDescriptor = data.ReadInterfaceToken();
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "local descriptor is not equal to remote");
        return ERR_INVALID_STATE;
    }
    return OnRemoteRequestInner(code, data, reply, option);
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:49:5
复杂度: 0
定义变量: upper, lower, APP_INPUT_BLOCK, BUSSINESS_THREAD_BLOCK_3S, logTag
使用变量: , __builtin_addressof, __n, __ret, __low, __high, __refs, _S_get_c_name, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::OnReceived, code = %{public}u, flags= %{public}d.", code,
        option.GetFlags());

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadInterfaceToken
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:52:39
复杂度: 0
定义变量: 
使用变量: __cont, _Intl, data
关键位置: 否
日志评分: 0
代码:
    std::u16string remoteDescriptor = data.ReadInterfaceToken();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:53:5
复杂度: 1
定义变量: metaDescriptor_
使用变量: metaDescriptor_
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "local descriptor is not equal to remote");
        return ERR_INVALID_STATE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:54:9
复杂度: 0
定义变量: npos, __b3, space, __remaining, logTag
使用变量: , __ptr, __a, __n, __pos, __ret, __bsx, __s, __base, __b2, __builtin_strcmp, _ISspace, _S_get_c_name, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "local descriptor is not equal to remote");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:55:9
复杂度: 0
定义变量: __i, __len, __num, __b4, print
使用变量: npos, PTHREAD_MUTEX_TIMED_NP, _ISprint, DEFAULT, ERR_INVALID_STATE
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_STATE;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:57:5
复杂度: 0
定义变量: __tmp, __elem0, cntrl
使用变量: , __tmp, __i, __last, __len, __ret, __iter, __str, PTHREAD_MUTEX_ERRORCHECK_NP, _IScntrl, current_exception, __caches, _Cache, data, code, reply, option
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return OnRemoteRequestInner(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInner
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:57:12
复杂度: 0
定义变量: __elem0, cntrl
使用变量: , __i, __last, __len, __str, PTHREAD_MUTEX_ERRORCHECK_NP, _IScntrl, current_exception, _Cache, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    return OnRemoteRequestInner(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInner
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:60:21
复杂度: 7
定义变量: 
使用变量: , __tmp, __is_constant_evaluated, __builtin_unreachable, __location, __ret, __throw_length_error, rethrow_exception
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::OnRemoteRequestInner(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    int retCode = ERR_OK;
    retCode = OnRemoteRequestInnerFirst(code, data, reply, option);
    if (retCode != INVALID_FD) {
        return retCode;
    }
    retCode = OnRemoteRequestInnerSecond(code, data, reply, option);
    if (retCode != INVALID_FD) {
        return retCode;
    }
    retCode = OnRemoteRequestInnerThird(code, data, reply, option);
    if (retCode != INVALID_FD) {
        return retCode;
    }
    retCode = OnRemoteRequestInnerFourth(code, data, reply, option);
    if (retCode != INVALID_FD) {
        return retCode;
    }
    retCode = OnRemoteRequestInnerFifth(code, data, reply, option);
    if (retCode != INVALID_FD) {
        return retCode;
    }
    retCode = OnRemoteRequestInnerSixth(code, data, reply, option);
    if (retCode != INVALID_FD) {
        return retCode;
    }
    retCode = OnRemoteRequestInnerSeventh(code, data, reply, option);
    if (retCode != INVALID_FD) {
        return retCode;
    }
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::OnRemoteRequest end");
    return IPCObjectStub::OnRemoteRequest(code, data, reply, option);
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInnerFirst
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:64:15
复杂度: 0
定义变量: value, __c, __enable_hash_call
使用变量: , __v, __tmp, __n, __size, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    retCode = OnRemoteRequestInnerFirst(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:65:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (retCode != INVALID_FD) {
        return retCode;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:66:9
复杂度: 0
定义变量: __save_errno, __next, __intptr
使用变量: __first, __pos, __size, _Base, retCode
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return retCode;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInnerSecond
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:68:15
复杂度: 0
定义变量: 
使用变量: , __other, __pos, __size, __s, __intptr, __aligned, _Qn, _Pn, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    retCode = OnRemoteRequestInnerSecond(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:69:5
复杂度: 1
定义变量: 
使用变量: __loc
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (retCode != INVALID_FD) {
        return retCode;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:70:9
复杂度: 0
定义变量: 
使用变量: , __n, __s, retCode
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return retCode;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInnerThird
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:72:15
复杂度: 0
定义变量: 
使用变量: , __is_signed, value, __x, __n, __i, __last, _S_local_capacity, PTHREAD_MUTEX_STALLED, __loc, __ISwlower, __caches, _Intl, __maxlen, __outstr, __next, _Pn, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    retCode = OnRemoteRequestInnerThird(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:73:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (retCode != INVALID_FD) {
        return retCode;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:74:9
复杂度: 0
定义变量: __old_size, __outlast
使用变量: , __ptr, __tmp, __ret, __os, __ISwdigit, retCode
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return retCode;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInnerFourth
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:76:15
复杂度: 0
定义变量: 
使用变量: , __digits, __max, __x, __i, __p, PTHREAD_MUTEX_RECURSIVE_NP, __ISwspace, _S_scientific, _S_fixed, __outnext, __outlast, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    retCode = OnRemoteRequestInnerFourth(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:77:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (retCode != INVALID_FD) {
        return retCode;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:78:9
复杂度: 0
定义变量: MIN_TRANSACTION_ID
使用变量: , _Idx, __off, __testoff, __ISwgraph, retCode
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return retCode;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInnerFifth
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:80:15
复杂度: 0
定义变量: __tmp, __old, __np, INVALID_FD, __child
使用变量: , __t, __x, __n, __i, __first, __last, __f, __uselocale, __cloc, __s, __loc, __ISwcntrl, __maxlen, __outstr, __outchars, __child, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    retCode = OnRemoteRequestInnerFifth(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:81:5
复杂度: 1
定义变量: 
使用变量: __tmp
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (retCode != INVALID_FD) {
        return retCode;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:82:9
复杂度: 0
定义变量: __ret, __grouping, RPC_QOS_MIN_BW
使用变量: , __first, __result, __str, __endptr, __ISwalnum, DEFAULT, retCode
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return retCode;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInnerSixth
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:84:15
复杂度: 0
定义变量: __result, __x, __falsename, RPC_QOS_MIN_LATENCY
使用变量: , __a, __b, __i, __first, __location, __h, __mem, UNKNOWN, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    retCode = OnRemoteRequestInnerSixth(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:85:5
复杂度: 1
定义变量: 
使用变量: , __s2, __mem
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (retCode != INVALID_FD) {
        return retCode;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:86:9
复杂度: 0
定义变量: __n, __num, SOCKET_ID_INVALID
使用变量: , __result, __cont, __collate, retCode
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return retCode;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: OnRemoteRequestInnerSeventh
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:88:15
复杂度: 0
定义变量: __is_signed, __w, __remaining
使用变量: , __digits, __x, __a, __b, __n, __last, __num, __result, __ret, __out, __g, data, code, reply, option
关键位置: 否
日志评分: 0
代码:
    retCode = OnRemoteRequestInnerSeventh(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:89:5
复杂度: 1
定义变量: 
使用变量: , __n, __first, __ret
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (retCode != INVALID_FD) {
        return retCode;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:90:9
复杂度: 0
定义变量: 
使用变量: , __result, __s, __grouping, retCode
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return retCode;

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:92:5
复杂度: 0
定义变量: __tmp, logTag
使用变量: , __a, __val, __result, __len, __args, __s, __mem, __grouping, noconv, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::OnRemoteRequest end");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInnerFirst
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:96:21
复杂度: 16
定义变量: 
使用变量: , __ptr, __first, __is_constant_evaluated, __builtin_unreachable, __len, __u, __c1, __throw_system_error
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::OnRemoteRequestInnerFirst(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    switch (static_cast<uint32_t>(code)) {
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_ATTACH_APPLICATION):
            return HandleAttachApplication(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::PRELOAD_APPLICATION):
            return HandlePreloadApplication(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_APPLICATION_FOREGROUNDED):
            return HandleApplicationForegrounded(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_APPLICATION_BACKGROUNDED):
            return HandleApplicationBackgrounded(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_APPLICATION_TERMINATED):
            return HandleApplicationTerminated(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_ABILITY_CLEANED):
            return HandleAbilityCleaned(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_MGR_INSTANCE):
            return HandleGetAmsMgr(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_CLEAR_UP_APPLICATION_DATA):
            return HandleClearUpApplicationData(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_ALL_RUNNING_PROCESSES):
            return HandleGetAllRunningProcesses(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_NOTIFY_MEMORY_LEVEL):
            return HandleNotifyMemoryLevel(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_NOTIFY_PROC_MEMORY_LEVEL):
            return HandleNotifyProcMemoryLevel(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_RUNNING_PROCESSES_BY_USER_ID):
            return HandleGetProcessRunningInfosByUserId(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_ADD_ABILITY_STAGE_INFO_DONE):
            return HandleAddAbilityStageDone(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::STARTUP_RESIDENT_PROCESS):
            return HandleStartupResidentProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_APPLICATION_STATE_OBSERVER):
            return HandleRegisterApplicationStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_APPLICATION_STATE_OBSERVER):
            return HandleUnregisterApplicationStateObserver(data, reply);
    }
    return INVALID_FD;
}

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:99:5
复杂度: 16
定义变量: 
使用变量: , __x, __nh, __ret, __size, __m, __builtin_va_end, __s
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (static_cast<uint32_t>(code)) {
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_ATTACH_APPLICATION):
            return HandleAttachApplication(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::PRELOAD_APPLICATION):
            return HandlePreloadApplication(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_APPLICATION_FOREGROUNDED):
            return HandleApplicationForegrounded(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_APPLICATION_BACKGROUNDED):
            return HandleApplicationBackgrounded(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_APPLICATION_TERMINATED):
            return HandleApplicationTerminated(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_ABILITY_CLEANED):
            return HandleAbilityCleaned(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_MGR_INSTANCE):
            return HandleGetAmsMgr(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_CLEAR_UP_APPLICATION_DATA):
            return HandleClearUpApplicationData(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_ALL_RUNNING_PROCESSES):
            return HandleGetAllRunningProcesses(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_NOTIFY_MEMORY_LEVEL):
            return HandleNotifyMemoryLevel(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_NOTIFY_PROC_MEMORY_LEVEL):
            return HandleNotifyProcMemoryLevel(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_RUNNING_PROCESSES_BY_USER_ID):
            return HandleGetProcessRunningInfosByUserId(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_ADD_ABILITY_STAGE_INFO_DONE):
            return HandleAddAbilityStageDone(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::STARTUP_RESIDENT_PROCESS):
            return HandleStartupResidentProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_APPLICATION_STATE_OBSERVER):
            return HandleRegisterApplicationStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_APPLICATION_STATE_OBSERVER):
            return HandleUnregisterApplicationStateObserver(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:101:13
复杂度: 0
定义变量: collate, __grouping, __fn
使用变量: , __a, __b, __i, __val, __mem, __exchange_and_add, __np, __g_size, _Default, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleAttachApplication(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleAttachApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:101:20
复杂度: 0
定义变量: collate, __fn
使用变量: __a, __b, __i, __val, __mem, __np, __g_size, _Default, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleAttachApplication(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:103:13
复杂度: 0
定义变量: __max, monetary
使用变量: , __n, min, __pos, __s, memory_order_seq_cst, _Copy, _CopyAssignment, _Base, tag, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandlePreloadApplication(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandlePreloadApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:103:20
复杂度: 0
定义变量: __max, monetary
使用变量: , __n, __pos, memory_order_seq_cst, _Copy, _CopyAssignment, _Base, tag, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandlePreloadApplication(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:105:13
复杂度: 0
定义变量: all
使用变量: , __max, __a, __p, __first, __last, __first1, __first2, __num, __nh, __uselocale, __old, __gthread_active_p, ctype, numeric, collate, __refs, __b0, __a0, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleApplicationForegrounded(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleApplicationForegrounded
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:105:20
复杂度: 0
定义变量: all
使用变量: __p, __first, __first1, __first2, __num, __nh, __old, ctype, numeric, collate, __refs, __b0, __a0, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleApplicationForegrounded(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:107:13
复杂度: 0
定义变量: 
使用变量: , _Nm, __x, __comp, __arr, __np, _S_get_c_name, __g_size, memory_order_seq_cst, _Base, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleApplicationBackgrounded(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleApplicationBackgrounded
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:107:20
复杂度: 0
定义变量: 
使用变量: , _Nm, __x, __comp, __np, _S_get_c_name, __g_size, memory_order_seq_cst, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleApplicationBackgrounded(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:109:13
复杂度: 0
定义变量: value, __ct, offset
使用变量: , __t, __n, __first, __last, __val, __position, __cmp, PTHREAD_RWLOCK_PREFER_READER_NP, __mem, __loc, __grouping, _Qn, _Pn, DEFAULT, tag, GetOffset, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleApplicationTerminated(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleApplicationTerminated
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:109:20
复杂度: 0
定义变量: value, __ct
使用变量: , __t, __n, __first, __last, __val, __position, __cmp, PTHREAD_RWLOCK_PREFER_READER_NP, __mem, __loc, __grouping, _Qn, _Pn, DEFAULT, tag, GetOffset, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleApplicationTerminated(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:111:13
复杂度: 0
定义变量: par
使用变量: , __max, __x, __tmp, __p, __first, __val, __args, __u, __s, npos, __gthread_mutex_trylock, __mem, _S_atoms_out, memory_order_seq_cst, nothrow, _Base, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleAbilityCleaned(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleAbilityCleaned
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:111:20
复杂度: 0
定义变量: par
使用变量: , __max, __x, __tmp, __p, __first, __val, __args, __u, __s, __mem, _S_atoms_out, memory_order_seq_cst, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleAbilityCleaned(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:113:13
复杂度: 0
定义变量: __tmp, __found, unseq
使用变量: , __tmp, __sz, __len, __out, _S_atoms_in, __mp, memory_order_acq_rel, memory_order_acquire, offset, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAmsMgr(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAmsMgr
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:113:20
复杂度: 0
定义变量: __found, unseq
使用变量: __tmp, __sz, __len, _S_atoms_in, __mp, memory_order_acquire, offset, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAmsMgr(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:115:13
复杂度: 0
定义变量: __i
使用变量: , __x, __a, __tmp, __i, __sz, __fn, __nh, __arg, allocator_arg, _S_iend, memory_order_seq_cst, _Base, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleClearUpApplicationData(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleClearUpApplicationData
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:115:20
复杂度: 0
定义变量: 
使用变量: , __x, __a, __tmp, __i, __sz, __fn, __arg, _S_iend, memory_order_seq_cst, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleClearUpApplicationData(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:117:13
复杂度: 0
定义变量: __i, __ret, __fn, _M_max_size
使用变量: , __x, __i, __p, __it1, __it2, __o, __grouping, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAllRunningProcesses(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAllRunningProcesses
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:117:20
复杂度: 0
定义变量: __i, __ret, _M_max_size
使用变量: , __x, __p, __it2, __o, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAllRunningProcesses(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:119:13
复杂度: 0
定义变量: __size
使用变量: , __i, __sz, __p, __y, __first, __last, __args, __fn, __ret, __s, PTHREAD_MUTEX_TIMED_NP, __loc, __falsename, memory_order_seq_cst, __cur, _Base, __gthread_recursive_mutex_trylock, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyMemoryLevel(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyMemoryLevel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:119:20
复杂度: 0
定义变量: 
使用变量: , __p, __y, __first, __last, __args, PTHREAD_MUTEX_TIMED_NP, __loc, memory_order_seq_cst, __cur, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyMemoryLevel(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:121:13
复杂度: 0
定义变量: npos
使用变量: , __x, __a, __i, __uhead, __m, __s, __facets, operator&, __mp, __memory_order_modifier_mask, tagNames, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyProcMemoryLevel(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyProcMemoryLevel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:121:20
复杂度: 0
定义变量: npos
使用变量: __x, __a, __i, __uhead, __m, __s, __facets, operator&, __mp, __memory_order_modifier_mask, tagNames, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyProcMemoryLevel(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:123:13
复杂度: 0
定义变量: __it, __lo
使用变量: , __x, __tmp, __first, __c, __args, __pos, __tmp_capacity, __lo1, __lo2, _Base, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetProcessRunningInfosByUserId(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetProcessRunningInfosByUserId
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:123:20
复杂度: 0
定义变量: __lo
使用变量: , __x, __tmp, __c, __args, __tmp_capacity, __lo1, __lo2, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetProcessRunningInfosByUserId(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:125:13
复杂度: 0
定义变量: 
使用变量: , __b, __i, __first, __last, __result, __c, __throw_bad_array_new_length, __k, __size, __m, __s, __lo1, __lo2, __to_end, __to_next, __truename, _S_atoms, __shift, __cur, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleAddAbilityStageDone(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleAddAbilityStageDone
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:125:20
复杂度: 0
定义变量: 
使用变量: , __b, __i, __first, __last, __c, __k, __size, __m, __s, __lo1, __to_next, _S_atoms, __shift, __cur, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleAddAbilityStageDone(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:127:13
复杂度: 0
定义变量: 
使用变量: , __t, __a, __b, __position, __m, __cont, __s, operator&, memory_order_release, __memory_order_mask, _M_max_align, _Base, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleStartupResidentProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleStartupResidentProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:127:20
复杂度: 0
定义变量: 
使用变量: , __t, __a, __b, __cont, memory_order_release, _M_max_align, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleStartupResidentProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:129:13
复杂度: 0
定义变量: __state, tagNames
使用变量: __x, __tmp, __p, relaxed, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRegisterApplicationStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRegisterApplicationStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:129:20
复杂度: 0
定义变量: 
使用变量: __x, __tmp, __p, relaxed, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRegisterApplicationStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:131:13
复杂度: 0
定义变量: __lock
使用变量: , __it, __a, __b, __p, __first, __last, __val, __state, __outstr, __cvt, __shift, _Base, tagNames, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUnregisterApplicationStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUnregisterApplicationStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:131:20
复杂度: 0
定义变量: 
使用变量: , __a, __b, __p, __first, __last, __val, __state, __outstr, __cvt, __shift, _Base, tagNames, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUnregisterApplicationStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:133:5
复杂度: 0
定义变量: 
使用变量: , __s, __atomic_thread_fence, __xnode, INVALID_FD
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return INVALID_FD;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInnerSecond
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:136:21
复杂度: 18
定义变量: 
使用变量: __res, __builtin_operator_delete, __nh, __pos, __ne_ptr
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::OnRemoteRequestInnerSecond(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    switch (static_cast<uint32_t>(code)) {
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_FOREGROUND_APPLICATIONS):
            return HandleGetForegroundApplications(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_USER_TEST_PROCESS):
            return HandleStartUserTestProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::FINISH_USER_TEST):
            return HandleFinishUserTest(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SCHEDULE_ACCEPT_WANT_DONE):
            return HandleScheduleAcceptWantDone(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SCHEDULE_NEW_PROCESS_REQUEST_DONE):
            return HandleScheduleNewProcessRequestDone(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_ABILITY_RECORDS_BY_PROCESS_ID):
            return HandleGetAbilityRecordsByProcessID(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::PRE_START_NWEBSPAWN_PROCESS):
            return HandlePreStartNWebSpawnProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_RENDER_PROCESS):
            return HandleStartRenderProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::ATTACH_RENDER_PROCESS):
            return HandleAttachRenderProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_RENDER_PROCESS_TERMINATION_STATUS):
            return HandleGetRenderProcessTerminationStatus(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_CONFIGURATION):
            return HandleGetConfiguration(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_CONFIGURATION):
            return HandleUpdateConfiguration(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_CONFIGURATION_OBSERVER):
            return HandleRegisterConfigurationObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_CONFIGURATION_OBSERVER):
            return HandleUnregisterConfigurationObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_PROCESS_RUNNING_INFORMATION):
            return HandleGetProcessRunningInformation(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::DUMP_HEAP_MEMORY_PROCESS):
            return HandleDumpHeapMemory(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::DUMP_JSHEAP_MEMORY_PROCESS):
            return HandleDumpJsHeapMemory(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_RUNNING_MULTIAPP_INFO_BY_BUNDLENAME):
            return HandleGetRunningMultiAppInfoByBundleName(data, reply);
    }
    return INVALID_FD;
}

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:139:5
复杂度: 18
定义变量: __n, __last_pos
使用变量: , __x, __i, __first, __builtin_operator_delete, __node, __position, __size, __capacity, __lc, __dest, __throw_concurrence_lock_error, __throw_concurrence_unlock_error, __throw_system_error
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (static_cast<uint32_t>(code)) {
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_FOREGROUND_APPLICATIONS):
            return HandleGetForegroundApplications(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_USER_TEST_PROCESS):
            return HandleStartUserTestProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::FINISH_USER_TEST):
            return HandleFinishUserTest(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SCHEDULE_ACCEPT_WANT_DONE):
            return HandleScheduleAcceptWantDone(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SCHEDULE_NEW_PROCESS_REQUEST_DONE):
            return HandleScheduleNewProcessRequestDone(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_ABILITY_RECORDS_BY_PROCESS_ID):
            return HandleGetAbilityRecordsByProcessID(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::PRE_START_NWEBSPAWN_PROCESS):
            return HandlePreStartNWebSpawnProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_RENDER_PROCESS):
            return HandleStartRenderProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::ATTACH_RENDER_PROCESS):
            return HandleAttachRenderProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_RENDER_PROCESS_TERMINATION_STATUS):
            return HandleGetRenderProcessTerminationStatus(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_CONFIGURATION):
            return HandleGetConfiguration(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_CONFIGURATION):
            return HandleUpdateConfiguration(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_CONFIGURATION_OBSERVER):
            return HandleRegisterConfigurationObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_CONFIGURATION_OBSERVER):
            return HandleUnregisterConfigurationObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_PROCESS_RUNNING_INFORMATION):
            return HandleGetProcessRunningInformation(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::DUMP_HEAP_MEMORY_PROCESS):
            return HandleDumpHeapMemory(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::DUMP_JSHEAP_MEMORY_PROCESS):
            return HandleDumpJsHeapMemory(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_RUNNING_MULTIAPP_INFO_BY_BUNDLENAME):
            return HandleGetRunningMultiAppInfoByBundleName(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:141:13
复杂度: 0
定义变量: __state, registration, offset
使用变量: , __r, __tmp, __pos, __position, __l, _Lp, Get, __gthread_cond_destroy, tag, GetOffset, DELEGATOR, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetForegroundApplications(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetForegroundApplications
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:141:20
复杂度: 0
定义变量: registration
使用变量: , __r, __tmp, __pos, __l, _Lp, Get, __gthread_cond_destroy, tag, GetOffset, DELEGATOR, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetForegroundApplications(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:143:13
复杂度: 0
定义变量: stdin
使用变量: , __x, __a, __b, __y, __nh, __pos, operator|, __ineof, __sbin, __sbout, _Intl, __parent, _Base, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleStartUserTestProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleStartUserTestProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:143:20
复杂度: 0
定义变量: 
使用变量: __x, __b, __y, __nh, operator|, __ineof, __sbin, __sbout, _Intl, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleStartUserTestProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:145:13
复杂度: 0
定义变量: __i, stderr, __ne_ptr, __loc, __x0
使用变量: , __x, __tmp, __p, __c, __ret, npos, __capacity, __i1, __i2, __old_capacity, __ne_ptr, __io, offset, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleFinishUserTest(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleFinishUserTest
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:145:20
复杂度: 0
定义变量: __i, __x0
使用变量: , __x, __c, __capacity, __i1, __i2, __old_capacity, __io, offset, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleFinishUserTest(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:147:13
复杂度: 0
定义变量: __y0
使用变量: , __a, __b, __y, __first, __last, __result, __c, __old_capacity, operator&, _Base, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleScheduleAcceptWantDone(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleScheduleAcceptWantDone
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:147:20
复杂度: 0
定义变量: __y0
使用变量: __b, __y, __first, __last, __result, __c, __old_capacity, operator&, _Base, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleScheduleAcceptWantDone(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:149:13
复杂度: 0
定义变量: __lc, __x0y0
使用变量: , __loc, __uc, _Lp, __x0, __y0, __rtime, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleScheduleNewProcessRequestDone(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleScheduleNewProcessRequestDone
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:149:20
复杂度: 0
定义变量: __lc, __x0y0
使用变量: __loc, __uc, _Lp, __x0, __y0, __rtime, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleScheduleNewProcessRequestDone(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:151:13
复杂度: 0
定义变量: registration, __x1y0
使用变量: , __a, __b, __i, _Num, __p, __first, __cont, __facets, operator^, memory_order_seq_cst, Get, __y0, __x1, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAbilityRecordsByProcessID(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAbilityRecordsByProcessID
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:151:20
复杂度: 0
定义变量: registration, __x1y0
使用变量: , __b, __i, _Num, __p, __first, __facets, operator^, memory_order_seq_cst, Get, __y0, __x1, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAbilityRecordsByProcessID(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:153:13
复杂度: 0
定义变量: __pos, _Nd, __mix
使用变量: , __p, __y, __comp, __position, __x0y1, __x1y0, tagNames, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandlePreStartNWebSpawnProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandlePreStartNWebSpawnProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:153:20
复杂度: 0
定义变量: _Nd, __mix
使用变量: , __p, __comp, __position, __x0y1, __x1y0, tagNames, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandlePreStartNWebSpawnProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:155:13
复杂度: 0
定义变量: __size, __loc, __mix_hi
使用变量: , __a, __n, __y, __last2, __m, __i1, __i2, __io, __p1, __hf, __eql, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleStartRenderProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleStartRenderProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:155:20
复杂度: 0
定义变量: __loc, __mix_hi
使用变量: __a, __y, __last2, __m, __i1, __i2, __io, __eql, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleStartRenderProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:157:13
复杂度: 0
定义变量: __ret, __lit, __mandatory_sign
使用变量: , __a, __b, __first2, __pos, __position, __lc, __shift, __x_copy, __predicate, __mix_hi, __mix_lo, __x1y1, __x0y0, debugApp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleAttachRenderProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleAttachRenderProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:157:20
复杂度: 0
定义变量: __lit
使用变量: , __a, __b, __first2, __pos, __position, __lc, __shift, __x_copy, __predicate, __mix_hi, __mix_lo, __x1y1, __x0y0, debugApp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleAttachRenderProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:159:13
复杂度: 0
定义变量: __r, registration, __hi
使用变量: , __x, __obj, __i, __other, __pos, __ret, __s, __loc, __facets, memory_order_seq_cst, Get, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetRenderProcessTerminationStatus(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetRenderProcessTerminationStatus
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:159:20
复杂度: 0
定义变量: registration, __hi
使用变量: , __obj, __i, __other, __s, __facets, memory_order_seq_cst, Get, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetRenderProcessTerminationStatus(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:161:13
复杂度: 0
定义变量: __max_digits10, _S_timezones, tagNames
使用变量: , __old_val, __n, __first, __last, __f, __end, __cont, __beg, __outstr, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetConfiguration(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetConfiguration
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:161:20
复杂度: 0
定义变量: __max_digits10, _S_timezones
使用变量: , __first, __last, __f, __end, __cont, __beg, __outstr, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetConfiguration(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:163:13
复杂度: 0
定义变量: __ts
使用变量: , __b, __first, __s, __shift, operation_not_permitted, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUpdateConfiguration(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUpdateConfiguration
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:163:20
复杂度: 0
定义变量: __ts
使用变量: , __b, __first, __s, __shift, operation_not_permitted, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUpdateConfiguration(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:165:13
复杂度: 0
定义变量: __digits10, __alloc
使用变量: , __r, __x, __comp, __first1, __last1, __m, __svt, __i1, __i2, _Base, _Digs, resource_deadlock_would_occur, tagNames, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRegisterConfigurationObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRegisterConfigurationObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:165:20
复杂度: 0
定义变量: __digits10
使用变量: , __comp, __first1, __last1, __m, __i1, __i2, _Base, _Digs, resource_deadlock_would_occur, tagNames, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRegisterConfigurationObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:167:13
复杂度: 0
定义变量: __plus
使用变量: , __x, __a, __b, __y, __c, __args, __alloc, npos, __lit, _S_iplus, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUnregisterConfigurationObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUnregisterConfigurationObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:167:20
复杂度: 0
定义变量: 
使用变量: , __a, __b, __y, __c, __args, __alloc, __lit, _S_iplus, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUnregisterConfigurationObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:169:13
复杂度: 0
定义变量: 
使用变量: , __r, __n, __d, __last1, __c, __m, __lc, IPCRPC_SUB_MODULE_CODE, swap, __clock, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetProcessRunningInformation(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetProcessRunningInformation
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:169:20
复杂度: 0
定义变量: 
使用变量: , __n, __d, __c, __m, __lc, IPCRPC_SUB_MODULE_CODE, swap, __clock, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetProcessRunningInformation(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:171:13
复杂度: 0
定义变量: __p, _S_timezones
使用变量: __a, __d, __n1, _S_local_capacity, __p1, __param, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleDumpHeapMemory(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleDumpHeapMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:171:20
复杂度: 0
定义变量: __p, _S_timezones
使用变量: __a, __d, __n1, _S_local_capacity, __p1, __param, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleDumpHeapMemory(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:173:13
复杂度: 0
定义变量: __is_signed, __n, __d1, __a, tagNames
使用变量: , __r, __d, __last1, __c, __end, __l, __m, __cont, __beg, operator&, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleDumpJsHeapMemory(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleDumpJsHeapMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:173:20
复杂度: 0
定义变量: __is_signed, __d1
使用变量: , __r, __d, __last1, __c, __end, __m, operator&, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleDumpJsHeapMemory(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:175:13
复杂度: 0
定义变量: _Nd
使用变量: , __r, __x, __a, __b, __p, __len, __args, __fn, _S_red, __end, __capacity, memory_order_seq_cst, tagNames, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetRunningMultiAppInfoByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetRunningMultiAppInfoByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:175:20
复杂度: 0
定义变量: _Nd
使用变量: , __r, __x, __a, __b, __p, __len, __args, __fn, _S_red, __capacity, memory_order_seq_cst, tagNames, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetRunningMultiAppInfoByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:177:5
复杂度: 0
定义变量: __s, __e
使用变量: , __n, __p, __first, __last, __len, __pos, __beg, INVALID_FD
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return INVALID_FD;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInnerThird
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:180:21
复杂度: 10
定义变量: 
使用变量: , __i, __is_constant_evaluated, __builtin_unreachable, __old, __guard
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::OnRemoteRequestInnerThird(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    switch (static_cast<uint32_t>(code)) {
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_APP_RUNNING_STATE):
            return HandleGetAppRunningStateByBundleName(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_LOAD_REPAIR_PATCH):
            return HandleNotifyLoadRepairPatch(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_HOT_RELOAD_PAGE):
            return HandleNotifyHotReloadPage(data, reply);
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_UNLOAD_REPAIR_PATCH):
            return HandleNotifyUnLoadRepairPatch(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_SHARED_BUNDLE_RUNNING):
            return HandleIsSharedBundleRunning(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_NATIVE_PROCESS_FOR_DEBUGGER):
            return HandleStartNativeProcessForDebugger(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_APP_FAULT):
            return HandleNotifyFault(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_All_RUNNING_INSTANCE_KEYS_BY_BUNDLENAME):
            return HandleGetAllRunningInstanceKeysByBundleName(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_All_RUNNING_INSTANCE_KEYS_BY_SELF):
            return HandleGetAllRunningInstanceKeysBySelf(data, reply);
    }
    return INVALID_FD;
}

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:183:5
复杂度: 10
定义变量: __n
使用变量: , __first, __last, __is_constant_evaluated, __builtin_unreachable, __first1, __alloc, __size, __xtrc, __found_mantissa, __old_p, __throw_concurrence_lock_error, __r1z, __r0z, __now
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (static_cast<uint32_t>(code)) {
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_APP_RUNNING_STATE):
            return HandleGetAppRunningStateByBundleName(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_LOAD_REPAIR_PATCH):
            return HandleNotifyLoadRepairPatch(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_HOT_RELOAD_PAGE):
            return HandleNotifyHotReloadPage(data, reply);
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_UNLOAD_REPAIR_PATCH):
            return HandleNotifyUnLoadRepairPatch(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_SHARED_BUNDLE_RUNNING):
            return HandleIsSharedBundleRunning(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_NATIVE_PROCESS_FOR_DEBUGGER):
            return HandleStartNativeProcessForDebugger(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_APP_FAULT):
            return HandleNotifyFault(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_All_RUNNING_INSTANCE_KEYS_BY_BUNDLENAME):
            return HandleGetAllRunningInstanceKeysByBundleName(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_All_RUNNING_INSTANCE_KEYS_BY_SELF):
            return HandleGetAllRunningInstanceKeysBySelf(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:185:13
复杂度: 0
定义变量: __n, BASE_EXT
使用变量: , _Num, __first, __last, __d, __first1, __result, __c, __node, __m, __lc, __r1y, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAppRunningStateByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAppRunningStateByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:185:20
复杂度: 0
定义变量: BASE_EXT
使用变量: , _Num, __last, __d, __result, __c, __m, __lc, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAppRunningStateByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:187:13
复杂度: 0
定义变量: __q0x, BASE_LOCAL_CALL
使用变量: , __r, __a, __b, _Idx, __d1, __args, __arg, __exchange_and_add_dispatch, operator&, __r1, errorInfoEnhance, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyLoadRepairPatch(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyLoadRepairPatch
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:187:20
复杂度: 0
定义变量: __q0x, BASE_LOCAL_CALL
使用变量: , __b, _Idx, __d1, __args, __arg, operator&, __r1, errorInfoEnhance, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyLoadRepairPatch(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:189:13
复杂度: 0
定义变量: __n, __one
使用变量: , __n, __c, __args, __pos, __lo1, __hi1, _S_word_bit, _Lp, __d0, __q0x, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyHotReloadPage(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyHotReloadPage
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:189:20
复杂度: 0
定义变量: __n, __one
使用变量: , __n, __c, __args, __pos, __lo1, __hi1, _S_word_bit, _Lp, __d0, __q0x, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyHotReloadPage(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:195:13
复杂度: 0
定义变量: __qend, __cur, __q0
使用变量: , _Nm, __p, __first, __is_constant_evaluated, __from, __two, __alloc, __arr, tag, BASE_APPDFR, GetDomainName1, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyUnLoadRepairPatch(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyUnLoadRepairPatch
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:195:20
复杂度: 0
定义变量: __qend, __cur, __q0
使用变量: , _Nm, __p, __first, __from, __two, __alloc, __arr, tag, GetDomainName1, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyUnLoadRepairPatch(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:197:13
复杂度: 0
定义变量: in_place, __last1
使用变量: , __n, __from, __len, __end, __beg, __mandatory_sign, jitEnabled, tag, BASE_DELEGATOR, GetDomainName3, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleIsSharedBundleRunning(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleIsSharedBundleRunning
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:197:20
复杂度: 0
定义变量: in_place, __last1
使用变量: , __from, __end, jitEnabled, tag, GetDomainName3, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleIsSharedBundleRunning(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:199:13
复杂度: 0
定义变量: __last2
使用变量: , __x, __b, __n, __d, __len, __source, __another, sign, _M_get_pointer, __cur, _S_word_bit, tag, BASE_WANTAGENT, GetDomainName5, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleStartNativeProcessForDebugger(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleStartNativeProcessForDebugger
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:199:20
复杂度: 0
定义变量: __last2
使用变量: , __x, __b, __d, __len, __source, sign, _M_get_pointer, __cur, _S_word_bit, tag, GetDomainName5, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleStartNativeProcessForDebugger(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:201:13
复杂度: 0
定义变量: __size, __len, __rem
使用变量: , __p, __first, __last, __first2, __last1, __last2, __lc, __unary_pred, _Nd, __r0, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyFault(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyFault
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:201:20
复杂度: 0
定义变量: __len, __rem
使用变量: __first, __last, __first2, __last1, __last2, __lc, __unary_pred, __r0, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyFault(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:203:13
复杂度: 0
定义变量: _Nd_ull
使用变量: , __digits, __first, __last, __comp, __first1, __first2, __len, __u, __j, __end, __beg, __dest, __cur, _S_word_bit, __old_p, _Base, _Digs, _Dig, _Pow, __rtime, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAllRunningInstanceKeysByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAllRunningInstanceKeysByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:203:20
复杂度: 0
定义变量: _Nd_ull
使用变量: , __digits, __comp, __first1, __len, __u, __j, __end, __cur, _Base, _Digs, _Dig, _Pow, __rtime, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAllRunningInstanceKeysByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:205:13
复杂度: 0
定义变量: __next, _Nd_u, __lock
使用变量: , __digits, _Nm, __t, __b, __i, __p, __first2, __f, __pos, __j, __to_end, __to_next, __urng, __rem, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAllRunningInstanceKeysBySelf(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAllRunningInstanceKeysBySelf
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:205:20
复杂度: 0
定义变量: __next, _Nd_u
使用变量: , __digits, _Nm, __t, __p, __first2, __f, __j, __to_next, __urng, __rem, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAllRunningInstanceKeysBySelf(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:207:5
复杂度: 0
定义变量: __found_dec
使用变量: , __r, __i, __first2, __j, __h, __io, __next, _S_min_alignment, INVALID_FD
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return INVALID_FD;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInnerFourth
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:210:21
复杂度: 10
定义变量: __cmp
使用变量: , __found_grouping, __date, __time, __dt, __throw_system_error
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::OnRemoteRequestInnerFourth(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_APP_FAULT_BY_SA):
            return HandleNotifyFaultBySA(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::JUDGE_SANDBOX_BY_PID):
            return HandleJudgeSandboxByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_APPFREEZE_FILTER):
            return HandleSetAppFreezeFilter(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_BUNDLE_NAME_BY_PID):
            return HandleGetBundleNameByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_RUNNING_PROCESS_INFO_BY_PID):
            return HandleGetRunningProcessInfoByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_ALL_RENDER_PROCESSES):
            return HandleGetAllRenderProcesses(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_PROCESS_MEMORY_BY_PID):
            return HandleGetProcessMemoryByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_TERMINATING_BY_PID):
            return HandleIsTerminatingByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::HAS_APP_RECORD):
            return HandleHasAppRecord(data, reply);
    }
    return INVALID_FD;
}

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:213:5
复杂度: 10
定义变量: 
使用变量: , __first, __size, __dnew, __negative, __testvalid, __prev, __secondChild, __throw_concurrence_unlock_error
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_APP_FAULT_BY_SA):
            return HandleNotifyFaultBySA(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::JUDGE_SANDBOX_BY_PID):
            return HandleJudgeSandboxByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_APPFREEZE_FILTER):
            return HandleSetAppFreezeFilter(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_BUNDLE_NAME_BY_PID):
            return HandleGetBundleNameByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_RUNNING_PROCESS_INFO_BY_PID):
            return HandleGetRunningProcessInfoByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_ALL_RENDER_PROCESSES):
            return HandleGetAllRenderProcesses(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_PROCESS_MEMORY_BY_PID):
            return HandleGetProcessMemoryByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_TERMINATING_BY_PID):
            return HandleIsTerminatingByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::HAS_APP_RECORD):
            return HandleHasAppRecord(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:219:13
复杂度: 0
定义变量: __diff, __shift, max_digits10
使用变量: , __first, __last, __d, __rhs, __from, __c, __builtin_clzll, __count, __end, __uhead, __s1, __s2, __beg, __eof, __state, _Nd, _Nd_ull, _Lp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyFaultBySA(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyFaultBySA
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:219:20
复杂度: 0
定义变量: __shift, max_digits10
使用变量: , __d, __rhs, __from, __c, __builtin_clzll, __count, __end, __uhead, __s1, __s2, __beg, __eof, __state, _Nd, _Nd_ull, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyFaultBySA(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:221:13
复杂度: 0
定义变量: __size, __coshift
使用变量: , __a, __n, __f, __hint, __digit, __shift, _Lp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleJudgeSandboxByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleJudgeSandboxByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:221:20
复杂度: 0
定义变量: __coshift
使用变量: , __n, __f, __hint, __shift, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleJudgeSandboxByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:223:13
复杂度: 0
定义变量: __n, MAX_RAWDATA_SIZE, __c2, is_signed
使用变量: , _Nm, __n, __p, __c, _S_local_capacity, __lc, __coshift, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleSetAppFreezeFilter(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleSetAppFreezeFilter
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:223:20
复杂度: 0
定义变量: MAX_RAWDATA_SIZE, __c2, is_signed
使用变量: _Nm, __n, __p, __c, _S_local_capacity, __lc, __coshift, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleSetAppFreezeFilter(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:225:13
复杂度: 0
定义变量: __ret, __new_n0
使用变量: , __ptr, __r, __x, __first, __last, __d, __pos, __c1, __clength, __seed, _Fnv_hash_bytes, __dnew, __found_sci, __n0, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetBundleNameByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetBundleNameByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:225:20
复杂度: 0
定义变量: __new_n0
使用变量: , __ptr, __x, __first, __last, __d, __c1, __clength, __seed, __dnew, __found_sci, __n0, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetBundleNameByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:227:13
复杂度: 0
定义变量: __high, __topIndex, __n0_top
使用变量: , __v, __x, __n, __s1, __s2, __gthread_mutex_lock, __cat, __shift, __holeIndex, _Nd_ull, __n0, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetRunningProcessInfoByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetRunningProcessInfoByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:227:20
复杂度: 0
定义变量: __high, __topIndex, __n0_top
使用变量: , __x, __n, __s1, __s2, __cat, __shift, __holeIndex, _Nd_ull, __n0, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetRunningProcessInfoByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:229:13
复杂度: 0
定义变量: __tmp, __xlen
使用变量: , __x, __y, __len, __d1, __d2, __length, __secondChild, __new_n1, __new_n0, __new_d, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAllRenderProcesses(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAllRenderProcesses
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:229:20
复杂度: 0
定义变量: __xlen
使用变量: , __x, __y, __len, __d2, __length, __new_n1, __new_n0, __new_d, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAllRenderProcesses(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:231:13
复杂度: 0
定义变量: __pend, is_exact
使用变量: , __ptr, __x, __a, __n, __i, __p, __e, __comp, __c, __builtin_clzll, __high, __str, __diff, __lit, _S_iE, __mp, __secondChild, _Lp, _Digs, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetProcessMemoryByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetProcessMemoryByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:231:20
复杂度: 0
定义变量: __pend, is_exact
使用变量: , __x, __a, __n, __i, __p, __e, __c, __high, __str, __diff, _S_iE, __secondChild, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetProcessMemoryByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:233:13
复杂度: 0
定义变量: __i, __len, __max_ull, __quot_lo
使用变量: , __b, __p, npos, __new_size, __lo, __hi, __secondChild, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleIsTerminatingByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleIsTerminatingByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:233:20
复杂度: 0
定义变量: __i, __quot_lo
使用变量: , __b, __p, __new_size, __lo, __hi, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleIsTerminatingByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:235:13
复杂度: 0
定义变量: __c, radix
使用变量: , __x, __a, __b, __n, __first, __val, __len, __builtin_clzll, __low, __hash, __new_size, __holeIndex, __secondChild, _Nd_ull, _Digs, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleHasAppRecord(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleHasAppRecord
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:235:20
复杂度: 0
定义变量: radix
使用变量: , __x, __b, __n, __first, __val, __len, __builtin_clzll, __low, __hash, __new_size, __secondChild, _Digs, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleHasAppRecord(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:237:5
复杂度: 0
定义变量: __tailSize
使用变量: , __ptr, __x, __a, __i, __y, __end, __beg, INVALID_FD
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return INVALID_FD;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInnerFifth
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:240:21
复杂度: 13
定义变量: __cmp
使用变量: , __n, __is_constant_evaluated, __builtin_unreachable, __guard, __ampm_format, __ampm, __days, __atomic_store
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::OnRemoteRequestInnerFifth(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_PIDS_BY_BUNDLENAME):
            return HandleGetRunningProcessInformation(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::CHANGE_APP_GC_STATE):
            return HandleChangeAppGcState(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_PAGE_SHOW):
            return HandleNotifyPageShow(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_PAGE_HIDE):
            return HandleNotifyPageHide(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_APP_RUNNING_STATUS_LISTENER):
            return HandleRegisterAppRunningStatusListener(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_APP_RUNNING_STATUS_LISTENER):
            return HandleUnregisterAppRunningStatusListener(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_APP_FOREGROUND_STATE_OBSERVER):
            return HandleRegisterAppForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_APP_FOREGROUND_STATE_OBSERVER):
            return HandleUnregisterAppForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_ABILITY_FOREGROUND_STATE_OBSERVER):
            return HandleRegisterAbilityForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_ABILITY_FOREGROUND_STATE_OBSERVER):
            return HandleUnregisterAbilityForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_APPLICATION_RUNNING):
            return HandleIsApplicationRunning(data, reply);
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_CHILD_PROCESS):
            return HandleStartChildProcess(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
    }
    return INVALID_FD;
}

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:243:5
复杂度: 13
定义变量: 
使用变量: , __value, __n, __p, __res, __c, __len, __pos, __low, __dest, __ref, __product
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_PIDS_BY_BUNDLENAME):
            return HandleGetRunningProcessInformation(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::CHANGE_APP_GC_STATE):
            return HandleChangeAppGcState(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_PAGE_SHOW):
            return HandleNotifyPageShow(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_PAGE_HIDE):
            return HandleNotifyPageHide(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_APP_RUNNING_STATUS_LISTENER):
            return HandleRegisterAppRunningStatusListener(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_APP_RUNNING_STATUS_LISTENER):
            return HandleUnregisterAppRunningStatusListener(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_APP_FOREGROUND_STATE_OBSERVER):
            return HandleRegisterAppForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_APP_FOREGROUND_STATE_OBSERVER):
            return HandleUnregisterAppForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_ABILITY_FOREGROUND_STATE_OBSERVER):
            return HandleRegisterAbilityForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_ABILITY_FOREGROUND_STATE_OBSERVER):
            return HandleUnregisterAbilityForegroundStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_APPLICATION_RUNNING):
            return HandleIsApplicationRunning(data, reply);
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_CHILD_PROCESS):
            return HandleStartChildProcess(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:249:13
复杂度: 0
定义变量: __can_fill
使用变量: , __x, __i, _Np, __p, __d, __pos, __cont, __remainder, __atime, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetRunningProcessInformation(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetRunningProcessInformation
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:249:20
复杂度: 0
定义变量: 
使用变量: , __x, __p, __d, __pos, __cont, __atime, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetRunningProcessInformation(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:251:13
复杂度: 0
定义变量: _Nd
使用变量: , __x, __a, __p, __y, __e, __c, __args, __m, __lo, __hi, operator<, _Digs, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleChangeAppGcState(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleChangeAppGcState
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:251:20
复杂度: 0
定义变量: _Nd
使用变量: , __x, __a, __y, __e, __c, __args, __lo, __hi, operator<, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleChangeAppGcState(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:253:13
复杂度: 0
定义变量: 
使用变量: , __x, __n, __p, __first, __last, __e, __comp, __c, __len, __l, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyPageShow(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyPageShow
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:253:20
复杂度: 0
定义变量: 
使用变量: , __x, __p, __first, __last, __e, __comp, __c, __len, __l, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyPageShow(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:255:13
复杂度: 0
定义变量: has_infinity
使用变量: __n, __first, __last, __e, __cxa_free_exception, __hf, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyPageHide(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyPageHide
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:255:20
复杂度: 0
定义变量: has_infinity
使用变量: __n, __first, __last, __e, __hf, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyPageHide(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:257:13
复杂度: 0
定义变量: __x, _Nd_ul, sentry
使用变量: , __digits, __t, __x, __a, __p, __y, __u, __end, __m, operator|, in, out, __lc, _S_word_bit, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRegisterAppRunningStatusListener(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRegisterAppRunningStatusListener
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:257:20
复杂度: 0
定义变量: __x, _Nd_ul, sentry
使用变量: , __digits, __t, __x, __a, __p, __y, __u, __end, __m, operator|, in, out, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRegisterAppRunningStatusListener(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:259:13
复杂度: 0
定义变量: FLAG_EXTEND_LIFE_TIME, __less, has_quiet_NaN
使用变量: , __a, __b, __n, _Idx, __testdecfound, __product, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUnregisterAppRunningStatusListener(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUnregisterAppRunningStatusListener
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:259:20
复杂度: 0
定义变量: FLAG_EXTEND_LIFE_TIME, __less, has_quiet_NaN
使用变量: , __a, _Idx, __product, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUnregisterAppRunningStatusListener(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:261:13
复杂度: 0
定义变量: 
使用变量: , __x, __a, __n, __p, __args, __l, __capacity, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRegisterAppForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRegisterAppForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:261:20
复杂度: 0
定义变量: 
使用变量: , __x, __a, __n, __args, __l, __capacity, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRegisterAppForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:263:13
复杂度: 0
定义变量: __cur, has_signaling_NaN
使用变量: , __value, __x, __first, __low, __w, __threshold, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUnregisterAppForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUnregisterAppForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:263:20
复杂度: 0
定义变量: __cur, has_signaling_NaN
使用变量: , __x, __first, __w, __threshold, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUnregisterAppForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:265:13
复杂度: 0
定义变量: 
使用变量: , __x, __n, _Idx, __first, __last, __c, __cont, __g, _M_i, __range, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRegisterAbilityForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRegisterAbilityForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:265:20
复杂度: 0
定义变量: 
使用变量: , __x, __n, _Idx, __first, __c, __g, _M_i, __range, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRegisterAbilityForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:267:13
复杂度: 0
定义变量: 
使用变量: , __x, __a, __n, __p, __c, __l, __gthread_mutex_timedlock, __lc, __hf, __ref, __cur, __ts, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUnregisterAbilityForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUnregisterAbilityForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:267:20
复杂度: 0
定义变量: 
使用变量: , __x, __a, __n, __c, __l, __lc, __hf, __cur, __ts, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUnregisterAbilityForegroundStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:269:13
复杂度: 0
定义变量: 
使用变量: , __x, __a, __n, _Num, __p, __first, __last, __d, __val, __nh, operator|, in, out, __found_sci, memory_order_seq_cst, __unary_pred, _Den, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleIsApplicationRunning(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleIsApplicationRunning
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:269:20
复杂度: 0
定义变量: 
使用变量: , __a, _Num, __p, __first, __last, __d, __val, operator|, in, out, __found_sci, memory_order_seq_cst, __unary_pred, _Den, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleIsApplicationRunning(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:275:5
复杂度: 0
定义变量: __this_alloc, __add
使用变量: , _Nm, __b, __is_constant_evaluated, __builtin_unreachable, __count, operator+=, memory_order_acq_rel, __ref, INVALID_FD
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return INVALID_FD;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInnerSixth
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:278:21
复杂度: 14
定义变量: 
使用变量: , __val, __pos, __sv, __days, __months, __atomic_load, __atomic_exchange, __throw_system_error
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::OnRemoteRequestInnerSixth(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_CHILD_PROCCESS_INFO_FOR_SELF):
            return HandleGetChildProcessInfoForSelf(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::ATTACH_CHILD_PROCESS):
            return HandleAttachChildProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::EXIT_CHILD_PROCESS_SAFELY):
            return HandleExitChildProcessSafely(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_FINAL_APP_PROCESS):
            return HandleIsFinalAppProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_CLEAR_UP_APPLICATION_DATA_BY_SELF):
            return HandleClearUpApplicationDataBySelf(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_RENDER_STATUS_OBSERVER):
            return HandleRegisterRenderStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_RENDER_STATUS_OBSERVER):
            return HandleUnregisterRenderStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_RENDER_STATUS):
            return HandleUpdateRenderState(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SIGN_RESTART_APP_FLAG):
            return HandleSignRestartAppFlag(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_APP_RUNNING_UNIQUE_ID_BY_PID):
            return HandleGetAppRunningUniqueIdByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_ALL_UI_EXTENSION_ROOT_HOST_PID):
            return HandleGetAllUIExtensionRootHostPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_ALL_UI_EXTENSION_PROVIDER_PID):
            return HandleGetAllUIExtensionProviderPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_APP_RUNNING_BY_BUNDLE_NAME_AND_USER_ID):
            return HandleIsAppRunningByBundleNameAndUserId(data, reply);
    }
    return INVALID_FD;
}

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:281:5
复杂度: 14
定义变量: 
使用变量: terminate, , __ptr, __digits, __first, __last, __one, __builtin_expect, __lo, __testvalid, __sign_size, __cur, __urngrange, __throw_concurrence_broadcast_error, __throw_concurrence_wait_error
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_CHILD_PROCCESS_INFO_FOR_SELF):
            return HandleGetChildProcessInfoForSelf(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::ATTACH_CHILD_PROCESS):
            return HandleAttachChildProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::EXIT_CHILD_PROCESS_SAFELY):
            return HandleExitChildProcessSafely(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_FINAL_APP_PROCESS):
            return HandleIsFinalAppProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_CLEAR_UP_APPLICATION_DATA_BY_SELF):
            return HandleClearUpApplicationDataBySelf(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_RENDER_STATUS_OBSERVER):
            return HandleRegisterRenderStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UNREGISTER_RENDER_STATUS_OBSERVER):
            return HandleUnregisterRenderStateObserver(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_RENDER_STATUS):
            return HandleUpdateRenderState(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SIGN_RESTART_APP_FLAG):
            return HandleSignRestartAppFlag(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_APP_RUNNING_UNIQUE_ID_BY_PID):
            return HandleGetAppRunningUniqueIdByPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_ALL_UI_EXTENSION_ROOT_HOST_PID):
            return HandleGetAllUIExtensionRootHostPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_ALL_UI_EXTENSION_PROVIDER_PID):
            return HandleGetAllUIExtensionProviderPid(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_APP_RUNNING_BY_BUNDLE_NAME_AND_USER_ID):
            return HandleIsAppRunningByBundleNameAndUserId(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:295:13
复杂度: 0
定义变量: _11, _Nd_ul
使用变量: , __i, __first, __last, __c, __cur, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleIsFinalAppProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleIsFinalAppProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:295:20
复杂度: 0
定义变量: _11, _Nd_ul
使用变量: , __first, __last, __c, __cur, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleIsFinalAppProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:297:13
复杂度: 0
定义变量: _13
使用变量: , __v, __n, __i, __p, __first, __e, __c, operator+=, __sep_pos, __new_result, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleClearUpApplicationDataBySelf(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleClearUpApplicationDataBySelf
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:297:20
复杂度: 0
定义变量: _13
使用变量: , __v, __n, __i, __p, __e, __c, operator+=, __sep_pos, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleClearUpApplicationDataBySelf(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:299:13
复杂度: 0
定义变量: _15, round_style
使用变量: , __x, __a, __first, __last, __e, __comp, generic_category, __lc, memory_order_seq_cst, __cur, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRegisterRenderStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRegisterRenderStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:299:20
复杂度: 0
定义变量: _15, round_style
使用变量: , __x, __first, __last, __e, __comp, generic_category, __lc, memory_order_seq_cst, __cur, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRegisterRenderStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:301:13
复杂度: 0
定义变量: __rlen, __buf, _17
使用变量: , __it, __t, __x, __n, __i, __first, __last, min, __u, __pos, __end, __beg, __sign_size, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUnregisterRenderStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUnregisterRenderStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:301:20
复杂度: 0
定义变量: __buf, _17
使用变量: , __it, __t, __x, __n, __i, __first, __last, min, __u, __pos, __end, __sign_size, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUnregisterRenderStateObserver(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:303:13
复杂度: 0
定义变量: __capacity, _19
使用变量: , __r, __x, __a, __b, _Lp, __gcd1, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUpdateRenderState(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUpdateRenderState
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:303:20
复杂度: 0
定义变量: __capacity, _19
使用变量: , __r, __x, __a, __b, _Lp, __gcd1, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUpdateRenderState(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:305:13
复杂度: 0
定义变量: _21
使用变量: , __a, _Idx, __byte_err, __wide_err, _S_mutex, _Lp, __gcd2, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleSignRestartAppFlag(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleSignRestartAppFlag
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:305:20
复杂度: 0
定义变量: _21
使用变量: , _Idx, __byte_err, __wide_err, _S_mutex, _Lp, __gcd2, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleSignRestartAppFlag(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:307:13
复杂度: 0
定义变量: _23
使用变量: , _Idx, __in, __c, __ret, __lit_zero, __urng, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAppRunningUniqueIdByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAppRunningUniqueIdByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:307:20
复杂度: 0
定义变量: _23
使用变量: , _Idx, __in, __c, __lit_zero, __urng, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAppRunningUniqueIdByPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:309:13
复杂度: 0
定义变量: __x, _25, __max_ull, den
使用变量: , __max, npos, __exchange_and_add_dispatch, _Lp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAllUIExtensionRootHostPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAllUIExtensionRootHostPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:309:20
复杂度: 0
定义变量: __x, _25, den
使用变量: , __max, npos, __exchange_and_add_dispatch, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAllUIExtensionRootHostPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:311:13
复杂度: 0
定义变量: __tmp, __high, _27, __less
使用变量: , __x, __obj, __res, __pos, __sv_check, __capacity, _Nd_ull, _Lp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetAllUIExtensionProviderPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetAllUIExtensionProviderPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:311:20
复杂度: 0
定义变量: __high, _27, __less
使用变量: , __x, __obj, __res, __pos, __capacity, _Nd_ull, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetAllUIExtensionProviderPid(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:313:13
复杂度: 0
定义变量: __len, __first, _29, __last1
使用变量: , __r, __first, __last, __res, __pos, __cont, __rlen, __buf, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleIsAppRunningByBundleNameAndUserId(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleIsAppRunningByBundleNameAndUserId
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:313:20
复杂度: 0
定义变量: _29
使用变量: , __r, __first, __last, __res, __pos, __rlen, __buf, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleIsAppRunningByBundleNameAndUserId(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:315:5
复杂度: 0
定义变量: 
使用变量: , __it, __ptr, __p, __first, __first1, __res, __c, __len, __m, __w, __lit, INVALID_FD
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return INVALID_FD;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: OnRemoteRequestInnerSeventh
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:318:21
复杂度: 20
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __result, __f, __c1, __throw_range_error, __is_valid_cmpexch_failure_order
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::OnRemoteRequestInnerSeventh(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_CONFIGURATION_BY_BUNDLE_NAME):
            return HandleUpdateConfigurationByBundleName(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_MEMORY_SIZE_STATE_CHANGED):
            return HandleNotifyMemorySizeStateChanged(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_SUPPORTED_PROCESS_CACHE_SELF):
            return HandleSetSupportedProcessCacheSelf(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_SUPPORTED_PROCESS_CACHE):
            return HandleSetSupportedProcessCache(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_RUNNING_PROCESSES_BY_BUNDLE_TYPE):
            return HandleGetRunningProcessesByBundleType(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_APP_ASSERT_PAUSE_STATE_SELF):
            return HandleSetAppAssertionPauseState(data, reply);
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_NATIVE_CHILD_PROCESS):
            return HandleStartNativeChildProcess(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::SAVE_BROWSER_CHANNEL):
            return HandleSaveBrowserChannel(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_APP_RUNNING):
            return HandleIsAppRunning(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::CHECK_CALLING_IS_USER_TEST_MODE):
            return HandleCheckCallingIsUserTestMode(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_PROCESS_DEPENDED_ON_WEB):
            return HandleNotifyProcessDependedOnWeb(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::KILL_PROCESS_DEPENDED_ON_WEB):
            return HandleKillProcessDependedOnWeb(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::RESTART_RESIDENT_PROCESS_DEPENDED_ON_WEB):
            return HandleRestartResidentProcessDependedOnWeb(data, reply);
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_ALL_CHILDREN_PROCESSES):
            return HandleGetAllChildrenProcesses(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_SUPPORTED_PROCESS_CACHE_PIDS):
            return HandleGetSupportedProcessCachePids(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_KIA_INTERCEPTOR):
            return HandleRegisterKiaInterceptor(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::CHECK_IS_KIA_PROCESS):
            return HandleCheckIsKiaProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::KILL_APP_SELF_WITH_INSTANCE_KEY):
            return HandleKillAppSelfWithInstanceKey(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_INSTANCE_KEY_BY_SPECIFIED_ID):
            return HandleUpdateInstanceKeyBySpecifiedId(data, reply);
    }
    return INVALID_FD;
}

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:321:5
复杂度: 20
定义变量: 
使用变量: , __x, __last, __lhs, __result, __position, __ret, __beg, __builtin_expect, __err, __to, __found_grouping, __next, __atomic_always_lock_free, __urng
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (static_cast<uint32_t>(code)) {
    #ifdef BGTASKMGR_CONTINUOUS_TASK_ENABLE
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_CONTINUOUSTASK_PROCESS):
            return HandleSetContinuousTaskProcess(data, reply);
    #endif
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_CONFIGURATION_BY_BUNDLE_NAME):
            return HandleUpdateConfigurationByBundleName(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_MEMORY_SIZE_STATE_CHANGED):
            return HandleNotifyMemorySizeStateChanged(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_SUPPORTED_PROCESS_CACHE_SELF):
            return HandleSetSupportedProcessCacheSelf(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_SUPPORTED_PROCESS_CACHE):
            return HandleSetSupportedProcessCache(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::APP_GET_RUNNING_PROCESSES_BY_BUNDLE_TYPE):
            return HandleGetRunningProcessesByBundleType(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::SET_APP_ASSERT_PAUSE_STATE_SELF):
            return HandleSetAppAssertionPauseState(data, reply);
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::START_NATIVE_CHILD_PROCESS):
            return HandleStartNativeChildProcess(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::SAVE_BROWSER_CHANNEL):
            return HandleSaveBrowserChannel(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::IS_APP_RUNNING):
            return HandleIsAppRunning(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::CHECK_CALLING_IS_USER_TEST_MODE):
            return HandleCheckCallingIsUserTestMode(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::NOTIFY_PROCESS_DEPENDED_ON_WEB):
            return HandleNotifyProcessDependedOnWeb(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::KILL_PROCESS_DEPENDED_ON_WEB):
            return HandleKillProcessDependedOnWeb(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::RESTART_RESIDENT_PROCESS_DEPENDED_ON_WEB):
            return HandleRestartResidentProcessDependedOnWeb(data, reply);
    #ifdef SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_ALL_CHILDREN_PROCESSES):
            return HandleGetAllChildrenProcesses(data, reply);
    #endif // SUPPORT_CHILD_PROCESS
        case static_cast<uint32_t>(AppMgrInterfaceCode::GET_SUPPORTED_PROCESS_CACHE_PIDS):
            return HandleGetSupportedProcessCachePids(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::REGISTER_KIA_INTERCEPTOR):
            return HandleRegisterKiaInterceptor(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::CHECK_IS_KIA_PROCESS):
            return HandleCheckIsKiaProcess(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::KILL_APP_SELF_WITH_INSTANCE_KEY):
            return HandleKillAppSelfWithInstanceKey(data, reply);
        case static_cast<uint32_t>(AppMgrInterfaceCode::UPDATE_INSTANCE_KEY_BY_SPECIFIED_ID):
            return HandleUpdateInstanceKeyBySpecifiedId(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:327:13
复杂度: 0
定义变量: __new_capacity, __rresult
使用变量: , __x, __n, __i, __first, __last1, __len1, __len2, operator+=, __testdecfound, __last_pos, __past, _Lp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUpdateConfigurationByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUpdateConfigurationByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:327:20
复杂度: 0
定义变量: __rresult
使用变量: , __x, __n, __i, __last1, __len1, __len2, __testdecfound, __last_pos, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUpdateConfigurationByBundleName(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:329:13
复杂度: 0
定义变量: 
使用变量: , __v, __x, _Num, __p, __from, __res, __c, __len, __lc, __lit, _S_iminus, __verify_grouping, _Nd, __aligned, __lock_free, __double_word, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyMemorySizeStateChanged(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyMemorySizeStateChanged
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:329:20
复杂度: 0
定义变量: 
使用变量: , __v, __x, _Num, __p, __from, __res, __len, __lc, __lit, _S_iminus, _Nd, __aligned, __lock_free, __double_word, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyMemorySizeStateChanged(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:331:13
复杂度: 0
定义变量: __tmp, __cmp, __wordbits
使用变量: , __r, __t, __a, __comp, __pos, __head, __str, __lc, __urange, __rlast1, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleSetSupportedProcessCacheSelf(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleSetSupportedProcessCacheSelf
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:331:20
复杂度: 0
定义变量: __cmp
使用变量: , __t, __a, __comp, __pos, __head, __urange, __rlast1, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleSetSupportedProcessCacheSelf(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:333:13
复杂度: 0
定义变量: __mid, __unique_ref
使用变量: , _Nm, __r, __a, __n, __first, __last, __len2, __hint, __pos, __cmp, __s, __plus, operator+=, __shiftbits, __gthread_recursive_mutex_timedlock, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleSetSupportedProcessCache(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleSetSupportedProcessCache
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:333:20
复杂度: 0
定义变量: __mid, __unique_ref
使用变量: , _Nm, __a, __n, __first, __last, __len2, __hint, __pos, __cmp, __s, __shiftbits, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleSetSupportedProcessCache(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:335:13
复杂度: 0
定义变量: __result
使用变量: , __value, __r, __first, __c, __len2, __pos, __dfault, __mid, __rresult, _Lp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetRunningProcessesByBundleType(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetRunningProcessesByBundleType
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:335:20
复杂度: 0
定义变量: __result
使用变量: , __value, __c, __len2, __pos, __dfault, __mid, __rresult, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetRunningProcessesByBundleType(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:337:13
复杂度: 0
定义变量: id, num
使用变量: , _Cache_hash_code, _Lp, __both_counts, __unique_ref, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleSetAppAssertionPauseState(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleSetAppAssertionPauseState
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:337:20
复杂度: 0
定义变量: id, num
使用变量: , _Cache_hash_code, _Lp, __both_counts, __unique_ref, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleSetAppAssertionPauseState(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:343:13
复杂度: 0
定义变量: 
使用变量: __i, __pos1, __n1, operator+, _Self, operator*, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleSaveBrowserChannel(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleSaveBrowserChannel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:343:20
复杂度: 0
定义变量: 
使用变量: __i, __pos1, __n1, operator+, _Self, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleSaveBrowserChannel(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:345:13
复杂度: 0
定义变量: 
使用变量: , __a, __n, __p, __first, __result, memory_order_seq_cst, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleIsAppRunning(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleIsAppRunning
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:345:20
复杂度: 0
定义变量: 
使用变量: , __n, __p, __first, __result, memory_order_seq_cst, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleIsAppRunning(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:347:13
复杂度: 0
定义变量: __cur, __extra_exp
使用变量: , __a, __result, __end, __m, __cmpexch_failure_order, _Lp, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleCheckCallingIsUserTestMode(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleCheckCallingIsUserTestMode
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:347:20
复杂度: 0
定义变量: __cur
使用变量: , __a, __result, __end, __m, __cmpexch_failure_order, _Lp, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleCheckCallingIsUserTestMode(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:349:13
复杂度: 0
定义变量: __tmp, __how_much, boolalpha
使用变量: , __x, __a, __n, __in, __first, __result, __pos, __l, __pos1, __n1, _S_boolalpha, _Lp, __to_destroy, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleNotifyProcessDependedOnWeb(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleNotifyProcessDependedOnWeb
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:349:20
复杂度: 0
定义变量: __how_much, boolalpha
使用变量: , __x, __a, __n, __in, __first, __pos, __l, __pos1, __n1, _S_boolalpha, _Lp, __to_destroy, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleNotifyProcessDependedOnWeb(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:351:13
复杂度: 0
定义变量: __n, __len, __uerngrange
使用变量: , __it, __v, __x, __tmp, __n, __p, __first, __last, __nh, memory_order_seq_cst, __cur, __urngrange, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleKillProcessDependedOnWeb(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleKillProcessDependedOnWeb
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:351:20
复杂度: 0
定义变量: __len
使用变量: , __v, __x, __n, __p, __first, __last, __nh, memory_order_seq_cst, __cur, __urngrange, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleKillProcessDependedOnWeb(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:353:13
复杂度: 0
定义变量: __n
使用变量: , __first, __position, __m, __cmpexch_failure_order, __urange, __uerngrange, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRestartResidentProcessDependedOnWeb(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRestartResidentProcessDependedOnWeb
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:353:20
复杂度: 0
定义变量: 
使用变量: , __position, __m, __cmpexch_failure_order, __urange, __uerngrange, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRestartResidentProcessDependedOnWeb(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:359:13
复杂度: 0
定义变量: 
使用变量: , __v, __x, __a, __args, __cat, __exchange_and_add_dispatch, operator+=, __sep_pos, __urng, __urngmin, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleGetSupportedProcessCachePids(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleGetSupportedProcessCachePids
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:359:20
复杂度: 0
定义变量: 
使用变量: , __v, __x, __a, __args, __cat, __exchange_and_add_dispatch, operator+=, __sep_pos, __urng, __urngmin, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleGetSupportedProcessCachePids(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:361:13
复杂度: 0
定义变量: 
使用变量: , __ptr, __it1, __result, __lc, __verify_grouping, __param, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleRegisterKiaInterceptor(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleRegisterKiaInterceptor
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:361:20
复杂度: 0
定义变量: 
使用变量: , __ptr, __it1, __lc, __verify_grouping, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleRegisterKiaInterceptor(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:363:13
复杂度: 0
定义变量: __tmp, internal
使用变量: , __ptr, __x, __a, __n, __i, __p, __y, __alloc, __c1, __c2, __s, _S_internal, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleCheckIsKiaProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleCheckIsKiaProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:363:20
复杂度: 0
定义变量: internal
使用变量: , __ptr, __x, __a, __n, __i, __p, __y, __alloc, __c2, __s, _S_internal, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleCheckIsKiaProcess(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:365:13
复杂度: 0
定义变量: 
使用变量: , __a, __tmp, __tag, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleKillAppSelfWithInstanceKey(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleKillAppSelfWithInstanceKey
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:365:20
复杂度: 0
定义变量: 
使用变量: , __a, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleKillAppSelfWithInstanceKey(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:367:13
复杂度: 0
定义变量: __capacity, left, _Nd
使用变量: , __a, __n, __first, __last, __d, __result, __beg, _S_left, __wstr, _S_single, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleUpdateInstanceKeyBySpecifiedId(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleUpdateInstanceKeyBySpecifiedId
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:367:20
复杂度: 0
定义变量: __capacity, left, _Nd
使用变量: , __a, __n, __first, __last, __result, _S_left, _S_single, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleUpdateInstanceKeyBySpecifiedId(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:369:5
复杂度: 0
定义变量: 
使用变量: , __x, __result, __length, __to, INVALID_FD
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return INVALID_FD;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleAttachApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:372:21
复杂度: 1
定义变量: 
使用变量: __result
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleAttachApplication(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    sptr<IRemoteObject> client = data.ReadRemoteObject();
    if (client == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "remote object null");
    }
    AttachApplication(client);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:375:34
复杂度: 0
定义变量: 
使用变量: __t, __end, __beg, __io, data
关键位置: 否
日志评分: 0
代码:
    sptr<IRemoteObject> client = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:376:5
复杂度: 1
定义变量: 
使用变量: , __n
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (client == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "remote object null");
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator==
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:376:9
复杂度: 0
定义变量: __out
使用变量: , _Idx, _Rb_tree_increment, __s, __length, operator==, client
关键位置: 否
日志评分: 0
代码:
    if (client == nullptr) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:377:9
复杂度: 0
定义变量: scientific, __to_destroy, logTag
使用变量: , __it, __a, __tmp, __first, __last, __out, __str, __err, _S_scientific, __convert_to_v, __units, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "remote object null");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:380:5
复杂度: 0
定义变量: __testpos
使用变量: , NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandlePreloadApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:383:21
复杂度: 1
定义变量: 
使用变量: __ptr
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandlePreloadApplication(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = Str16ToStr8(data.ReadString16());
    int32_t userId = data.ReadInt32();
    int32_t preloadMode = data.ReadInt32();
    int32_t appIndex = data.ReadInt32();
    auto result = PreloadApplication(bundleName, userId, static_cast<AppExecFwk::PreloadMode>(preloadMode), appIndex);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Stub HandlePreloadApplication Write result failed.");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:386:5
复杂度: 0
定义变量: __tmp, __c, __to, logTag
使用变量: , __p, __first, __last, __comp, __param, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:387:30
复杂度: 0
定义变量: 
使用变量: , __n, _Idx, __last, __constant_iterators, data
关键位置: 否
日志评分: 0
代码:
    std::string bundleName = Str16ToStr8(data.ReadString16());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:392:5
复杂度: 1
定义变量: __base
使用变量: , __ptr
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Stub HandlePreloadApplication Write result failed.");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:393:9
复杂度: 0
定义变量: __n, logTag
使用变量: , __x, __pos, __end, __str, __beg, __err, __sb, __io, __intl, memory_order_seq_cst, __atomic_sub_fetch, __urange, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Stub HandlePreloadApplication Write result failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:396:5
复杂度: 0
定义变量: 
使用变量: , __len, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleApplicationForegrounded
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:399:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleApplicationForegrounded(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    ApplicationForegrounded(data.ReadInt32());
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:402:5
复杂度: 0
定义变量: 
使用变量: , __t, __x, __n, __y, __rhs, __pred, __c, __size, __lit, _S_iminus, __negative, data
关键位置: 否
日志评分: 0
代码:
    ApplicationForegrounded(data.ReadInt32());

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:403:5
复杂度: 0
定义变量: __n
使用变量: , __tmp, __result, __negative, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleApplicationBackgrounded
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:406:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleApplicationBackgrounded(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    ApplicationBackgrounded(data.ReadInt32());
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:409:5
复杂度: 0
定义变量: id
使用变量: , __x, __i, __y, __in, __result, find, __atomic_sub_fetch, __default_lock_policy, data
关键位置: 否
日志评分: 0
代码:
    ApplicationBackgrounded(data.ReadInt32());

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:410:5
复杂度: 0
定义变量: __testoff
使用变量: __x, __ret, __testeof, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleApplicationTerminated
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:413:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleApplicationTerminated(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    ApplicationTerminated(data.ReadInt32());
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:416:5
复杂度: 0
定义变量: __found_zero, __last1, max_exponent
使用变量: , __n, _Idx, __first, __alloc, __cur, __urngrange, __urange, data
关键位置: 否
日志评分: 0
代码:
    ApplicationTerminated(data.ReadInt32());

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:417:5
复杂度: 0
定义变量: __tmp, __sep_pos, __first2
使用变量: , __n, __atomic_and_fetch, __t0, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleAbilityCleaned
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:420:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleAbilityCleaned(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    sptr<IRemoteObject> token = data.ReadRemoteObject();
    AbilityCleaned(token);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:423:33
复杂度: 0
定义变量: 
使用变量: _IsMove, __builtin_memmove, __s1, _S_izero, data
关键位置: 否
日志评分: 0
代码:
    sptr<IRemoteObject> token = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:425:5
复杂度: 0
定义变量: __next
使用变量: , __first, __atomic_or_fetch, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAmsMgr
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:428:21
复杂度: 3
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAmsMgr(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t result = NO_ERROR;
    sptr<IAmsMgr> amsMgr = GetAmsMgr();
    if (!amsMgr) {
        TAG_LOGE(AAFwkTag::APPMGR, "abilitymgr instance is nullptr");
        result = ERR_NO_INIT;
    } else {
        if (!reply.WriteRemoteObject(amsMgr->AsObject())) {
            TAG_LOGE(AAFwkTag::APPMGR, "failed to reply abilitymgr instance to client, for write parcel error");
            result = ERR_APPEXECFWK_PARCEL_ERROR;
        }
    }
    reply.WriteInt32(result);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:433:5
复杂度: 3
定义变量: 
使用变量: __n, __d, __ret, __s, __builtin_expect, __base
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!amsMgr) {
        TAG_LOGE(AAFwkTag::APPMGR, "abilitymgr instance is nullptr");
        result = ERR_NO_INIT;
    } else {
        if (!reply.WriteRemoteObject(amsMgr->AsObject())) {
            TAG_LOGE(AAFwkTag::APPMGR, "failed to reply abilitymgr instance to client, for write parcel error");
            result = ERR_APPEXECFWK_PARCEL_ERROR;
        }
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:434:9
复杂度: 0
定义变量: __uc, logTag
使用变量: , __t, __first1, __c, __last2, __f, __key, __lit, _S_ix, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "abilitymgr instance is nullptr");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:437:9
复杂度: 1
定义变量: __n
使用变量: , __d, __ret, __urng
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
        if (!reply.WriteRemoteObject(amsMgr->AsObject())) {
            TAG_LOGE(AAFwkTag::APPMGR, "failed to reply abilitymgr instance to client, for write parcel error");
            result = ERR_APPEXECFWK_PARCEL_ERROR;
        }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:438:13
复杂度: 0
定义变量: __n1, __uerngrange, is_iec559, logTag
使用变量: , __i1, __i2, _S_putback_length, __urngrange, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
            TAG_LOGE(AAFwkTag::APPMGR, "failed to reply abilitymgr instance to client, for write parcel error");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:443:5
复杂度: 0
定义变量: __sign
使用变量: , __first, __ret, __atomic_is_lock_free, __urange, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleClearUpApplicationData
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:446:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleClearUpApplicationData(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    std::string bundleName = data.ReadString();
    int32_t appCloneIndex = data.ReadInt32();
    int32_t userId = data.ReadInt32();
    int32_t result = ClearUpApplicationData(bundleName, appCloneIndex, userId);
    reply.WriteInt32(result);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:454:5
复杂度: 0
定义变量: __p, __prev, __new_finish
使用变量: __is_constant_evaluated, __lc, __sign, operator*, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleClearUpApplicationDataBySelf
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:457:21
复杂度: 0
定义变量: 
使用变量: __b, __is_constant_evaluated, __builtin_unreachable, memory_order_acq_rel, memory_order_acquire, memory_order_consume, __atomic_store_n
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleClearUpApplicationDataBySelf(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t userId = data.ReadInt32();
    int32_t result = ClearUpApplicationDataBySelf(userId);
    reply.WriteInt32(result);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:463:5
复杂度: 0
定义变量: 
使用变量: , __rhs, __comp, __first2, __len, __new_start, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAllRunningProcesses
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:466:21
复杂度: 3
定义变量: 
使用变量: __b, __is_constant_evaluated, __builtin_unreachable, memory_order_acq_rel, memory_order_acquire, memory_order_consume, __atomic_store_n
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleGetAllRunningProcesses(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    std::vector<RunningProcessInfo> info;
    auto result = GetAllRunningProcesses(info);
    reply.WriteInt32(info.size());
    for (auto &it : info) {
        if (!reply.WriteParcelable(&it)) {
            return ERR_INVALID_VALUE;
        }
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:477:5
复杂度: 1
定义变量: __digit
使用变量: __paddec
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:480:5
复杂度: 0
定义变量: 
使用变量: , __value, __new_finish, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetRunningMultiAppInfoByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:483:21
复杂度: 2
定义变量: 
使用变量: __b, __is_constant_evaluated, __builtin_unreachable, __c1, memory_order_acq_rel, memory_order_release
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetRunningMultiAppInfoByBundleName(MessageParcel &data, MessageParcel &reply)
{
    std::string bundleName = data.ReadString();
    RunningMultiAppInfo info;
    int32_t result = GetRunningMultiAppInfoByBundleName(bundleName, info);
    if (!reply.WriteParcelable(&info)) {
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: RunningMultiAppInfo
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:486:25
复杂度: 0
定义变量: info
使用变量: 
关键位置: 否
日志评分: 0
代码:
    RunningMultiAppInfo info;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:488:5
复杂度: 1
定义变量: 
使用变量: __value
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteParcelable(&info)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:491:5
复杂度: 1
定义变量: 
使用变量: , __d, __result, __testoverflow
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:492:9
复杂度: 0
定义变量: has_denorm, logTag
使用变量: __n, __first, __last, __alloc, __node, memory_order_seq_cst, _S_distance, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:495:5
复杂度: 0
定义变量: 
使用变量: , __d, __result, __m, operator&, __lc, __digit, __memory_order_mask, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAllRunningInstanceKeysBySelf
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:498:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAllRunningInstanceKeysBySelf(MessageParcel &data, MessageParcel &reply)
{
    std::vector<std::string> instanceKeys;
    int32_t result = GetAllRunningInstanceKeysBySelf(instanceKeys);
    if (!reply.WriteStringVector(instanceKeys)) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed to write isntanceKeys");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:502:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteStringVector(instanceKeys)) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed to write isntanceKeys");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:503:9
复杂度: 0
定义变量: logTag
使用变量: , __a, __n, __p, __d, __s, __done, _No_realloc, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "failed to write isntanceKeys");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:506:5
复杂度: 1
定义变量: 
使用变量: __i, __lhs, __len, __diff
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:507:9
复杂度: 0
定义变量: __i, __comp, __f, logTag
使用变量: , __rhs, __len2, __k, __io, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:510:5
复杂度: 0
定义变量: 
使用变量: __tmp, __n, __len, __u, __io, __counter, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAllRunningInstanceKeysByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:513:21
复杂度: 2
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable, __nbytes, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAllRunningInstanceKeysByBundleName(MessageParcel &data, MessageParcel &reply)
{
    std::string bundleName = data.ReadString();
    int32_t userId = data.ReadInt32();
    std::vector<std::string> instanceKeys;
    int32_t result = GetAllRunningInstanceKeysByBundleName(bundleName, instanceKeys, userId);
    if (!reply.WriteStringVector(instanceKeys)) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed to write isntanceKeys");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:519:5
复杂度: 1
定义变量: 
使用变量: __nbytes
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteStringVector(instanceKeys)) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed to write isntanceKeys");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:520:9
复杂度: 0
定义变量: __i, logTag
使用变量: , __a, __n, __i, __p, __len2, __alloc, __s, __testfail, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "failed to write isntanceKeys");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:523:5
复杂度: 1
定义变量: 
使用变量: __fill, __nbytes, __lock
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:524:9
复杂度: 0
定义变量: logTag
使用变量: , __tmp, __y, __d, __c, __pos, __m, __fill, __lc, __m2, __m1, __counter, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:527:5
复杂度: 0
定义变量: __i
使用变量: __res, __result, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetRunningProcessesByBundleType
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:530:21
复杂度: 3
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleGetRunningProcessesByBundleType(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t bundleType = data.ReadInt32();
    std::vector<RunningProcessInfo> info;
    auto result = GetRunningProcessesByBundleType(static_cast<BundleType>(bundleType), info);
    reply.WriteInt32(info.size());
    for (auto &it : info) {
        if (!reply.WriteParcelable(&it)) {
            return ERR_INVALID_VALUE;
        }
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:542:5
复杂度: 1
定义变量: 
使用变量: , __n
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:545:5
复杂度: 0
定义变量: 
使用变量: , __res, __result, __s1, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetProcessRunningInfosByUserId
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:548:21
复杂度: 3
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, _S_copy, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetProcessRunningInfosByUserId(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t userId = data.ReadInt32();
    std::vector<RunningProcessInfo> info;
    auto result = GetProcessRunningInfosByUserId(info, userId);
    reply.WriteInt32(info.size());
    for (auto &it : info) {
        if (!reply.WriteParcelable(&it)) {
            return ERR_INVALID_VALUE;
        }
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::HandleGetAllRunningProcesses end");
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:560:5
复杂度: 1
定义变量: 
使用变量: , __first, __len, __lc, __found_grouping
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:563:5
复杂度: 0
定义变量: is_always_lock_free, logTag
使用变量: __it, __rhs, __idx, __err, __pend, failbit, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::HandleGetAllRunningProcesses end");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:564:5
复杂度: 0
定义变量: 
使用变量: , __f, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAllRenderProcesses
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:567:21
复杂度: 3
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable, __io, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleGetAllRenderProcesses(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    std::vector<RenderProcessInfo> info;
    auto result = GetAllRenderProcesses(info);
    reply.WriteInt32(info.size());
    for (auto &it : info) {
        if (!reply.WriteParcelable(&it)) {
            return ERR_INVALID_VALUE;
        }
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:578:5
复杂度: 1
定义变量: 
使用变量: __err, __hf
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:581:5
复杂度: 0
定义变量: __pending, __new_start
使用变量: , NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleJudgeSandboxByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:605:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleJudgeSandboxByPid(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t pid = data.ReadInt32();
    bool isSandbox = false;
    auto result = JudgeSandboxByPid(pid, isSandbox);
    if (!reply.WriteBool(isSandbox)) {
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:611:5
复杂度: 1
定义变量: 
使用变量: __failed
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteBool(isSandbox)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:614:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:617:5
复杂度: 0
定义变量: 
使用变量: __first, __rhs, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleIsTerminatingByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:620:21
复杂度: 2
定义变量: 
使用变量: __p
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleIsTerminatingByPid(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t pid = data.ReadInt32();
    bool isTerminating = false;
    auto result = IsTerminatingByPid(pid, isTerminating);
    if (!reply.WriteBool(isTerminating)) {
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:626:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteBool(isTerminating)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:629:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:632:5
复杂度: 0
定义变量: 
使用变量: , __p, denorm_absent, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetProcessRunningInformation
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:635:21
复杂度: 2
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __pos
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleGetProcessRunningInformation(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    RunningProcessInfo info;
    auto result = GetProcessRunningInformation(info);
    if (!reply.WriteParcelable(&info)) {
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: RunningProcessInfo
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:638:24
复杂度: 0
定义变量: info
使用变量: 
关键位置: 否
日志评分: 0
代码:
    RunningProcessInfo info;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:640:5
复杂度: 1
定义变量: 
使用变量: __ti
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteParcelable(&info)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:643:5
复杂度: 1
定义变量: 
使用变量: __carry
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:646:5
复杂度: 0
定义变量: __tmp
使用变量: , __ptr, __s, __cmpexch_failure_order, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleAddAbilityStageDone
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:649:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleAddAbilityStageDone(MessageParcel &data, MessageParcel &reply)
{
    int32_t recordId = data.ReadInt32();
    AddAbilityStageDone(recordId);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:653:5
复杂度: 0
定义变量: _S_synced_with_stdio, __old_finish, _Np
使用变量: , __x, __n, __testt, __atomic_fetch_or, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyMemoryLevel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:656:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleNotifyMemoryLevel(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t level = data.ReadInt32();
    auto result = NotifyMemoryLevel(level);
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:661:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:664:5
复杂度: 0
定义变量: 
使用变量: , __v, __x, __len, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyProcMemoryLevel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:667:21
复杂度: 2
定义变量: 
使用变量: __ptr
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleNotifyProcMemoryLevel(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    std::unique_ptr<MemoryLevelInfo> memoryLevelInfo(data.ReadParcelable<MemoryLevelInfo>());
    if (memoryLevelInfo.get() == nullptr) {
        return ERR_INVALID_VALUE;
    }
    auto result = NotifyProcMemoryLevel(memoryLevelInfo->GetProcLevelMap());
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:671:5
复杂度: 1
定义变量: 
使用变量: __ret
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (memoryLevelInfo.get() == nullptr) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:675:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:678:5
复杂度: 0
定义变量: 
使用变量: , __a, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleDumpHeapMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:681:21
复杂度: 1
定义变量: 
使用变量: __one
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleDumpHeapMemory(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::HandleDumpHeapMemory.");
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t pid = data.ReadInt32();
    struct OHOS::AppExecFwk::MallocInfo mallocInfo;
    auto result = DumpHeapMemory(pid, mallocInfo);
    if (result != NO_ERROR) {
        return result;
    }
    reply.WriteParcelable(&mallocInfo);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:683:5
复杂度: 0
定义变量: logTag
使用变量: , __x, __y, __first, __last, __str, __new_start, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::HandleDumpHeapMemory.");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MallocInfo
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:686:41
复杂度: 0
定义变量: is_exact, mallocInfo
使用变量: 
关键位置: 否
日志评分: 0
代码:
    struct OHOS::AppExecFwk::MallocInfo mallocInfo;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:688:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (result != NO_ERROR) {
        return result;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:692:5
复杂度: 0
定义变量: __p
使用变量: , __fmtfl, operator|=, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleDumpJsHeapMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:695:21
复杂度: 2
定义变量: 
使用变量: __str, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleDumpJsHeapMemory(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::HandleDumpJsHeapMemory.");
    HITRACE_METER(HITRACE_TAG_APP);
    std::unique_ptr<JsHeapDumpInfo> info(data.ReadParcelable<JsHeapDumpInfo>());
    if (info == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");
        return ERR_INVALID_VALUE;
    }
    auto result = DumpJsHeapMemory(*info);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:697:5
复杂度: 0
定义变量: __len, max_exponent, logTag
使用变量: , __v, __a, __err, _S_get_c_locale, __xtrc, __convert_to_v, __format, memory_order_seq_cst, __old_start, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppMgrStub::HandleDumpJsHeapMemory.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:700:5
复杂度: 1
定义变量: __n
使用变量: __pred
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (info == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:701:9
复杂度: 0
定义变量: has_quiet_NaN, logTag
使用变量: , __n, __i, __first, __len, __end, __beg, __tmperr, __bkt, __new_start, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:705:5
复杂度: 1
定义变量: 
使用变量: __ret, __builtin_strcmp
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:706:9
复杂度: 0
定义变量: __ret, __c, logTag
使用变量: , __i, __first, __last, __hint, __k, __s, __ctype, __format, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write result error");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:709:5
复杂度: 0
定义变量: __xtrc
使用变量: __x, __p, __y, __ret, operator&=, __mask, operator~, __ctype, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleStartupResidentProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:712:21
复杂度: 3
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __one, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleStartupResidentProcess(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    std::vector<AppExecFwk::BundleInfo> bundleInfos;
    int32_t infoSize = data.ReadInt32();
    if (infoSize > CYCLE_LIMIT) {
        TAG_LOGE(AAFwkTag::APPMGR, "infoSize is too large");
        return ERR_INVALID_VALUE;
    }
    for (int32_t i = 0; i < infoSize; i++) {
        std::unique_ptr<AppExecFwk::BundleInfo> bundleInfo(data.ReadParcelable<AppExecFwk::BundleInfo>());
        if (!bundleInfo) {
            TAG_LOGE(AAFwkTag::APPMGR, "Read Parcelable infos failed.");
            return ERR_INVALID_VALUE;
        }
        bundleInfos.emplace_back(*bundleInfo);
    }
    StartupResidentProcess(bundleInfos);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:717:5
复杂度: 1
定义变量: __n
使用变量: , __ret, __tp, __str, __beg
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (infoSize > CYCLE_LIMIT) {
        TAG_LOGE(AAFwkTag::APPMGR, "infoSize is too large");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:718:9
复杂度: 0
定义变量: logTag
使用变量: , __obj, __a, __n, __first, __last, __days, __cur, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "infoSize is too large");

--------------------------------------------------------------------------------
代码块类型: Loop Block (for)
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:721:5
复杂度: 2
定义变量: 
使用变量: , __pos, __str
关键位置: 是
日志评分: 2
  - Loop Block (for) 日志存在: 得分 2
代码:
    for (int32_t i = 0; i < infoSize; i++) {
        std::unique_ptr<AppExecFwk::BundleInfo> bundleInfo(data.ReadParcelable<AppExecFwk::BundleInfo>());
        if (!bundleInfo) {
            TAG_LOGE(AAFwkTag::APPMGR, "Read Parcelable infos failed.");
            return ERR_INVALID_VALUE;
        }
        bundleInfos.emplace_back(*bundleInfo);
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: FOR_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:723:9
复杂度: 1
定义变量: 
使用变量: __str, pthread_setspecific, __state, __tm, round_toward_zero
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
        if (!bundleInfo) {
            TAG_LOGE(AAFwkTag::APPMGR, "Read Parcelable infos failed.");
            return ERR_INVALID_VALUE;
        }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: FOR_STMT[] → IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:724:13
复杂度: 0
定义变量: tinyness_before, logTag
使用变量: __t, __i, __u, __k, __str, __mem, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
            TAG_LOGE(AAFwkTag::APPMGR, "Read Parcelable infos failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:730:5
复杂度: 0
定义变量: 
使用变量: __i, __str, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRegisterApplicationStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:733:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRegisterApplicationStateObserver(MessageParcel &data, MessageParcel &reply)
{
    std::vector<std::string> bundleNameList;
    auto callback = iface_cast<AppExecFwk::IApplicationStateObserver>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    data.ReadStringVector(&bundleNameList);
    int32_t result = RegisterApplicationStateObserver(callback, bundleNameList);
    reply.WriteInt32(result);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:736:71
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IApplicationStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:737:5
复杂度: 1
定义变量: 
使用变量: , __tmp
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:738:9
复杂度: 0
定义变量: logTag
使用变量: , operator(), __pol, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:744:5
复杂度: 0
定义变量: 
使用变量: , __convert_to_v, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUnregisterApplicationStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:747:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUnregisterApplicationStateObserver(MessageParcel &data, MessageParcel &reply)
{
    auto callback = iface_cast<AppExecFwk::IApplicationStateObserver>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = UnregisterApplicationStateObserver(callback);
    reply.WriteInt32(result);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:749:71
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IApplicationStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:750:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:751:9
复杂度: 0
定义变量: __n, logTag
使用变量: , __first, __last, __d, __s, __refs, __atomic_add_fetch, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:756:5
复杂度: 0
定义变量: __ite, __old_finish
使用变量: __io, __tmperr, __atomic_add_fetch, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRegisterAbilityForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:759:21
复杂度: 2
定义变量: 
使用变量: __c1
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRegisterAbilityForegroundStateObserver(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    auto callback = iface_cast<AppExecFwk::IAbilityForegroundStateObserver>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = RegisterAbilityForegroundStateObserver(callback);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:762:77
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IAbilityForegroundStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:763:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:764:9
复杂度: 0
定义变量: logTag
使用变量: , __n, __end, __beg, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:768:5
复杂度: 1
定义变量: 
使用变量: __size, __beg
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:769:9
复杂度: 0
定义变量: logTag
使用变量: , __first, _IsMove, __pos, __end, __fmt, __beg, __mutex, pthread_mutex_timedlock, __abs_timeout, __mem, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:772:5
复杂度: 0
定义变量: __h
使用变量: , __c1, __beg, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUnregisterAbilityForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:775:21
复杂度: 1
定义变量: 
使用变量: __h
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUnregisterAbilityForegroundStateObserver(MessageParcel &data, MessageParcel &reply)
{
    auto callback = iface_cast<AppExecFwk::IAbilityForegroundStateObserver>(data.ReadRemoteObject());
    int32_t result = UnregisterAbilityForegroundStateObserver(callback);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:777:77
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IAbilityForegroundStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:779:5
复杂度: 1
定义变量: 
使用变量: __x, __beg, __cs, __ctype
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:780:9
复杂度: 0
定义变量: logTag
使用变量: , __x, __position, __cur, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:783:5
复杂度: 0
定义变量: 
使用变量: __x, __state, __tm, __wcs, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetForegroundApplications
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:786:21
复杂度: 3
定义变量: 
使用变量: __b, __is_constant_evaluated, __builtin_unreachable, memory_order_acq_rel, memory_order_acquire, memory_order_consume, __atomic_store_n, __once_callable, __once_call
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleGetForegroundApplications(MessageParcel &data, MessageParcel &reply)
{
    std::vector<AppStateData> appStateDatas;
    int32_t result = GetForegroundApplications(appStateDatas);
    reply.WriteInt32(appStateDatas.size());
    for (auto &it : appStateDatas) {
        if (!reply.WriteParcelable(&it)) {
            return ERR_INVALID_VALUE;
        }
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return result;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:796:5
复杂度: 1
定义变量: 
使用变量: __pred
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:799:5
复杂度: 0
定义变量: __new_start
使用变量: __a, __beg, result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return result;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleStartUserTestProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:802:21
复杂度: 2
定义变量: 
使用变量: , __b, __is_constant_evaluated, __builtin_unreachable, __h, memory_order_acq_rel, memory_order_acquire, memory_order_release, memory_order_consume, __atomic_store_n
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleStartUserTestProcess(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<AAFwk::Want> want(data.ReadParcelable<AAFwk::Want>());
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }
    std::unique_ptr<BundleInfo> bundleInfo(data.ReadParcelable<BundleInfo>());
    if (bundleInfo == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }
    auto observer = data.ReadRemoteObject();
    int32_t userId = data.ReadInt32();
    int32_t result = StartUserTestProcess(*want, observer, *bundleInfo, userId);
    reply.WriteInt32(result);
    return result;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:805:5
复杂度: 1
定义变量: 
使用变量: __i
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:806:9
复杂度: 0
定义变量: logTag
使用变量: __x, __pair, _S_minimum, piecewise_construct, __new_start, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:810:5
复杂度: 1
定义变量: 
使用变量: __n, __i
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (bundleInfo == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:811:9
复杂度: 0
定义变量: __pos, digits10, logTag
使用变量: , __x, __n, __y, __pair, __c, __true_hint, __s1, __mutex, __gthread_mutex_lock, __tmperr, __cur, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:814:21
复杂度: 0
定义变量: is_integer
使用变量: , __x, _S_maximum, data
关键位置: 否
日志评分: 0
代码:
    auto observer = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:818:5
复杂度: 0
定义变量: 
使用变量: , __pos, __size, result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return result;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleFinishUserTest
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:821:21
复杂度: 0
定义变量: 
使用变量: , __b, __is_constant_evaluated, __builtin_unreachable, memory_order_acq_rel, memory_order_release
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleFinishUserTest(MessageParcel &data, MessageParcel &reply)
{
    std::string msg = data.ReadString();
    int64_t resultCode = data.ReadInt64();
    std::string bundleName = data.ReadString();
    int32_t result = FinishUserTest(msg, resultCode, bundleName);
    reply.WriteInt32(result);
    return result;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:828:5
复杂度: 0
定义变量: 
使用变量: __before_n, result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return result;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: RegisterApplicationStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:831:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::RegisterApplicationStateObserver(const sptr<IApplicationStateObserver> &observer,
    const std::vector<std::string> &bundleNameList)
{
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:834:5
复杂度: 0
定义变量: 
使用变量: , __v, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: UnregisterApplicationStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:837:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::UnregisterApplicationStateObserver(const sptr<IApplicationStateObserver> &observer)
{
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:839:5
复杂度: 0
定义变量: __uppercase
使用变量: __pos, __size, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: GetForegroundApplications
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:842:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::GetForegroundApplications(std::vector<AppStateData> &list)
{
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:844:5
复杂度: 0
定义变量: __start
使用变量: , __buf, __lit, __ampm, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleScheduleAcceptWantDone
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:847:21
复杂度: 1
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __is_valid_cmpexch_failure_order, __m2, __throw_system_error
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleScheduleAcceptWantDone(MessageParcel &data, MessageParcel &reply)
{
    auto recordId = data.ReadInt32();
    AAFwk::Want *want = data.ReadParcelable<AAFwk::Want>();
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }
    auto flag = data.ReadString();

    ScheduleAcceptWantDone(recordId, *want, flag);
    delete want;
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:851:5
复杂度: 1
定义变量: 
使用变量: __x, __tp
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:852:9
复杂度: 0
定义变量: tinyness_before, logTag
使用变量: , __x, __f, __l, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:859:5
复杂度: 0
定义变量: __e
使用变量: __x, __i, __e, eq_int_type, pthread_cond_signal, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleScheduleNewProcessRequestDone
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:862:21
复杂度: 1
定义变量: 
使用变量: , __r, __is_constant_evaluated, __builtin_unreachable, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleScheduleNewProcessRequestDone(MessageParcel &data, MessageParcel &reply)
{
    auto recordId = data.ReadInt32();
    AAFwk::Want *want = data.ReadParcelable<AAFwk::Want>();
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }
    auto flag = data.ReadString();

    ScheduleNewProcessRequestDone(recordId, *want, flag);
    delete want;
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:866:5
复杂度: 1
定义变量: 
使用变量: __str, __beg
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:867:9
复杂度: 0
定义变量: __cur, logTag
使用变量: , __x, __a, __result, __tag, __p2, __atomic_compare_exchange_n, __p1, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:874:5
复杂度: 0
定义变量: res
使用变量: , __i, __str, __tmperr, fill, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAbilityRecordsByProcessID
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:877:21
复杂度: 3
定义变量: 
使用变量: __r, __is_constant_evaluated, __builtin_unreachable, __c1, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAbilityRecordsByProcessID(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t pid = data.ReadInt32();
    std::vector<sptr<IRemoteObject>> tokens;
    auto result = GetAbilityRecordsByProcessID(pid, tokens);
    reply.WriteInt32(tokens.size());
    for (auto &it : tokens) {
        if (!reply.WriteRemoteObject(it)) {
            TAG_LOGE(AAFwkTag::APPMGR, "failed to write query result.");
            return ERR_FLATTEN_OBJECT;
        }
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:890:5
复杂度: 1
定义变量: 
使用变量: __first
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:893:5
复杂度: 0
定义变量: size
使用变量: , __first, __h, __c1, other, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandlePreStartNWebSpawnProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:896:21
复杂度: 1
定义变量: 
使用变量: __r
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandlePreStartNWebSpawnProcess(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGI(AAFwkTag::APPMGR, "HandlePreNWebSpawnProcess");
    int32_t result = PreStartNWebSpawnProcess();
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");
        return ERR_INVALID_VALUE;
    }
    return result;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:898:5
复杂度: 0
定义变量: logTag
使用变量: , __r, __x, __n, __y, __first, __str, __lc, __tmperr, __cur, res, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGI(AAFwkTag::APPMGR, "HandlePreNWebSpawnProcess");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:900:5
复杂度: 1
定义变量: 
使用变量: other
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:901:9
复杂度: 0
定义变量: logTag
使用变量: __v, __n, __hint, __node_gen, __h, __data, __state, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:904:5
复杂度: 0
定义变量: 
使用变量: __result, result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return result;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleStartRenderProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:907:21
复杂度: 2
定义变量: 
使用变量: __r, __str
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleStartRenderProcess(MessageParcel &data, MessageParcel &reply)
{
    std::string renderParam = data.ReadString();
    int32_t ipcFd = data.ReadFileDescriptor();
    int32_t sharedFd = data.ReadFileDescriptor();
    int32_t crashFd = data.ReadFileDescriptor();
    int32_t renderPid = 0;
    bool isGPU = data.ReadBool();
    int32_t result =
        StartRenderProcess(renderParam, ipcFd, sharedFd, crashFd, renderPid, isGPU);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(renderPid)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write renderPid error.");
        return ERR_INVALID_VALUE;
    }
    return result;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadFileDescriptor
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:910:21
复杂度: 0
定义变量: __osize, is_always_lock_free, is_modulo
使用变量: , __i, __p, __last, __mem, is_signed, data
关键位置: 否
日志评分: 0
代码:
    int32_t ipcFd = data.ReadFileDescriptor();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadFileDescriptor
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:911:24
复杂度: 0
定义变量: __dest
使用变量: , __first, __position, __n1, __osize, __lo, __hi, data
关键位置: 否
日志评分: 0
代码:
    int32_t sharedFd = data.ReadFileDescriptor();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadFileDescriptor
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:912:23
复杂度: 0
定义变量: traps
使用变量: , __position, __lo, __hi, __to, data
关键位置: 否
日志评分: 0
代码:
    int32_t crashFd = data.ReadFileDescriptor();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:917:5
复杂度: 1
定义变量: 
使用变量: , __tp, __beg
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:918:9
复杂度: 0
定义变量: logTag
使用变量: , __len, __args, __end, __beg, __io, __lit, _S_oplus, __tmperr, __first_res, __second_res, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:921:5
复杂度: 1
定义变量: 
使用变量: __tp, __base
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(renderPid)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write renderPid error.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:922:9
复杂度: 0
定义变量: __i, is_specialized, logTag
使用变量: , __x, __tmp, __n, __i, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write renderPid error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:925:5
复杂度: 0
定义变量: 
使用变量: __x, __beg, __basefield, result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return result;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleAttachRenderProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:928:21
复杂度: 0
定义变量: 
使用变量: __r
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleAttachRenderProcess(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    sptr<IRemoteObject> scheduler = data.ReadRemoteObject();
    AttachRenderProcess(scheduler);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:931:37
复杂度: 0
定义变量: 
使用变量: __d, __uppercase, data
关键位置: 否
日志评分: 0
代码:
    sptr<IRemoteObject> scheduler = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:933:5
复杂度: 0
定义变量: 
使用变量: __p, __lit, __cs, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleSaveBrowserChannel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:936:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleSaveBrowserChannel(MessageParcel &data, MessageParcel &reply)
{
    sptr<IRemoteObject> browser = data.ReadRemoteObject();
    SaveBrowserChannel(browser);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:938:35
复杂度: 0
定义变量: 
使用变量: , __u, __q, data
关键位置: 否
日志评分: 0
代码:
    sptr<IRemoteObject> browser = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:940:5
复杂度: 0
定义变量: 
使用变量: , __x, __i, __w, __base, operator=, __ctype, operator++, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetRenderProcessTerminationStatus
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:943:21
复杂度: 3
定义变量: 
使用变量: , __io
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetRenderProcessTerminationStatus(MessageParcel &data, MessageParcel &reply)
{
    int32_t renderPid = data.ReadInt32();
    if (renderPid <= 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "invalid renderPid value");
        return ERR_INVALID_VALUE;
    }
    int status = 0;
    int32_t result = GetRenderProcessTerminationStatus(renderPid, status);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(status)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write status error.");
        return ERR_INVALID_VALUE;
    }
    return result;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:946:5
复杂度: 1
定义变量: 
使用变量: __base
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (renderPid <= 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "invalid renderPid value");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:947:9
复杂度: 0
定义变量: logTag
使用变量: __n, __first, __result, __c, __beg, showbase, __ctype, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "invalid renderPid value");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:952:5
复杂度: 1
定义变量: 
使用变量: __x, __base, __mem, __state
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:953:9
复杂度: 0
定义变量: __cerb, max_exponent, logTag
使用变量: , __t, __x, __in, __first, __last, __u, __mem, otherRef, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write result error.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:956:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(status)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write status error.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:957:9
复杂度: 0
定义变量: __i, has_quiet_NaN, logTag
使用变量: __n, __i, __args, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write status error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:960:5
复杂度: 0
定义变量: __buf
使用变量: __x, denorm_absent, result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return result;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetConfiguration
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:963:21
复杂度: 3
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetConfiguration(MessageParcel &data, MessageParcel &reply)
{
    Configuration config;
    int ret = GetConfiguration(config);
    if (ret != ERR_OK) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub GetConfiguration error");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteParcelable(&config)) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub GetConfiguration error");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:967:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != ERR_OK) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub GetConfiguration error");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:968:9
复杂度: 0
定义变量: __i, __a2, logTag
使用变量: , __value, __a, __first, __last, __c, __k, __tmperr, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub GetConfiguration error");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:971:5
复杂度: 1
定义变量: 
使用变量: , __x, __base, __n_elt
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteParcelable(&config)) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub GetConfiguration error");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:972:9
复杂度: 0
定义变量: _S_default_pattern, logTag
使用变量: , __x, __a, __c, __args, __k, __c1, __c2, __base, __state, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub GetConfiguration error");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:975:5
复杂度: 1
定义变量: 
使用变量: __i, __builtin_expect
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:978:5
复杂度: 0
定义变量: __rehash
使用变量: , __i, __builtin_memcpy, otherRef, __dur, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUpdateConfiguration
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:981:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUpdateConfiguration(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<Configuration> config(data.ReadParcelable<Configuration>());
    if (!config) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");
        return ERR_INVALID_VALUE;
    }
    int32_t userId = data.ReadInt32();
    int32_t ret = UpdateConfiguration(*config, userId);
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:984:5
复杂度: 1
定义变量: 
使用变量: __base
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!config) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:985:9
复杂度: 0
定义变量: logTag
使用变量: , __x, __tmp, __n, __first, __last, __c, __end, __beg, __extracted, __eof, __tmperr, otherRef, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:990:5
复杂度: 1
定义变量: 
使用变量: , __beg
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:993:5
复杂度: 0
定义变量: 
使用变量: , __i, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUpdateConfigurationByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:996:21
复杂度: 2
定义变量: 
使用变量: __in, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUpdateConfigurationByBundleName(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<Configuration> config(data.ReadParcelable<Configuration>());
    if (!config) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");
        return ERR_INVALID_VALUE;
    }
    std::string name = data.ReadString();
    auto appIndex = data.ReadInt32();
    int32_t ret = UpdateConfigurationByBundleName(*config, name, appIndex);
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:999:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!config) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1000:9
复杂度: 0
定义变量: __k, logTag
使用变量: __nh, _Dummy, __beg, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppMgrStub read configuration error");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1006:5
复杂度: 1
定义变量: __len
使用变量: __first, __tmperr
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1009:5
复杂度: 0
定义变量: 
使用变量: , __result, __ctype, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRegisterConfigurationObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1012:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRegisterConfigurationObserver(MessageParcel &data, MessageParcel &reply)
{
    auto observer = iface_cast<AppExecFwk::IConfigurationObserver>(data.ReadRemoteObject());
    if (observer == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Observer is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = RegisterConfigurationObserver(observer);
    reply.WriteInt32(result);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1014:68
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto observer = iface_cast<AppExecFwk::IConfigurationObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1015:5
复杂度: 1
定义变量: 
使用变量: __io
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (observer == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Observer is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1016:9
复杂度: 0
定义变量: __asize, __clength, logTag
使用变量: __refs, operator&, floatfield, __words, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Observer is null.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1021:5
复杂度: 0
定义变量: __extracted, __cs
使用变量: __ctype, __extrabits, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUnregisterConfigurationObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1024:21
复杂度: 1
定义变量: __rebound_pred
使用变量: , __is_constant_evaluated, __builtin_unreachable, __nh, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUnregisterConfigurationObserver(MessageParcel &data, MessageParcel &reply)
{
    auto observer = iface_cast<AppExecFwk::IConfigurationObserver>(data.ReadRemoteObject());
    if (observer == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Observer is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = UnregisterConfigurationObserver(observer);
    reply.WriteInt32(result);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1026:68
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto observer = iface_cast<AppExecFwk::IConfigurationObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1027:5
复杂度: 1
定义变量: 
使用变量: __len, __hash, __base, __fbuf
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (observer == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Observer is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1028:9
复杂度: 0
定义变量: is_always_lock_free, has_denorm, logTag
使用变量: __i, __len, __true_hint, __base, __tmperr, p, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Observer is null.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1033:5
复杂度: 0
定义变量: __h
使用变量: __new_size, __cs, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAppRunningStateByBundleName
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1036:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAppRunningStateByBundleName(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    auto ret = GetAppRunningStateByBundleName(bundleName);
    if (!reply.WriteBool(ret)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1039:5
复杂度: 0
定义变量: logTag
使用变量: __value, __v, __first, __extracted, __fbuf, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1042:5
复杂度: 1
定义变量: 
使用变量: __base, __prev_n
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteBool(ret)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1045:5
复杂度: 0
定义变量: __true_hint
使用变量: , __n, __result, __base, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyLoadRepairPatch
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1048:21
复杂度: 2
定义变量: 
使用变量: __n, __prev_n
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyLoadRepairPatch(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    auto callback = iface_cast<IQuickFixCallback>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    auto ret = NotifyLoadRepairPatch(bundleName, callback);
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1051:5
复杂度: 0
定义变量: __a, logTag
使用变量: , APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1053:51
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<IQuickFixCallback>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1054:5
复杂度: 1
定义变量: 
使用变量: , __i
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1055:9
复杂度: 0
定义变量: logTag
使用变量: , __obj, __n, round_toward_zero, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1059:5
复杂度: 1
定义变量: 
使用变量: __base
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1062:5
复杂度: 0
定义变量: __an
使用变量: __base, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyHotReloadPage
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1065:21
复杂度: 2
定义变量: 
使用变量: __in, __err, __ctype, __member
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyHotReloadPage(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    auto callback = iface_cast<IQuickFixCallback>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    auto ret = NotifyHotReloadPage(bundleName, callback);
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1068:5
复杂度: 0
定义变量: __tmp, logTag
使用变量: __value, __n, _Dummy, __err, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1070:51
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<IQuickFixCallback>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1071:5
复杂度: 1
定义变量: 
使用变量: __p, __wp
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1072:9
复杂度: 0
定义变量: __nh, logTag
使用变量: min, __a1, __a2, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1076:5
复杂度: 1
定义变量: 
使用变量: __n, __base
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1079:5
复杂度: 0
定义变量: 
使用变量: , __n, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyUnLoadRepairPatch
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1097:21
复杂度: 2
定义变量: 
使用变量: __r
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyUnLoadRepairPatch(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    auto callback = iface_cast<IQuickFixCallback>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    auto ret = NotifyUnLoadRepairPatch(bundleName, callback);
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1100:5
复杂度: 0
定义变量: __testvalid, logTag
使用变量: , __len, __off, __bkt, __code, denorm_absent, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1102:51
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<IQuickFixCallback>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1103:5
复杂度: 1
定义变量: 
使用变量: __base, __n_elt
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1104:9
复杂度: 0
定义变量: __count, logTag
使用变量: , __first, __last, __an, __n_elt, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1108:5
复杂度: 1
定义变量: 
使用变量: __first, __last
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(ret)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1111:5
复杂度: 0
定义变量: __i1
使用变量: , __first, __fill, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleIsSharedBundleRunning
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1114:21
复杂度: 1
定义变量: 
使用变量: , __x, __is_constant_evaluated, __builtin_unreachable, __io
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleIsSharedBundleRunning(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    uint32_t versionCode = data.ReadUint32();
    bool result = IsSharedBundleRunning(bundleName, versionCode);
    if (!reply.WriteBool(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1117:5
复杂度: 0
定义变量: logTag
使用变量: __x, __first, __result, __count, __builtin_expect, __i1, __lo, __hi, __nmatches, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1121:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteBool(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1124:5
复杂度: 0
定义变量: __minlen
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleStartNativeProcessForDebugger
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1127:21
复杂度: 2
定义变量: 
使用变量: __x, __y
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleStartNativeProcessForDebugger(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::unique_ptr<AAFwk::Want> want(data.ReadParcelable<AAFwk::Want>());
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }
    auto result = StartNativeProcessForDebugger(*want);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1130:5
复杂度: 0
定义变量: __tmp, logTag
使用变量: __x, __first, __s, __io, _Lp, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1132:5
复杂度: 1
定义变量: 
使用变量: , operator=
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1133:9
复杂度: 0
定义变量: logTag
使用变量: , __first, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1137:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1138:9
复杂度: 0
定义变量: logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1141:5
复杂度: 0
定义变量: __len
使用变量: __v, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetBundleNameByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1144:21
复杂度: 3
定义变量: 
使用变量: __this
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleGetBundleNameByPid(MessageParcel &data, MessageParcel &reply)
{
    int32_t pid = data.ReadInt32();
    std::string bundleName;
    int32_t uid;
    auto result = GetBundleNameByPid(pid, bundleName, uid);
    if (result != ERR_OK) {
        return result;
    }

    if (!reply.WriteString(bundleName)) {
        return ERR_INVALID_VALUE;
    }

    if (!reply.WriteInt32(uid)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: basic_string
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1147:17
复杂度: 0
定义变量: __plen, bundleName
使用变量: __i3
关键位置: 否
日志评分: 0
代码:
    std::string bundleName;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1150:5
复杂度: 1
定义变量: 
使用变量: __n, __match_longer
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (result != ERR_OK) {
        return result;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1154:5
复杂度: 1
定义变量: 
使用变量: __iter
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteString(bundleName)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1158:5
复杂度: 1
定义变量: 
使用变量: __s
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(uid)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1161:5
复杂度: 0
定义变量: 
使用变量: __r, __lhs, __first1, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetRunningProcessInfoByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1164:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetRunningProcessInfoByPid(MessageParcel &data, MessageParcel &reply)
{
    RunningProcessInfo processInfo;
    auto pid = static_cast<pid_t>(data.ReadInt32());
    auto result = GetRunningProcessInfoByPid(pid, processInfo);
    if (!reply.WriteParcelable(&processInfo)) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: RunningProcessInfo
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1166:24
复杂度: 0
定义变量: processInfo
使用变量: __last
关键位置: 否
日志评分: 0
代码:
    RunningProcessInfo processInfo;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1169:5
复杂度: 1
定义变量: 
使用变量: , __first, __result, __builtin_expect
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteParcelable(&processInfo)) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1170:9
复杂度: 0
定义变量: has_denorm_loss, logTag
使用变量: , __first, __s, __bkt_count, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "failed");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1173:5
复杂度: 1
定义变量: 
使用变量: __tmp
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1174:9
复杂度: 0
定义变量: logTag
使用变量: , __lhs, __rhs, __indexlen, __nmatches, __patlen, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1177:5
复杂度: 0
定义变量: 
使用变量: __tag, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyFault
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1180:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyFault(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<FaultData> faultData(data.ReadParcelable<FaultData>());
    if (faultData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<FaultData> failed");
        return ERR_INVALID_VALUE;
    }

    int32_t result = NotifyAppFault(*faultData);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1183:5
复杂度: 1
定义变量: 
使用变量: __tmp, __matches, __lengths, __nmatches
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (faultData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<FaultData> failed");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1184:9
复杂度: 0
定义变量: logTag
使用变量: , __n, __lengths, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<FaultData> failed");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1189:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1190:9
复杂度: 0
定义变量: __offset, logTag
使用变量: , __tmp, __f, __position, __l, __m, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1193:5
复杂度: 0
定义变量: 
使用变量: , __y, __not_found, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyFaultBySA
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1196:21
复杂度: 2
定义变量: 
使用变量: , __r, __is_constant_evaluated, __builtin_unreachable, __pos, __position
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyFaultBySA(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<AppFaultDataBySA> faultData(data.ReadParcelable<AppFaultDataBySA>());
    if (faultData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<AppFaultDataBySA> failed");
        return ERR_INVALID_VALUE;
    }

    int32_t result = NotifyAppFaultBySA(*faultData);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1199:5
复杂度: 1
定义变量: 
使用变量: __name
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (faultData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<AppFaultDataBySA> failed");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1200:9
复杂度: 0
定义变量: __flags, logTag
使用变量: , _Len, __r, __x, __y, __result, __pos, __name, __io, __ctype, __cl, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<AppFaultDataBySA> failed");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1205:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1206:9
复杂度: 0
定义变量: logTag
使用变量: __last, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1209:5
复杂度: 0
定义变量: __result
使用变量: , __x, __tmp, __y, __s, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleSetAppFreezeFilter
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1212:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleSetAppFreezeFilter(MessageParcel &data, MessageParcel &reply)
{
    int32_t pid = data.ReadInt32();
    bool result = SetAppFreezeFilter(pid);
    if (!reply.WriteBool(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1216:5
复杂度: 1
定义变量: 
使用变量: __middle
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteBool(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1217:9
复杂度: 0
定义变量: id, max_digits10, logTag
使用变量: __a, __first2, __m, __begupdated, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "reply write failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1220:5
复杂度: 0
定义变量: 
使用变量: , __f, __pos, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetProcessMemoryByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1223:21
复杂度: 2
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __pos, __testvalid
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetProcessMemoryByPid(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    int32_t pid = data.ReadInt32();
    int32_t memorySize = 0;
    auto result = GetProcessMemoryByPid(pid, memorySize);
    if (!reply.WriteInt32(memorySize)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Memory size write failed.");
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1229:5
复杂度: 1
定义变量: 
使用变量: , __first2, __middle
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(memorySize)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Memory size write failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1230:9
复杂度: 0
定义变量: min_exponent, logTag
使用变量: , __a, __middle, __pos, __tag, __map, _Lp, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Memory size write failed.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1233:5
复杂度: 1
定义变量: 
使用变量: __first2, __new_size, __testvalid, __member
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1234:9
复杂度: 0
定义变量: logTag
使用变量: , APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1237:5
复杂度: 0
定义变量: __pred
使用变量: __pf, __new_size, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetRunningProcessInformation
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1240:21
复杂度: 3
定义变量: 
使用变量: __err, __throw_bad_weak_ptr
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetRunningProcessInformation(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    std::string bundleName = data.ReadString();
    int32_t userId = data.ReadInt32();
    std::vector<RunningProcessInfo> info;
    auto result = GetRunningProcessInformation(bundleName, userId, info);
    reply.WriteInt32(info.size());
    for (auto &it : info) {
        if (!reply.WriteParcelable(&it)) {
            return ERR_INVALID_VALUE;
        }
    }
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1253:5
复杂度: 1
定义变量: 
使用变量: __p
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1254:9
复杂度: 0
定义变量: __ctype, is_iec559, logTag
使用变量: , __a, __n, __first, __last, __pf, memory_order_seq_cst, atomic_flag_test_and_set_explicit, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1257:5
复杂度: 0
定义变量: 
使用变量: , __lhs, __indexlen, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleChangeAppGcState
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1260:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleChangeAppGcState(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    int32_t pid = data.ReadInt32();
    int32_t state = data.ReadInt32();
    int32_t ret = ChangeAppGcState(pid, state);
    reply.WriteInt32(ret);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1267:5
复杂度: 0
定义变量: __diff1
使用变量: , __last1, __c, __middle, __ctype, __oldlen, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyPageShow
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1270:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyPageShow(MessageParcel &data, MessageParcel &reply)
{
    sptr<IRemoteObject> token = data.ReadRemoteObject();
    std::unique_ptr<PageStateData> pageStateData(data.ReadParcelable<PageStateData>());
    if (token == nullptr || pageStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "read data failed");
        return ERR_INVALID_VALUE;
    }

    auto result = NotifyPageShow(token, *pageStateData);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1272:33
复杂度: 0
定义变量: 
使用变量: __k, data
关键位置: 否
日志评分: 0
代码:
    sptr<IRemoteObject> token = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1274:5
复杂度: 1
定义变量: 
使用变量: __pos
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (token == nullptr || pageStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "read data failed");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1275:9
复杂度: 0
定义变量: logTag
使用变量: __r, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "read data failed");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1280:5
复杂度: 1
定义变量: 
使用变量: __matches_lengths
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1281:9
复杂度: 0
定义变量: digits, logTag
使用变量: , __i, __lhs, __rhs, __matches, __args, __pos, __names, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1284:5
复杂度: 0
定义变量: 
使用变量: , __beg, __pat, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyPageHide
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1287:21
复杂度: 2
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyPageHide(MessageParcel &data, MessageParcel &reply)
{
    sptr<IRemoteObject> token = data.ReadRemoteObject();
    std::unique_ptr<PageStateData> pageStateData(data.ReadParcelable<PageStateData>());
    if (token == nullptr || pageStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "read data failed");
        return ERR_INVALID_VALUE;
    }

    auto result = NotifyPageHide(token, *pageStateData);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1289:33
复杂度: 0
定义变量: is_integer
使用变量: _Nm, data
关键位置: 否
日志评分: 0
代码:
    sptr<IRemoteObject> token = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1291:5
复杂度: 1
定义变量: 
使用变量: __nskipped, __former_buckets
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (token == nullptr || pageStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "read data failed");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1292:9
复杂度: 0
定义变量: logTag
使用变量: , __r, __i, __last, __first2, __middle, __idx, __gbeg, __ht, copy, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "read data failed");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1297:5
复杂度: 1
定义变量: 
使用变量: __n, __i, __matches_lengths
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1298:9
复杂度: 0
定义变量: __const_this, logTag
使用变量: , __len, __patlen, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1301:5
复杂度: 0
定义变量: __k
使用变量: __n, __first, __pred, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRegisterAppRunningStatusListener
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1304:21
复杂度: 2
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable, __err, __member
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRegisterAppRunningStatusListener(MessageParcel &data, MessageParcel &reply)
{
    auto listener = data.ReadRemoteObject();
    if (listener == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Read data failed.");
        return ERR_INVALID_VALUE;
    }

    auto result = RegisterAppRunningStatusListener(listener);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1306:21
复杂度: 0
定义变量: has_signaling_NaN
使用变量: __x, __roan, __start, operator+, __matches_lengths, __ht, data
关键位置: 否
日志评分: 0
代码:
    auto listener = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1307:5
复杂度: 1
定义变量: 
使用变量: __j
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (listener == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Read data failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator==
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1307:9
复杂度: 0
定义变量: __j
使用变量: __i, operator==, __matches_lengths, memory_order_relaxed, listener
关键位置: 否
日志评分: 0
代码:
    if (listener == nullptr) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1308:9
复杂度: 0
定义变量: logTag
使用变量: , __last, __pos, __k, __matches_lengths, denorm_absent, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Read data failed.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1313:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1314:9
复杂度: 0
定义变量: __p, logTag
使用变量: , __x, __n, __p, __in, __k, __beg, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1317:5
复杂度: 0
定义变量: 
使用变量: __former_buckets, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUnregisterAppRunningStatusListener
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1320:21
复杂度: 2
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUnregisterAppRunningStatusListener(MessageParcel &data, MessageParcel &reply)
{
    auto listener = data.ReadRemoteObject();
    if (listener == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Read data failed.");
        return ERR_INVALID_VALUE;
    }

    auto result = UnregisterAppRunningStatusListener(listener);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1322:21
复杂度: 0
定义变量: 
使用变量: _Nm, data
关键位置: 否
日志评分: 0
代码:
    auto listener = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1323:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (listener == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Read data failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator==
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1323:9
复杂度: 0
定义变量: __loc
使用变量: , __first2, __last2, operator==, listener
关键位置: 否
日志评分: 0
代码:
    if (listener == nullptr) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1324:9
复杂度: 0
定义变量: __i, __tp, logTag
使用变量: , __n, __i, __in, __k, __m, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Read data failed.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1329:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1330:9
复杂度: 0
定义变量: logTag
使用变量: __first2, __k, __tm, other, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1333:5
复杂度: 0
定义变量: 
使用变量: , __n, __lhs, __beg, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRegisterAppForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1336:21
复杂度: 2
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRegisterAppForegroundStateObserver(MessageParcel &data, MessageParcel &reply)
{
    auto callback = iface_cast<AppExecFwk::IAppForegroundStateObserver>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = RegisterAppForegroundStateObserver(callback);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1338:73
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IAppForegroundStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1339:5
复杂度: 1
定义变量: 
使用变量: , __n, __p
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1340:9
复杂度: 0
定义变量: __slen, logTag
使用变量: , __p, __patlen, __pat, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1344:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1345:9
复杂度: 0
定义变量: logTag
使用变量: , __x, __dates, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1348:5
复杂度: 0
定义变量: __this_n
使用变量: __a, __tm, __dates, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUnregisterAppForegroundStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1351:21
复杂度: 2
定义变量: 
使用变量: __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUnregisterAppForegroundStateObserver(MessageParcel &data, MessageParcel &reply)
{
    auto callback = iface_cast<AppExecFwk::IAppForegroundStateObserver>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = UnregisterAppForegroundStateObserver(callback);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1353:73
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IAppForegroundStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1354:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1355:9
复杂度: 0
定义变量: __result, logTag
使用变量: , __it, __a, __n, __i, __first1, __first2, __result, __k, __const_this, __ht_n, __ummap, __patlen, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1359:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1360:9
复杂度: 0
定义变量: __bkt, logTag
使用变量: , __r, __x, __i, __this_n, __stringlen, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1363:5
复杂度: 0
定义变量: __n, __x
使用变量: , __j, __this_n, other, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleIsApplicationRunning
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1366:21
复杂度: 2
定义变量: 
使用变量: __err, __tm
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleIsApplicationRunning(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    bool isRunning = false;
    int32_t result = IsApplicationRunning(bundleName, isRunning);
    if (!reply.WriteBool(isRunning)) {
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1369:5
复杂度: 0
定义变量: __simple, logTag
使用变量: , __x, __i, __beg, __buckets, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1373:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteBool(isRunning)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1376:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1379:5
复杂度: 0
定义变量: 
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleIsAppRunning
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1382:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleIsAppRunning(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    bool isRunning = false;
    int32_t appCloneIndex = data.ReadInt32();
    int32_t result = IsAppRunning(bundleName, appCloneIndex, isRunning);
    if (!reply.WriteBool(isRunning)) {
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1385:5
复杂度: 0
定义变量: logTag
使用变量: __i, __svt, other, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1390:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteBool(isRunning)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1393:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1396:5
复杂度: 0
定义变量: 
使用变量: __low, __high, __io, __tmperr, newWeakRef, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleIsAppRunningByBundleNameAndUserId
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1399:21
复杂度: 2
定义变量: 
使用变量: , __i, __is_constant_evaluated, __builtin_unreachable, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleIsAppRunningByBundleNameAndUserId(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    std::string bundleName = data.ReadString();
    bool isRunning = false;
    int32_t userId = data.ReadInt32();
    int32_t result = IsAppRunningByBundleNameAndUserId(bundleName, userId, isRunning);
    if (!reply.WriteBool(isRunning)) {
        return ERR_INVALID_VALUE;
    }
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1402:5
复杂度: 0
定义变量: logTag
使用变量: , __end, __beg, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1407:5
复杂度: 1
定义变量: 
使用变量: operator*
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteBool(isRunning)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1410:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!reply.WriteInt32(result)) {
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1413:5
复杂度: 0
定义变量: __tmpyear
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleIsFinalAppProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1468:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleIsFinalAppProcess(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    if (!reply.WriteBool(IsFinalAppProcess())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write bool result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1470:5
复杂度: 0
定义变量: logTag
使用变量: __tmp, __len, __half, __l, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1471:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteBool(IsFinalAppProcess())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write bool result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteBool
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1471:10
复杂度: 0
定义变量: is_bounded
使用变量: , __t, __i, reply
关键位置: 否
日志评分: 0
代码:
    if (!reply.WriteBool(IsFinalAppProcess())) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1472:9
复杂度: 0
定义变量: is_modulo, logTag
使用变量: __t, __i, __first, __u, __size, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write bool result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1475:5
复杂度: 0
定义变量: 
使用变量: __nh, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRegisterRenderStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1478:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRegisterRenderStateObserver(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    auto callback = iface_cast<AppExecFwk::IRenderStateObserver>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = RegisterRenderStateObserver(callback);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1480:5
复杂度: 0
定义变量: __res, __offset, logTag
使用变量: , __i, __position, __ht, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1481:66
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IRenderStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1482:5
复杂度: 1
定义变量: 
使用变量: __last, __nh
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1483:9
复杂度: 0
定义变量: logTag
使用变量: , __err, goodbit, __ht, __offset, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1487:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1488:9
复杂度: 0
定义变量: logTag
使用变量: , __a, __p, __d, __ht, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1491:5
复杂度: 0
定义变量: 
使用变量: __first, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUnregisterRenderStateObserver
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1494:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUnregisterRenderStateObserver(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    auto callback = iface_cast<AppExecFwk::IRenderStateObserver>(data.ReadRemoteObject());
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }
    int32_t result = UnregisterRenderStateObserver(callback);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1496:5
复杂度: 0
定义变量: logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1497:66
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    auto callback = iface_cast<AppExecFwk::IRenderStateObserver>(data.ReadRemoteObject());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1498:5
复杂度: 1
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __nh
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1499:9
复杂度: 0
定义变量: logTag
使用变量: __iter_less_val, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Callback is null.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1503:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1504:9
复杂度: 0
定义变量: logTag
使用变量: , __t, __a, __i, __u, __m, __sv, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1507:5
复杂度: 0
定义变量: 
使用变量: __ret, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUpdateRenderState
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1510:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleUpdateRenderState(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    int32_t pid = data.ReadInt32();
    int32_t state = data.ReadInt32();
    int32_t result = UpdateRenderState(pid, state);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1512:5
复杂度: 0
定义变量: logTag
使用变量: , __len, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1516:5
复杂度: 1
定义变量: 
使用变量: __nh, __new_fmt
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1517:9
复杂度: 0
定义变量: __alloc_node_gen, __result1, logTag
使用变量: __first, npos, __fmt_start, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1520:5
复杂度: 0
定义变量: 
使用变量: __new_fmt, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleSignRestartAppFlag
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1523:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleSignRestartAppFlag(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    auto uid = data.ReadInt32();
    auto instanceKey = data.ReadString();
    auto ret = SignRestartAppFlag(uid, instanceKey);
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1525:5
复杂度: 0
定义变量: logTag
使用变量: __a, __i, __first, __end, __m, __s, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1529:5
复杂度: 1
定义变量: 
使用变量: __result1
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1530:9
复杂度: 0
定义变量: logTag
使用变量: , __position, __cache, __ht, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1531:9
复杂度: 0
定义变量: 
使用变量: __end, __s, __ht, IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1533:5
复杂度: 0
定义变量: 
使用变量: __fmt, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAppRunningUniqueIdByPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1536:21
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAppRunningUniqueIdByPid(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    int32_t pid = data.ReadInt32();
    std::string appRunningUniqueId;
    int32_t result = GetAppRunningUniqueIdByPid(pid, appRunningUniqueId);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result error.");
        return IPC_STUB_ERR;
    }
    if (result == ERR_OK && !reply.WriteString(appRunningUniqueId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "GetAppRunningUniqueIdByPid err or Write appRunningUniqueId error.");
        return IPC_STUB_ERR;
    }

    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1538:5
复杂度: 0
定义变量: logTag
使用变量: , __size, __fmt, __fmtend, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: basic_string
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1540:17
复杂度: 0
定义变量: appRunningUniqueId
使用变量: __fmt
关键位置: 否
日志评分: 0
代码:
    std::string appRunningUniqueId;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1542:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1543:9
复杂度: 0
定义变量: logTag
使用变量: , __len, __middle, __s, space, __ctype, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write result error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1544:9
复杂度: 0
定义变量: __left_split
使用变量: __s, __ht, IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1546:5
复杂度: 1
定义变量: 
使用变量: __builtin_memset, __pos
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (result == ERR_OK && !reply.WriteString(appRunningUniqueId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "GetAppRunningUniqueIdByPid err or Write appRunningUniqueId error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1547:9
复杂度: 0
定义变量: logTag
使用变量: , __k, __fmt, __s, __ctype, __ht, _Lp, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "GetAppRunningUniqueIdByPid err or Write appRunningUniqueId error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1548:9
复杂度: 0
定义变量: 
使用变量: , __r, __ctype, IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1551:5
复杂度: 0
定义变量: __right_len
使用变量: __x, __fmt, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAllUIExtensionRootHostPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1554:21
复杂度: 3
定义变量: 
使用变量: __state, __fill_bvector_n, __right_split
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAllUIExtensionRootHostPid(MessageParcel &data, MessageParcel &reply)
{
    pid_t pid = data.ReadInt32();
    std::vector<pid_t> hostPids;
    auto result = GetAllUIExtensionRootHostPid(pid, hostPids);
    reply.WriteInt32(hostPids.size());
    for (auto &it : hostPids) {
        if (!reply.WriteInt32(it)) {
            TAG_LOGE(AAFwkTag::APPMGR, "Write host pid failed.");
            return ERR_INVALID_VALUE;
        }
    }

    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result failed.");
        return ERR_INVALID_VALUE;
    }

    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1567:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1568:9
复杂度: 0
定义变量: __pos, logTag
使用变量: __i, _S_odigits, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write result failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1572:5
复杂度: 0
定义变量: __src_impl
使用变量: , __y, __first, __len, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetAllUIExtensionProviderPid
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1575:21
复杂度: 3
定义变量: __buf
使用变量: , __x, __is_constant_evaluated, __builtin_unreachable
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetAllUIExtensionProviderPid(MessageParcel &data, MessageParcel &reply)
{
    pid_t hostPid = data.ReadInt32();
    std::vector<pid_t> providerPids;
    auto result = GetAllUIExtensionProviderPid(hostPid, providerPids);
    reply.WriteInt32(providerPids.size());
    for (auto &it : providerPids) {
        if (!reply.WriteInt32(it)) {
            TAG_LOGE(AAFwkTag::APPMGR, "Write provider pid failed.");
            return ERR_INVALID_VALUE;
        }
    }

    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result failed.");
        return ERR_INVALID_VALUE;
    }

    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1588:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result failed.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1589:9
复杂度: 0
定义变量: logTag
使用变量: __constant_iterators, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write result failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1593:5
复杂度: 0
定义变量: 
使用变量: __state, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyMemorySizeStateChanged
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1596:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyMemorySizeStateChanged(MessageParcel &data, MessageParcel &reply)
{
    bool isMemorySizeSufficient = data.ReadBool();
    int result = NotifyMemorySizeStateChanged(isMemorySizeSufficient);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result error.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1600:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write result error.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1601:9
复杂度: 0
定义变量: logTag
使用变量: __x, __hint, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write result error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1604:5
复杂度: 0
定义变量: __d2
使用变量: , NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleSetSupportedProcessCache
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1607:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleSetSupportedProcessCache(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    bool isSupport = data.ReadBool();
    int32_t pid = data.ReadInt32();
    auto ret = SetSupportedProcessCache(pid, isSupport);
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1609:5
复杂度: 0
定义变量: logTag
使用变量: , __x, __end, __map, __beg, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1613:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1614:9
复杂度: 0
定义变量: __result, logTag
使用变量: , __a, __tmp, __n, __i, __first1, __first2, __last1, __last2, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1615:9
复杂度: 0
定义变量: 
使用变量: , __end, __beg, IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1617:5
复杂度: 0
定义变量: __format
使用变量: , __x, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleSetAppAssertionPauseState
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1620:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleSetAppAssertionPauseState(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    bool flag = data.ReadBool();
    SetAppAssertionPauseState(flag);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1622:5
复杂度: 0
定义变量: logTag
使用变量: , __x, __end, __beg, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1625:5
复杂度: 0
定义变量: 
使用变量: , __x, __n, __ctype, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleSetSupportedProcessCacheSelf
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1628:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleSetSupportedProcessCacheSelf(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    bool isSupport = data.ReadBool();
    auto ret = SetSupportedProcessCacheSelf(isSupport);
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1630:5
复杂度: 0
定义变量: __i, __d1, logTag
使用变量: , __first1, __last1, __middle, __refs, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1633:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1634:9
复杂度: 0
定义变量: logTag
使用变量: , __first1, __first2, __last1, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1635:9
复杂度: 0
定义变量: 
使用变量: , __binary_pred, IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1637:5
复杂度: 0
定义变量: 
使用变量: __t, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleCheckCallingIsUserTestMode
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1640:21
复杂度: 2
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __pos
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleCheckCallingIsUserTestMode(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    pid_t pid = data.ReadInt32();
    bool isUserTest = false;
    int32_t ret = CheckCallingIsUserTestMode(pid, isUserTest);
    if (!reply.WriteBool(isUserTest)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write isUserTest error.");
        return IPC_STUB_ERR;
    }
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1642:5
复杂度: 0
定义变量: __loc, logTag
使用变量: , __first1, __first2, __last1, __io, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1646:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteBool(isUserTest)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write isUserTest error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1647:9
复杂度: 0
定义变量: __it, logTag
使用变量: , __it, __pos, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write isUserTest error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1648:9
复杂度: 0
定义变量: __maxlen
使用变量: , __n, IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1650:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1651:9
复杂度: 0
定义变量: id, logTag
使用变量: , __result_first, __result_last, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1652:9
复杂度: 0
定义变量: 
使用变量: __result_last, IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1654:5
复杂度: 0
定义变量: 
使用变量: __first, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleNotifyProcessDependedOnWeb
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1674:21
复杂度: 1
定义变量: 
使用变量: __x
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleNotifyProcessDependedOnWeb(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "call");
    int32_t ret = NotifyProcessDependedOnWeb();
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }

    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1676:5
复杂度: 0
定义变量: __code, logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "call");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1678:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(ret)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");
        return IPC_STUB_ERR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1679:9
复杂度: 0
定义变量: logTag
使用变量: , __x, __y, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write ret error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1680:9
复杂度: 0
定义变量: 
使用变量: IPC_STUB_ERR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return IPC_STUB_ERR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1683:5
复杂度: 0
定义变量: 
使用变量: , NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleKillProcessDependedOnWeb
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1686:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleKillProcessDependedOnWeb(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "call");
    KillProcessDependedOnWeb();
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1688:5
复杂度: 0
定义变量: max_digits10, logTag
使用变量: __n, __k, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "call");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1690:5
复杂度: 0
定义变量: 
使用变量: , __position, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRestartResidentProcessDependedOnWeb
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1693:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRestartResidentProcessDependedOnWeb(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "call");
    RestartResidentProcessDependedOnWeb();
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1695:5
复杂度: 0
定义变量: __move, logTag
使用变量: , __x, __y, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "call");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1697:5
复杂度: 0
定义变量: 
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleGetSupportedProcessCachePids
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1700:21
复杂度: 3
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleGetSupportedProcessCachePids(MessageParcel &data, MessageParcel &reply)
{
    HITRACE_METER(HITRACE_TAG_APP);
    std::string bundleName = data.ReadString();
    std::vector<int32_t> pidList;
    auto result = GetSupportedProcessCachePids(bundleName, pidList);
    reply.WriteInt32(pidList.size());
    for (auto it : pidList) {
        if (!reply.WriteInt32(it)) {
            return ERR_INVALID_VALUE;
        }
    }
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1712:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1713:9
复杂度: 0
定义变量: logTag
使用变量: , APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1716:5
复杂度: 0
定义变量: 
使用变量: , __y, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: GetSupportedProcessCachePids
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1719:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::GetSupportedProcessCachePids(const std::string &bundleName,
    std::vector<int32_t> &pidList)
{
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1722:5
复杂度: 0
定义变量: 
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleRegisterKiaInterceptor
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1725:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleRegisterKiaInterceptor(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "call");
    sptr<IKiaInterceptor> interceptor = iface_cast<IKiaInterceptor>(data.ReadRemoteObject());
    if (interceptor == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "interceptor is nullptr.");
        return ERR_INVALID_VALUE;
    }

    reply.WriteInt32(RegisterKiaInterceptor(interceptor));
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1727:5
复杂度: 0
定义变量: __roan, logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "call");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1729:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (interceptor == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "interceptor is nullptr.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1730:9
复杂度: 0
定义变量: is_modulo, logTag
使用变量: , __x, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "interceptor is nullptr.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1735:5
复杂度: 0
定义变量: __result
使用变量: __x, __sv_limit, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleCheckIsKiaProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1738:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleCheckIsKiaProcess(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "call");
    int pid = data.ReadInt32();
    bool isKia = false;
    int result = CheckIsKiaProcess(pid, isKia);
    reply.WriteInt32(result);
    if (result != ERR_OK) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed,result=%{public}d.", result);
        return result;
    }
    reply.WriteBool(isKia);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1740:5
复杂度: 0
定义变量: logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "call");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1745:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (result != ERR_OK) {
        TAG_LOGE(AAFwkTag::APPMGR, "failed,result=%{public}d.", result);
        return result;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1746:9
复杂度: 0
定义变量: logTag
使用变量: , __x, __y, __first1, __last1, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "failed,result=%{public}d.", result);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1747:9
复杂度: 0
定义变量: 
使用变量: __x, __last2, result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return result;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1750:5
复杂度: 0
定义变量: 
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleKillAppSelfWithInstanceKey
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1753:21
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleKillAppSelfWithInstanceKey(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGD(AAFwkTag::APPMGR, "call");
    auto instanceKey = data.ReadString();
    auto clearPageStack = data.ReadBool();
    auto reason = data.ReadString();
    auto result = KillAppSelfWithInstanceKey(instanceKey, clearPageStack, reason);
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1755:5
复杂度: 0
定义变量: logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "call");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1760:5
复杂度: 1
定义变量: 
使用变量: __base
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.WriteInt32(result)) {
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1761:9
复杂度: 0
定义变量: digits10, logTag
使用变量: , __x, __n, __p, __y, __c, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "fail to write result.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1764:5
复杂度: 0
定义变量: 
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleUpdateInstanceKeyBySpecifiedId
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1767:21
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t AppMgrStub::HandleUpdateInstanceKeyBySpecifiedId(MessageParcel &data, MessageParcel &reply)
{
    auto specifiedId = data.ReadInt32();
    auto instanceKey = data.ReadString();
    UpdateInstanceKeyBySpecifiedId(specifiedId, instanceKey);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1772:5
复杂度: 0
定义变量: 
使用变量: NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleHasAppRecord
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1775:21
复杂度: 3
定义变量: __val
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppMgrStub::HandleHasAppRecord(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<AAFwk::Want> want(data.ReadParcelable<AAFwk::Want>());
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }
    std::unique_ptr<AbilityInfo> abilityInfo(data.ReadParcelable<AbilityInfo>());
    if (abilityInfo == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "abilityInfo is nullptr");
        return ERR_INVALID_VALUE;
    }

    bool exist = false;
    auto ret = HasAppRecord(*want, *abilityInfo, exist);
    if (ret == ERR_OK) {
        reply.WriteBool(exist);
    }
    return ret;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1778:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (want == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1779:9
复杂度: 0
定义变量: max_exponent, logTag
使用变量: __first, __last, __pos, __source, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "want is nullptr");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1783:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (abilityInfo == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "abilityInfo is nullptr");
        return ERR_INVALID_VALUE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1784:9
复杂度: 0
定义变量: __prev_n, has_signaling_NaN, logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "abilityInfo is nullptr");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_mgr_stub.cpp:1790:5
复杂度: 1
定义变量: 
使用变量: __last
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (ret == ERR_OK) {
        reply.WriteBool(exist);
    }

--------------------------------------------------------------------------------
