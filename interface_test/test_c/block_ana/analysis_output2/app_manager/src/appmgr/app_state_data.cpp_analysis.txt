代码块类型: Method Declaration
块名称: Marshalling
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:23:20
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
bool AppStateData::Marshalling(Parcel &parcel) const
{
    return (parcel.WriteString(bundleName) && parcel.WriteInt32(uid) && parcel.WriteInt32(state)
        && parcel.WriteInt32(pid) && parcel.WriteUint32(accessTokenId) && parcel.WriteBool(isFocused)
        && parcel.WriteInt32(static_cast<int32_t>(extensionType)) && parcel.WriteInt32Vector(renderPids)
        && parcel.WriteString(callerBundleName) && parcel.WriteBool(isSplitScreenMode)
        && parcel.WriteBool(isFloatingWindowMode) && parcel.WriteInt32(appIndex) && parcel.WriteBool(isPreloadModule));
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ReadFromParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:32:20
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
bool AppStateData::ReadFromParcel(Parcel &parcel)
{
    bundleName = parcel.ReadString();
    uid = parcel.ReadInt32();
    state = parcel.ReadInt32();
    pid = parcel.ReadInt32();
    accessTokenId = parcel.ReadUint32();
    isFocused = parcel.ReadBool();
    extensionType = static_cast<ExtensionAbilityType>(parcel.ReadInt32());
    parcel.ReadInt32Vector(&renderPids);
    callerBundleName = parcel.ReadString();
    isSplitScreenMode = parcel.ReadBool();
    isFloatingWindowMode = parcel.ReadBool();
    appIndex = parcel.ReadInt32();
    isPreloadModule = parcel.ReadBool();

    return true;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadString
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:34:18
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    bundleName = parcel.ReadString();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadInt32
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:35:11
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    uid = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadInt32
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:36:13
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    state = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadInt32
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:37:11
复杂度: 0
定义变量: have_error
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    pid = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadUint32
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:38:21
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    accessTokenId = parcel.ReadUint32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadBool
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:39:17
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    isFocused = parcel.ReadBool();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadString
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:42:24
复杂度: 0
定义变量: 
使用变量: _Intl, parcel
关键位置: 否
日志评分: 0
代码:
    callerBundleName = parcel.ReadString();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadBool
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:43:25
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    isSplitScreenMode = parcel.ReadBool();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadBool
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:44:28
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    isFloatingWindowMode = parcel.ReadBool();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadInt32
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:45:16
复杂度: 0
定义变量: 
使用变量: , __it1, __it2, parcel
关键位置: 否
日志评分: 0
代码:
    appIndex = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadBool
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:46:23
复杂度: 0
定义变量: __caches
使用变量: __loc, _S_get_c_name, parcel
关键位置: 否
日志评分: 0
代码:
    isPreloadModule = parcel.ReadBool();

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:48:5
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return true;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: Unmarshalling
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:51:29
复杂度: 1
定义变量: 
使用变量: __out
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
AppStateData *AppStateData::Unmarshalling(Parcel &parcel)
{
    AppStateData *appStateData = new (std::nothrow) AppStateData();
    if (appStateData && !appStateData->ReadFromParcel(parcel)) {
        TAG_LOGW(AAFwkTag::APPMGR, "appStateData failed, because ReadFromParcel failed");
        delete appStateData;
        appStateData = nullptr;
    }
    return appStateData;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:54:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (appStateData && !appStateData->ReadFromParcel(parcel)) {
        TAG_LOGW(AAFwkTag::APPMGR, "appStateData failed, because ReadFromParcel failed");
        delete appStateData;
        appStateData = nullptr;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadFromParcel
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:54:26
复杂度: 0
定义变量: npos
使用变量: __ret, __n, __s, __a, __ptr, __base, __b2, _ISspace, _S_get_c_name, parcel, appStateData
关键位置: 否
日志评分: 0
代码:
    if (appStateData && !appStateData->ReadFromParcel(parcel)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:55:9
复杂度: 0
定义变量: __i, __len, __b4, __num, print, logTag
使用变量: , npos, __base, __b3, PTHREAD_MUTEX_TIMED_NP, _ISprint, __buf_len, __remaining, _Cache, DEFAULT, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "appStateData failed, because ReadFromParcel failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:59:5
复杂度: 0
定义变量: alnum
使用变量: , __tmp, __value, __pred, __b2, __builtin_strcmp, __low, __high, __iter, appStateData
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return appStateData;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: IsUIExtension
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_state_data.cpp:62:20
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
bool AppStateData::IsUIExtension(const AppExecFwk::ExtensionAbilityType type)
{
    return AAFwk::UIExtensionUtils::IsUIExtension(type);
}

--------------------------------------------------------------------------------
