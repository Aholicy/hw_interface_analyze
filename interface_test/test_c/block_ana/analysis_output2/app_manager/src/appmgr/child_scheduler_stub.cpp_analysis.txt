代码块类型: Method Declaration
块名称: OnRemoteRequest
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:27:29
复杂度: 4
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t ChildSchedulerStub::OnRemoteRequest(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    TAG_LOGI(AAFwkTag::APPMGR, "ChildSchedulerStub::OnReceived, code = %{public}u, flags= %{public}d.", code,
        option.GetFlags());
    std::u16string descriptor = ChildSchedulerStub::GetDescriptor();
    std::u16string remoteDescriptor = data.ReadInterfaceToken();
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "A local descriptor is not equivalent to a remote");
        return ERR_INVALID_STATE;
    }

    switch (code) {
        case static_cast<uint32_t>(IChildScheduler::Message::SCHEDULE_LOAD_JS):
            return HandleScheduleLoadChild(data, reply);
        case static_cast<uint32_t>(IChildScheduler::Message::SCHEDULE_EXIT_PROCESS_SAFELY):
            return HandleScheduleExitProcessSafely(data, reply);
        case static_cast<uint32_t>(IChildScheduler::Message::SCHEDULE_RUN_NATIVE_PROC):
            return HandleScheduleRunNativeProc(data, reply);
    }
    TAG_LOGI(AAFwkTag::APPMGR, "ChildSchedulerStub::OnRemoteRequest end");
    return IPCObjectStub::OnRemoteRequest(code, data, reply, option);
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:30:5
复杂度: 0
定义变量: logTag
使用变量: APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGI(AAFwkTag::APPMGR, "ChildSchedulerStub::OnReceived, code = %{public}u, flags= %{public}d.", code,
        option.GetFlags());

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadInterfaceToken
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:33:39
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    std::u16string remoteDescriptor = data.ReadInterfaceToken();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:34:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "A local descriptor is not equivalent to a remote");
        return ERR_INVALID_STATE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:35:9
复杂度: 0
定义变量: logTag
使用变量: __x, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "A local descriptor is not equivalent to a remote");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:36:9
复杂度: 0
定义变量: 
使用变量: ERR_INVALID_STATE
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_STATE;

--------------------------------------------------------------------------------
代码块类型: Switch Block
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:39:5
复杂度: 3
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Switch Block 缺少日志: 得分 -2
代码:
    switch (code) {
        case static_cast<uint32_t>(IChildScheduler::Message::SCHEDULE_LOAD_JS):
            return HandleScheduleLoadChild(data, reply);
        case static_cast<uint32_t>(IChildScheduler::Message::SCHEDULE_EXIT_PROCESS_SAFELY):
            return HandleScheduleExitProcessSafely(data, reply);
        case static_cast<uint32_t>(IChildScheduler::Message::SCHEDULE_RUN_NATIVE_PROC):
            return HandleScheduleRunNativeProc(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:41:13
复杂度: 0
定义变量: 
使用变量: IF_PROT_DEFAULT, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleScheduleLoadChild(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleScheduleLoadChild
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:41:20
复杂度: 0
定义变量: 
使用变量: IF_PROT_DEFAULT, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleScheduleLoadChild(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:43:13
复杂度: 0
定义变量: 
使用变量: __refs, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleScheduleExitProcessSafely(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleScheduleExitProcessSafely
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:43:20
复杂度: 0
定义变量: 
使用变量: data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleScheduleExitProcessSafely(data, reply);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:45:13
复杂度: 0
定义变量: __i
使用变量: , __it1, __it2, __refs, _S_get_c_locale, _Intl, serialInvokeFlag, data, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return HandleScheduleRunNativeProc(data, reply);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: HandleScheduleRunNativeProc
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:45:20
复杂度: 0
定义变量: 
使用变量: , __it2, _S_get_c_locale, _Intl, serialInvokeFlag, data, reply
关键位置: 否
日志评分: 0
代码:
            return HandleScheduleRunNativeProc(data, reply);

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:47:5
复杂度: 0
定义变量: logTag
使用变量: , __x, __i, __other, __caches, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGI(AAFwkTag::APPMGR, "ChildSchedulerStub::OnRemoteRequest end");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleScheduleLoadChild
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:51:29
复杂度: 0
定义变量: 
使用变量: __out
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t ChildSchedulerStub::HandleScheduleLoadChild(MessageParcel &data, MessageParcel &reply)
{
    ScheduleLoadChild();
    return ERR_NONE;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:54:5
复杂度: 0
定义变量: 
使用变量: , __pos, __builtin_strcmp, __bsx, ERR_NONE
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return ERR_NONE;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleScheduleExitProcessSafely
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:57:29
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t ChildSchedulerStub::HandleScheduleExitProcessSafely(MessageParcel &data, MessageParcel &reply)
{
    ScheduleExitProcessSafely();
    return ERR_NONE;
}

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:60:5
复杂度: 0
定义变量: __len, __endptr
使用变量: , __value, __b3, __loc, ERR_NONE
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return ERR_NONE;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: HandleScheduleRunNativeProc
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:63:29
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
int32_t ChildSchedulerStub::HandleScheduleRunNativeProc(MessageParcel &data, MessageParcel &reply)
{
    sptr<IRemoteObject> cb = data.ReadRemoteObject();
    ScheduleRunNativeProc(cb);
    return ERR_NONE;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadRemoteObject
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:65:30
复杂度: 0
定义变量: 
使用变量: __t, __n, __first, __c, __len, __s, __cloc, _S_clone_c_locale, data
关键位置: 否
日志评分: 0
代码:
    sptr<IRemoteObject> cb = data.ReadRemoteObject();

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/child_scheduler_stub.cpp:67:5
复杂度: 0
定义变量: __maxlen, __aligned
使用变量: , __x, __tmp, __num, __throw_out_of_range_fmt, npos, __gd, ERR_NONE
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return ERR_NONE;

--------------------------------------------------------------------------------
