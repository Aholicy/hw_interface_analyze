代码块类型: Method Declaration
块名称: ReadFromParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:26:27
复杂度: 4
定义变量: 
使用变量: __out
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
bool RunningMultiAppInfo::ReadFromParcel(Parcel &parcel)
{
    bundleName = Str16ToStr8(parcel.ReadString16());
    mode = parcel.ReadInt32();
    int32_t runningAppClonesSize;
    READ_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, runningAppClonesSize);
    if (runningAppClonesSize > MAX_CLONE_APP_NUM) {
        return false;
    }
    for (auto i = 0; i < runningAppClonesSize; i++) {
        RunningAppClone clone;
        clone.appCloneIndex = parcel.ReadInt32();
        clone.uid = parcel.ReadInt32();
        parcel.ReadInt32Vector(&clone.pids);
        runningAppClones.emplace_back(clone);
    }

    int32_t runningMultiIntanceInfosSize;
    READ_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, runningMultiIntanceInfosSize);
    if (runningMultiIntanceInfosSize > MAX_INSTANCE_NUM) {
        return false;
    }
    for (auto i = 0; i < runningMultiIntanceInfosSize; i++) {
        RunningMultiInstanceInfo instanceInfo;
        instanceInfo.instanceKey = Str16ToStr8(parcel.ReadString16());
        instanceInfo.uid = parcel.ReadInt32();
        parcel.ReadInt32Vector(&instanceInfo.pids);
        runningMultiIntanceInfos.emplace_back(instanceInfo);
    }
    return true;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:29:12
复杂度: 0
定义变量: MAX_INSTANCE_NUM
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
    mode = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:32:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (runningAppClonesSize > MAX_CLONE_APP_NUM) {
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:33:9
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Loop Block (for)
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:35:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Loop Block (for) 缺少日志: 得分 -2
代码:
    for (auto i = 0; i < runningAppClonesSize; i++) {
        RunningAppClone clone;
        clone.appCloneIndex = parcel.ReadInt32();
        clone.uid = parcel.ReadInt32();
        parcel.ReadInt32Vector(&clone.pids);
        runningAppClones.emplace_back(clone);
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: RunningAppClone
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:36:25
复杂度: 0
定义变量: clone
使用变量: 
关键位置: 否
日志评分: 0
代码:
        RunningAppClone clone;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:37:31
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
        clone.appCloneIndex = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:38:21
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
        clone.uid = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:39:9
复杂度: 0
定义变量: 
使用变量: __bsx, parcel, clone
关键位置: 否
日志评分: 0
代码:
        parcel.ReadInt32Vector(&clone.pids);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:45:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (runningMultiIntanceInfosSize > MAX_INSTANCE_NUM) {
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:46:9
复杂度: 0
定义变量: 
使用变量: DEFAULT
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Loop Block (for)
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:48:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Loop Block (for) 缺少日志: 得分 -2
代码:
    for (auto i = 0; i < runningMultiIntanceInfosSize; i++) {
        RunningMultiInstanceInfo instanceInfo;
        instanceInfo.instanceKey = Str16ToStr8(parcel.ReadString16());
        instanceInfo.uid = parcel.ReadInt32();
        parcel.ReadInt32Vector(&instanceInfo.pids);
        runningMultiIntanceInfos.emplace_back(instanceInfo);
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: RunningMultiInstanceInfo
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:49:34
复杂度: 0
定义变量: instanceInfo
使用变量: 
关键位置: 否
日志评分: 0
代码:
        RunningMultiInstanceInfo instanceInfo;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:50:36
复杂度: 0
定义变量: 
使用变量: , parcel
关键位置: 否
日志评分: 0
代码:
        instanceInfo.instanceKey = Str16ToStr8(parcel.ReadString16());

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:50:48
复杂度: 0
定义变量: 
使用变量: parcel
关键位置: 否
日志评分: 0
代码:
        instanceInfo.instanceKey = Str16ToStr8(parcel.ReadString16());

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:51:28
复杂度: 0
定义变量: 
使用变量: __out, parcel
关键位置: 否
日志评分: 0
代码:
        instanceInfo.uid = parcel.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: FOR_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:52:9
复杂度: 0
定义变量: __n
使用变量: __n, uselocale, __put, __cont, parcel, instanceInfo
关键位置: 否
日志评分: 0
代码:
        parcel.ReadInt32Vector(&instanceInfo.pids);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:55:5
复杂度: 0
定义变量: 
使用变量: npos, DEFAULT
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return true;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: Unmarshalling
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:58:43
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
RunningMultiAppInfo *RunningMultiAppInfo::Unmarshalling(Parcel &parcel)
{
    RunningMultiAppInfo *info = new (std::nothrow) RunningMultiAppInfo();
    if (info && !info->ReadFromParcel(parcel)) {
        TAG_LOGW(AAFwkTag::APPMGR, "read from parcel failed");
        delete info;
        info = nullptr;
    }
    return info;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:61:5
复杂度: 1
定义变量: 
使用变量: __num
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (info && !info->ReadFromParcel(parcel)) {
        TAG_LOGW(AAFwkTag::APPMGR, "read from parcel failed");
        delete info;
        info = nullptr;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ReadFromParcel
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:61:18
复杂度: 0
定义变量: 
使用变量: __n, , __f, __builtin_llabs, __b4, __iter, parcel, info
关键位置: 否
日志评分: 0
代码:
    if (info && !info->ReadFromParcel(parcel)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:62:9
复杂度: 0
定义变量: logTag
使用变量: __n, , __s, __len, __b4, DEFAULT, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "read from parcel failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:66:5
复杂度: 0
定义变量: __save_errno
使用变量: __pos, __first, info
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return info;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: Marshalling
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:69:27
复杂度: 6
定义变量: 
使用变量: , __is_constant_evaluated, __ret, __builtin_unreachable, __location, __throw_length_error
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
bool RunningMultiAppInfo::Marshalling(Parcel &parcel) const
{
    WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(String16, parcel, Str8ToStr16(bundleName));
    WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, mode);
    WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, runningAppClones.size());
    if (runningAppClones.size() > MAX_CLONE_APP_NUM) {
        return false;
    }
    for (auto &clone : runningAppClones) {
        WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, clone.appCloneIndex);
        WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, clone.uid);
        if (!parcel.WriteInt32Vector(clone.pids)) {
            TAG_LOGE(AAFwkTag::APPMGR, "write runningAppClones failed.");
            return false;
        }
    }
    WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, runningMultiIntanceInfos.size());
    if (runningMultiIntanceInfos.size() > MAX_INSTANCE_NUM) {
        return false;
    }
    for (auto &instanceInfo : runningMultiIntanceInfos) {
        WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(String16, parcel, Str8ToStr16(instanceInfo.instanceKey));
        WRITE_PARCEL_AND_RETURN_FALSE_IF_FAIL(Int32, parcel, instanceInfo.uid);
        if (!parcel.WriteInt32Vector(instanceInfo.pids)) {
            TAG_LOGE(AAFwkTag::APPMGR, "write runningMultiIntanceInfos failed.");
            return false;
        }
    }
    return true;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:74:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (runningAppClones.size() > MAX_CLONE_APP_NUM) {
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:75:9
复杂度: 0
定义变量: __tmp
使用变量: , __s, __val, __cont, npos, __bsx
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:86:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (runningMultiIntanceInfos.size() > MAX_INSTANCE_NUM) {
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:87:9
复杂度: 0
定义变量: __p
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/running_multi_info.cpp:97:5
复杂度: 0
定义变量: __ret
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return true;

--------------------------------------------------------------------------------
