代码块类型: Method Declaration
块名称: WriteInterfaceToken
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:31:25
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
bool AppSchedulerProxy::WriteInterfaceToken(MessageParcel &data)
{
    if (!data.WriteInterfaceToken(AppSchedulerProxy::GetDescriptor())) {
        TAG_LOGE(AAFwkTag::APPMGR, "write interface token failed");
        return false;
    }
    return true;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:33:5
复杂度: 1
定义变量: metaDescriptor_
使用变量: metaDescriptor_
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteInterfaceToken(AppSchedulerProxy::GetDescriptor())) {
        TAG_LOGE(AAFwkTag::APPMGR, "write interface token failed");
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:34:9
复杂度: 0
定义变量: logTag
使用变量: proxy, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write interface token failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:35:9
复杂度: 0
定义变量: 
使用变量: __x
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:37:5
复杂度: 0
定义变量: have_error
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return true;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleForegroundApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:40:25
复杂度: 2
定义变量: 
使用变量: __out
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
bool AppSchedulerProxy::ScheduleForegroundApplication()
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleForegroundApplication start");
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return false;
    }
    auto msgKey = AbilityRuntime::ErrorMgsUtil::BuildErrorKey(reinterpret_cast<uintptr_t>(this),
        "ScheduleForegroundRunning");
    AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey, "AppScheduler::ScheduleForegroundApplication");
    int32_t ret =
        SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_FOREGROUND_APPLICATION_TRANSACTION),
            data,
            reply,
            option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey,
            std::string("ScheduleForegroundApplication ipc error ") + std::to_string(ret));
        return false;
    }
    return true;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:42:5
复杂度: 0
定义变量: logTag
使用变量: _Intl, AFTER_MAGIC, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleForegroundApplication start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:43:19
复杂度: 0
定义变量: data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:44:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:45:19
复杂度: 0
定义变量: LIFECYCLE_TIMEOUT, option
使用变量: , __it2, _S_get_c_locale, _Intl, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:46:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:46:10
复杂度: 0
定义变量: __caches, APP_LIFECYCLE_TIMEOUT
使用变量: __loc, _S_get_c_name, DEFAULT, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:47:9
复杂度: 0
定义变量: 
使用变量: __x, __i
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:53:9
复杂度: 0
定义变量: __i, __len, __iter
使用变量: , __pos, __cont, __builtin_strcmp, __bsx, npos, __refs, __loc, DEFAULT, data, reply, option
关键位置: 否
日志评分: 0
代码:
        SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_FOREGROUND_APPLICATION_TRANSACTION),
            data,
            reply,
            option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:57:5
复杂度: 1
定义变量: 
使用变量: __num, __loc
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey,
            std::string("ScheduleForegroundApplication ipc error ") + std::to_string(ret));
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:58:9
复杂度: 0
定义变量: __ret, __first, punct, logTag
使用变量: , __tmp, __n, __first, __last, __len, __base, __pos, __s, PTHREAD_MUTEX_NORMAL, _ISpunct, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:61:9
复杂度: 0
定义变量: __len
使用变量: , __cont, __low, __b4
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return false;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:63:5
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return true;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleBackgroundApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:66:25
复杂度: 2
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __throw_length_error, rethrow_exception
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleBackgroundApplication()
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    int32_t ret =
        SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_BACKGROUND_APPLICATION_TRANSACTION),
            data,
            reply,
            option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is wrong, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:68:19
复杂度: 0
定义变量: data
使用变量: __aligned
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:69:19
复杂度: 0
定义变量: reply
使用变量: , __val, __high
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:70:19
复杂度: 0
定义变量: __is_signed, option
使用变量: __tmp, __i, __s, __low, __cloc, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:71:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:71:10
复杂度: 0
定义变量: __digits
使用变量: terminate, __first, __val, __mem, __ISwupper, _Intl, _Lp, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:72:9
复杂度: 0
定义变量: __tmp_data
使用变量: __first, __low, __builtin_fabs, __ISwlower, DEFAULT
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:75:9
复杂度: 0
定义变量: __tmp, __testoff, MIN_TRANSACTION_ID
使用变量: , __p, __val, __cont, __bsx, __builtin_fabsf, __testoff, npos, __ISwxdigit, __ISwspace, __ISwprint, __ISwgraph, __cvt, __outnext, __outlast, data, reply, option
关键位置: 否
日志评分: 0
代码:
        SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_BACKGROUND_APPLICATION_TRANSACTION),
            data,
            reply,
            option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:79:5
复杂度: 1
定义变量: 
使用变量: __tmp
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is wrong, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:80:9
复杂度: 0
定义变量: __tmp, __child, __old, __np, INVALID_FD, logTag
使用变量: , __t, __x, __n, __first, __last, __i, __f, __s, __child, __builtin_fabsl, __uselocale, __cloc, __loc, __ISwcntrl, __maxlen, __outstr, __outchars, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is wrong, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleTerminateApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:84:25
复杂度: 3
定义变量: 
使用变量: , __first, __location, __ret
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleTerminateApplication(bool isLastProcess)
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    if (!data.WriteBool(isLastProcess)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write bool failed.");
        return;
    }
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_TERMINATE_APPLICATION_TRANSACTION), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is unsuccessful, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:86:19
复杂度: 0
定义变量: __n, SOCKET_ID_INVALID, data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:87:19
复杂度: 0
定义变量: reply
使用变量: __c, __np
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:88:19
复杂度: 0
定义变量: __is_signed, __w, __remaining, option
使用变量: , __a, __x, __b, __n, __last, __digits, __ret, __num, __result, __g, __out, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:89:5
复杂度: 1
定义变量: 
使用变量: , __n, __first, __ret
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:89:10
复杂度: 0
定义变量: __len
使用变量: , __a, __p, __n, __c, __digits, __comp, __num, __pos, __w, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:90:9
复杂度: 0
定义变量: 
使用变量: __grouping
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:92:5
复杂度: 1
定义变量: 
使用变量: , __count, __result, __builtin_va_start, __mem, __outstr
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteBool(isLastProcess)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write bool failed.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:93:9
复杂度: 0
定义变量: __args, logTag
使用变量: , __t, __n, __i, __ret, __len, __nh, __s, __grouping, NORMAL, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write bool failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:94:9
复杂度: 0
定义变量: __num
使用变量: __left
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:96:19
复杂度: 0
定义变量: __comp, __tn, __positive_sign, __negative_sign
使用变量: , __a, __p, __b, __tmp, __n, __args, __c, __fn, __size, __num, __nh, __mp, __s, __old_size, __out, __fmt, __builtin_vsnprintf, __np, __tn, data, reply, option, SCHEDULE_TERMINATE_APPLICATION_TRANSACTION
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_TERMINATE_APPLICATION_TRANSACTION), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:98:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is unsuccessful, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:99:9
复杂度: 0
定义变量: nothrow, __tmp_capacity, ctype, __g, is_always_lock_free, logTag
使用变量: , __b, __n, __c, __i, __val, __result, __mp, __s, __out, __w, __mem, __exchange_and_add_single, __truename, __outchars, __element, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is unsuccessful, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleLowMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:103:25
复杂度: 2
定义变量: 
使用变量: , __len, __c1
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleLowMemory()
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleLowMemory begin");
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_LOWMEMORY_APPLICATION_TRANSACTION), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:105:5
复杂度: 0
定义变量: all, logTag
使用变量: , __a, __p, __t, __first, __last, __max, __builtin_memcmp, __first1, __first2, __num, __len, __nh, __uselocale, __old, __gthread_active_p, ctype, numeric, collate, __refs, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleLowMemory begin");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:106:19
复杂度: 0
定义变量: data
使用变量: _Nm, __np, __grouping
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:107:19
复杂度: 0
定义变量: reply
使用变量: , _Nm, __x, __np
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:108:19
复杂度: 0
定义变量: __cmp, __tmp_capacity, option
使用变量: __x, __b, __i, __m, operator^, __g_size, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:109:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:109:10
复杂度: 0
定义变量: __ct, offset
使用变量: , __t, __first, __val, __pos, PTHREAD_RWLOCK_PREFER_READER_NP, __mem, __grouping, tag, GetOffset, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:110:9
复杂度: 0
定义变量: __tmp
使用变量: , __p1, __grouping, offset
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:112:19
复杂度: 0
定义变量: __sz, __found, __len, par_unseq, unseq
使用变量: , __x, __tmp, __args, __sz, __len, __builtin_strlen, __mp, __m, __s, operator=, _S_oend, _S_atoms_in, memory_order_acq_rel, memory_order_acquire, offset, data, reply, option, SCHEDULE_LOWMEMORY_APPLICATION_TRANSACTION
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_LOWMEMORY_APPLICATION_TRANSACTION), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:114:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:115:9
复杂度: 0
定义变量: __i, logTag
使用变量: , __a, __x, __tmp, __n, __i, __sz, __fn, allocator_arg, __uhead, __arg, __nh, __s, _S_iend, memory_order_seq_cst, __builtin_strrchr, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleMemoryLevel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:119:25
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
void AppSchedulerProxy::ScheduleMemoryLevel(int32_t level)
{
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_MEMORYLEVEL_APPLICATION_TRANSACTION);
    ScheduleMemoryCommon(level, operation);
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ScheduleMemoryCommon
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:122:5
复杂度: 0
定义变量: __c
使用变量: , __x, __first, _Hash_bytes, __size, __len, __pos, __builtin_strlen, __builtin_strcmp, __mp, __s, __c1, __c2, __sbin, level, operation
关键位置: 否
日志评分: 0
代码:
    ScheduleMemoryCommon(level, operation);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleHeapMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:125:25
复杂度: 3
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __ptr, __ne_ptr
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleHeapMemory(const int32_t pid, OHOS::AppExecFwk::MallocInfo &mallocInfo)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleHeapMemory start");
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_HEAPMEMORY_APPLICATION_TRANSACTION);
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_SYNC);
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return;
    }
    data.WriteInt32(pid);
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return;
    }

    std::unique_ptr<MallocInfo> info(reply.ReadParcelable<MallocInfo>());
    if (info == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "MallocInfo ReadParcelable nullptr");
        return;
    }
    mallocInfo = *info;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:127:5
复杂度: 0
定义变量: logTag
使用变量: , __a, __t, __b, __cont, _M_max_align, __m, __s, operator&, memory_order_release, __memory_order_mask, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleHeapMemory start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:129:19
复杂度: 0
定义变量: data
使用变量: __tmp
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:130:19
复杂度: 0
定义变量: reply
使用变量: GetOffset
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:131:19
复杂度: 0
定义变量: option
使用变量: , __a, __p, __b, __first, __last, __val, __outstr, TF_SYNC, tagNames
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_SYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:132:5
复杂度: 1
定义变量: 
使用变量: __atomic_thread_fence
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:132:10
复杂度: 0
定义变量: __al
使用变量: __p, __ptr, __off, __sbin, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:133:9
复杂度: 0
定义变量: logTag
使用变量: __m, __s, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:134:9
复杂度: 0
定义变量: __tmp
使用变量: __ret, __nh, tagNames
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:137:19
复杂度: 0
定义变量: 
使用变量: , __first, __last, __result, __k, __m, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:138:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:139:9
复杂度: 0
定义变量: __parent, npos, tagNames, logTag
使用变量: , __a, __p, __x, __c, __f, __fn, __cont, __holeIndex, __capacity, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:140:9
复杂度: 0
定义变量: 
使用变量: , __holeIndex
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:144:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (info == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "MallocInfo ReadParcelable nullptr");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:145:9
复杂度: 0
定义变量: __i, stderr, __ne_ptr, __loc, logTag
使用变量: , __p, __tmp, __ptr, __ret, __m, npos, __capacity, __i1, __i2, __old_capacity, __ne_ptr, __io, offset, tagNames, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "MallocInfo ReadParcelable nullptr");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:146:9
复杂度: 0
定义变量: 
使用变量: , __x, __first
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleJsHeapMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:151:25
复杂度: 2
定义变量: 
使用变量: __builtin_operator_delete, __nh, __pos
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleJsHeapMemory(OHOS::AppExecFwk::JsHeapDumpInfo &info)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleJsHeapMemory start");
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_JSHEAP_MEMORY_APPLICATION_TRANSACTION);
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return;
    }
    data.WriteParcelable(&info);
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return;
    }
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:153:5
复杂度: 0
定义变量: __pos, __negative, _Nd, logTag
使用变量: , __p, __x, __builtin_operator_delete, __y, __comp, __position, offset, tagNames, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleJsHeapMemory start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:155:19
复杂度: 0
定义变量: __loc, data
使用变量: __last2, __hf
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:156:19
复杂度: 0
定义变量: __x_copy, reply
使用变量: , __n, __first1, __c2, offset
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:157:19
复杂度: 0
定义变量: __lit, option
使用变量: , __a, __b, __pos, __x_copy, __predicate, __shift, __lc, debugApp, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:158:5
复杂度: 1
定义变量: 
使用变量: __size, __dest, __lc, __throw_concurrence_unlock_error
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:158:10
复杂度: 0
定义变量: __c, __uNd, descriptor
使用变量: , __a, __p, __h, __size, __it1, __nodes, __pos, __gthread_active_p, __lc, _Nd, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:159:9
复杂度: 0
定义变量: __old_val, __r, registration, logTag
使用变量: , __x, __obj, __i, __other, __pos, __s, __loc, __facets, memory_order_seq_cst, Get, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:160:9
复杂度: 0
定义变量: __fn, __grouping_tmp
使用变量: , __x, __throw_bad_cast
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:163:19
复杂度: 0
定义变量: 
使用变量: , __b, __first, __s, __shift, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:164:5
复杂度: 1
定义变量: __n, __last_pos
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:165:9
复杂度: 0
定义变量: __digits10, __alloc, logTag
使用变量: , __r, __x, __size, __comp, __first1, __last1, __m, __svt, __i1, __i2, offset, tagNames, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:166:9
复杂度: 0
定义变量: 
使用变量: , __x, __beg
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleShrinkMemory
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:170:25
复杂度: 0
定义变量: 
使用变量: __res, __pos
关键位置: 是
日志评分: -2
  - Method Declaration 缺少日志: 得分 -2
代码:
void AppSchedulerProxy::ScheduleShrinkMemory(const int32_t level)
{
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_SHRINK_MEMORY_APPLICATION_TRANSACTION);
    ScheduleMemoryCommon(level, operation);
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: ScheduleMemoryCommon
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:173:5
复杂度: 0
定义变量: __n, __a, __p, __res, tagNames
使用变量: , __l, __p, __r, __n, __c, __d, __last1, __end, __beg, __cont, __m, __current, operator&, level, operation
关键位置: 否
日志评分: 0
代码:
    ScheduleMemoryCommon(level, operation);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleMemoryCommon
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:176:25
复杂度: 2
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __position, __old
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleMemoryCommon(const int32_t level, const uint32_t operation)
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    data.WriteInt32(level);
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:178:19
复杂度: 0
定义变量: data
使用变量: , __i, __last2, __s, operator^, offset
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:179:19
复杂度: 0
定义变量: reply
使用变量: __first
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:180:19
复杂度: 0
定义变量: __uNd, option
使用变量: , __p, __value, __last1, _Nd, _Lp, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:181:5
复杂度: 1
定义变量: 
使用变量: __first1, __atomic_thread_fence
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:181:10
复杂度: 0
定义变量: __assignable, __r, __found_mantissa, BASE_DEFAULT
使用变量: , __ptr, __comp, __last1, __s, __which, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:182:9
复杂度: 0
定义变量: __sep_pos
使用变量: __a, __x
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:185:19
复杂度: 0
定义变量: BASE_EXT
使用变量: , __c, __last, _Num, __result, __lc, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:186:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:187:9
复杂度: 0
定义变量: BASE_LOCAL_CALL, logTag
使用变量: , __a, __r, __b, __args, _Idx, __arg, __exchange_and_add_dispatch, operator&, errorInfoEnhance, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleLaunchAbility
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:191:25
复杂度: 8
定义变量: __cmp
使用变量: , __is_constant_evaluated, __builtin_unreachable, __i, __guard, __found_grouping, __date, __time
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleLaunchAbility(const AbilityInfo &info, const sptr<IRemoteObject> &token,
    const std::shared_ptr<AAFwk::Want> &want, int32_t abilityRecordId)
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    data.WriteParcelable(&info);
    if (token) {
        if (!data.WriteBool(true) || !data.WriteRemoteObject(token.GetRefPtr())) {
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag and token");
            return;
        }
    } else {
        if (!data.WriteBool(false)) {
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag");
            return;
        }
    }

    if (!data.WriteParcelable(want.get())) {
        TAG_LOGE(AAFwkTag::APPMGR, "write want fail.");
        AbilityRuntime::FreezeUtil::GetInstance().AppendLifecycleEvent(token,
            "AppLifeCycleDeal::LaunchAbility; write want fail");
        return;
    }
    if (!data.WriteInt32(abilityRecordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write ability record id fail.");
        return;
    }
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_LAUNCH_ABILITY_TRANSACTION), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        AbilityRuntime::FreezeUtil::GetInstance().AppendLifecycleEvent(token,
            "AppLifeCycleDeal::LaunchAbility; ipc error " + std::to_string(ret));
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:194:19
复杂度: 0
定义变量: __q, data
使用变量: __capacity, space
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:195:19
复杂度: 0
定义变量: __cur, __qend, reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:196:19
复杂度: 0
定义变量: option
使用变量: value, , __a, __first, __last, __it, __val, __from, __arg, tag, GetDomainName2, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:197:5
复杂度: 1
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __alloc
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:197:10
复杂度: 0
定义变量: in_place
使用变量: , __from, __len, __end, __beg, __clone_functor, __mandatory_sign, jitEnabled, BASE_DELEGATOR, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:198:9
复杂度: 0
定义变量: __another
使用变量: __first, __beg, __cur, BASE_EXT
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:201:5
复杂度: 4
定义变量: __n
使用变量: , __is_constant_evaluated, __builtin_unreachable, __i, __size, __other, __old_p, __throw_concurrence_lock_error
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (token) {
        if (!data.WriteBool(true) || !data.WriteRemoteObject(token.GetRefPtr())) {
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag and token");
            return;
        }
    } else {
        if (!data.WriteBool(false)) {
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag");
            return;
        }
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator bool
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:201:9
复杂度: 0
定义变量: 
使用变量: __p, __n, __another, token
关键位置: 否
日志评分: 0
代码:
    if (token) {

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:202:9
复杂度: 1
定义变量: 
使用变量: __size
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
        if (!data.WriteBool(true) || !data.WriteRemoteObject(token.GetRefPtr())) {
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag and token");
            return;
        }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteRemoteObject
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:202:39
复杂度: 0
定义变量: 
使用变量: data, token
关键位置: 否
日志评分: 0
代码:
        if (!data.WriteBool(true) || !data.WriteRemoteObject(token.GetRefPtr())) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: sptr
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:202:62
复杂度: 0
定义变量: 
使用变量: token
关键位置: 否
日志评分: 0
代码:
        if (!data.WriteBool(true) || !data.WriteRemoteObject(token.GetRefPtr())) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: GetRefPtr
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:202:62
复杂度: 0
定义变量: 
使用变量: token
关键位置: 否
日志评分: 0
代码:
        if (!data.WriteBool(true) || !data.WriteRemoteObject(token.GetRefPtr())) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:203:13
复杂度: 0
定义变量: _Nd_ull, logTag
使用变量: , __first, __last, __digits, __comp, __len, __end, __beg, __dest, __cur, _S_word_bit, __j, __old_p, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag and token");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:204:13
复杂度: 0
定义变量: 
使用变量: , __a, __res, __pos
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:207:9
复杂度: 1
定义变量: __p
使用变量: , __i, __seed, __ret, __size, __testvalid
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
        if (!data.WriteBool(false)) {
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag");
            return;
        }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:208:13
复杂度: 0
定义变量: logTag
使用变量: , __n, __last, __i, __size, __other, __q, __unary_pred, __str, __pend, __qend, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
            TAG_LOGE(AAFwkTag::APPMGR, "Failed to write flag");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:209:13
复杂度: 0
定义变量: __diff, __found_grouping
使用变量: __p, allocator_arg
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
            return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:213:5
复杂度: 1
定义变量: 
使用变量: , __prev, __throw_concurrence_unlock_error
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteParcelable(want.get())) {
        TAG_LOGE(AAFwkTag::APPMGR, "write want fail.");
        AbilityRuntime::FreezeUtil::GetInstance().AppendLifecycleEvent(token,
            "AppLifeCycleDeal::LaunchAbility; write want fail");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:214:9
复杂度: 0
定义变量: __q, __diff, logTag
使用变量: , __a, __p, __x, __n, __first, __d, __beg, __cur, __q, __lc, _Nd, _Nd_ul, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write want fail.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:217:9
复杂度: 0
定义变量: __tmp
使用变量: , __beg, __loc
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:219:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteInt32(abilityRecordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "write ability record id fail.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:220:9
复杂度: 0
定义变量: logTag
使用变量: , _Nm, __p, __t, __x, __first, __e, __rhs, __y, __f, __builtin_clzll, __beg, __cur, __urng, __diff, iostream_category, __lc, _Lp, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "write ability record id fail.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:221:9
复杂度: 0
定义变量: __dnew
使用变量: __a, operator+=
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:223:19
复杂度: 0
定义变量: __n, MAX_RAWDATA_SIZE, MIN_RAWDATA_SIZE
使用变量: , _Nm, __a, __p, __n, __c, __uhead, __pos, _S_local_capacity, system_category, __lc, _Nd_ull, data, reply, option, SCHEDULE_LAUNCH_ABILITY_TRANSACTION
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_LAUNCH_ABILITY_TRANSACTION), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:225:5
复杂度: 1
定义变量: 
使用变量: __size
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        AbilityRuntime::FreezeUtil::GetInstance().AppendLifecycleEvent(token,
            "AppLifeCycleDeal::LaunchAbility; ipc error " + std::to_string(ret));
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:226:9
复杂度: 0
定义变量: logTag
使用变量: , __r, __fp, npos, __dnew, __lc, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleCleanAbility
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:232:25
复杂度: 4
定义变量: __cmp
使用变量: , __is_constant_evaluated, __builtin_unreachable, __pos, __guard, __dt, __ampm_format
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleCleanAbility(const sptr<IRemoteObject> &token, bool isCacheProcess)
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    if (!data.WriteRemoteObject(token.GetRefPtr())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to write token");
        return;
    }
    if (!data.WriteBool(isCacheProcess)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to write bool");
        return;
    }
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_CLEAN_ABILITY_TRANSACTION), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:234:19
复杂度: 0
定义变量: __low, data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:235:19
复杂度: 0
定义变量: reply
使用变量: __x, __b, __val
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:236:19
复杂度: 0
定义变量: option
使用变量: __n, __c, __y, operator==, __pm, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:237:5
复杂度: 1
定义变量: 
使用变量: __throw_logic_error
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:237:10
复杂度: 0
定义变量: __tailSize
使用变量: , __a, __last, __end, __beg, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:238:9
复杂度: 0
定义变量: 
使用变量: , __len
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:240:5
复杂度: 1
定义变量: 
使用变量: __first
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteRemoteObject(token.GetRefPtr())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to write token");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteRemoteObject
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:240:10
复杂度: 0
定义变量: __q
使用变量: __v, , __x, __it, __val, __pos, __secondChild, __remainder, __tailSize, __lit_zero, data, token
关键位置: 否
日志评分: 0
代码:
    if (!data.WriteRemoteObject(token.GetRefPtr())) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: sptr
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:240:33
复杂度: 0
定义变量: 
使用变量: , __lit_zero, token
关键位置: 否
日志评分: 0
代码:
    if (!data.WriteRemoteObject(token.GetRefPtr())) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: GetRefPtr
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:240:33
复杂度: 0
定义变量: 
使用变量: , __lit_zero, token
关键位置: 否
日志评分: 0
代码:
    if (!data.WriteRemoteObject(token.GetRefPtr())) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:241:9
复杂度: 0
定义变量: logTag
使用变量: , __a, __x, __n, __c, __first, __i, __y, __comp, __hf, __beg, operator<, __holeIndex, __secondChild, __cat, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to write token");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:242:9
复杂度: 0
定义变量: 
使用变量: , __q, __remainder
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:244:5
复杂度: 1
定义变量: 
使用变量: __p, __n, __pos
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteBool(isCacheProcess)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to write bool");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:245:9
复杂度: 0
定义变量: __res, logTag
使用变量: , __p, __n, __c, __first, __i, __count, __comp, __len, __s, __cxa_init_primary_exception, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to write bool");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:246:9
复杂度: 0
定义变量: 
使用变量: __val
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:248:19
复杂度: 0
定义变量: 
使用变量: , __a, __p, __x, __n, __last, __d, _Np, __len, _Unique_keys, __pos, __cont, __cmp, data, reply, option, SCHEDULE_CLEAN_ABILITY_TRANSACTION
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_CLEAN_ABILITY_TRANSACTION), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:250:5
复杂度: 1
定义变量: 
使用变量: __c, __len
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:251:9
复杂度: 0
定义变量: _Nd, logTag
使用变量: , __p, __x, __args, __c, __e, __y, operator<, __hi, __lo, __atomic_is_lock_free, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleLaunchApplication
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:255:25
复杂度: 4
定义变量: 
使用变量: , __n, __is_constant_evaluated, __builtin_unreachable, __val, __ampm, __days, __months, __atomic_store, __atomic_load
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleLaunchApplication(const AppLaunchData &launchData, const Configuration &config)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleLaunchApplication start");
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }

    auto msgKey = AbilityRuntime::ErrorMgsUtil::BuildErrorKey(reinterpret_cast<uintptr_t>(this),
        "LaunchApplication");
    AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey, "AppScheduler::ScheduleLaunchApplication");
    if (!data.WriteParcelable(&launchData)) {
        TAG_LOGE(AAFwkTag::APPMGR, "WriteParcelable launchData failed");
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey, "write launchData fail");
        return;
    }

    if (!data.WriteParcelable(&config)) {
        TAG_LOGE(AAFwkTag::APPMGR, "WriteParcelable config failed");
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey, "write config fail");
        return ;
    }

    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_LAUNCH_APPLICATION_TRANSACTION), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey,
            std::string("ScheduleLaunchApplication ipc error ") + std::to_string(ret));
    }
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:257:5
复杂度: 0
定义变量: __x, _Nd_ul, sentry, logTag
使用变量: , __p, __t, __x, __digits, __y, __u, __end, __beg, _S_word_bit, operator|, in, out, __lc, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleLaunchApplication start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:258:19
复杂度: 0
定义变量: _Nd_u, data
使用变量: __n, __exchange_and_add_dispatch, __pend, __lc
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:259:19
复杂度: 0
定义变量: reply
使用变量: , __product
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:260:19
复杂度: 0
定义变量: option
使用变量: __v, , __p, __first, __last, __count, _Idx, __original_len, _S_alignment, _Nd, _Nd_u, __less, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:261:5
复杂度: 1
定义变量: 
使用变量: __p
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:261:10
复杂度: 0
定义变量: 
使用变量: , __a, __l, __p, __x, __n, __capacity, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:262:9
复杂度: 0
定义变量: __tmp, __threshold
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:268:5
复杂度: 1
定义变量: 
使用变量: , __ref
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteParcelable(&launchData)) {
        TAG_LOGE(AAFwkTag::APPMGR, "WriteParcelable launchData failed");
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey, "write launchData fail");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:269:9
复杂度: 0
定义变量: __tmp, logTag
使用变量: , __a, __p, __n, __first, __last, __d, __val, __nh, __product, __unary_pred, operator|, in, out, __found_sci, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "WriteParcelable launchData failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:271:9
复杂度: 0
定义变量: 
使用变量: , __a
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:274:5
复杂度: 1
定义变量: 
使用变量: , __dest, __testvalid
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteParcelable(&config)) {
        TAG_LOGE(AAFwkTag::APPMGR, "WriteParcelable config failed");
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey, "write config fail");
        return ;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:275:9
复杂度: 0
定义变量: __add, __high, logTag
使用变量: , _Nm, __x, __n, __first, __last, __ref, operator+=, __sep_pos, memory_order_seq_cst, _Nd_ull, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "WriteParcelable config failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:277:9
复杂度: 0
定义变量: 
使用变量: __get_functor_ptr, __w
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:280:19
复杂度: 0
定义变量: __val
使用变量: __a, __count, __beg, __hi, __lo, space, __ctype, __pcvt, memory_order_seq_cst, data, reply, option, SCHEDULE_LAUNCH_APPLICATION_TRANSACTION
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_LAUNCH_APPLICATION_TRANSACTION), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:282:5
复杂度: 1
定义变量: 
使用变量: , __digits, __lo, __testvalid, __throw_concurrence_broadcast_error
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        AbilityRuntime::ErrorMgsUtil::GetInstance().UpdateErrorMsg(msgKey,
            std::string("ScheduleLaunchApplication ipc error ") + std::to_string(ret));
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:283:9
复杂度: 0
定义变量: __buf, __new_capacity, __b, logTag
使用变量: , __a, __tmp, __n, __val, __rsize, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleUpdateApplicationInfoInstalled
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:289:25
复杂度: 3
定义变量: 
使用变量: __pos, __sv, __months, __atomic_load, __atomic_exchange
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleUpdateApplicationInfoInstalled(const ApplicationInfo &appInfo)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleUpdateApplicationInfoInstalled begin");
    MessageParcel data;
    if (!WriteInterfaceToken(data)) {
        return;
    }
    if (!data.WriteParcelable(&appInfo)) {
        return ;
    }
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_UPDATE_APPLICATION_INFO_INSTALLED), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleUpdateApplicationInfoInstalled end");
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:291:5
复杂度: 0
定义变量: __ret, __new_result, _7, id, logTag
使用变量: , __args, __ptr, __tail, __param, __str, __rsize, __found_dec, __found_sci, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleUpdateApplicationInfoInstalled begin");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:292:19
复杂度: 0
定义变量: _Nd, data
使用变量: __first1
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:293:5
复杂度: 1
定义变量: 
使用变量: __urngrange, __throw_concurrence_wait_error
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:293:10
复杂度: 0
定义变量: __ret, _9
使用变量: , __first, __last1, __state, __rsize, _S_single, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:294:9
复杂度: 0
定义变量: __cur
使用变量: __it2, __result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:296:5
复杂度: 1
定义变量: 
使用变量: __first, __last, __cur, __sign_size
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!data.WriteParcelable(&appInfo)) {
        return ;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:297:9
复杂度: 0
定义变量: 
使用变量: , __first, __found_grouping
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:299:19
复杂度: 0
定义变量: reply
使用变量: __first, __cur
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:300:19
复杂度: 0
定义变量: _16, option
使用变量: , __two, __pos, _Nd, _Nd_ul, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:301:19
复杂度: 0
定义变量: __buf, _17, _18, delegator_
使用变量: , __t, __x, __n, __first, __last, __i, __it, __u, min, __pos, __end, __beg, __urngrange, __buf, __sign_size, __sign, _Nd, _Nd_ull, _Lp, data, reply, option, SCHEDULE_UPDATE_APPLICATION_INFO_INSTALLED
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_UPDATE_APPLICATION_INFO_INSTALLED), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:303:5
复杂度: 1
定义变量: 
使用变量: __ptr, __throw_concurrence_wait_error
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:304:9
复杂度: 0
定义变量: _20, logTag
使用变量: , __b, __tmp, __first, __last, __i, __pos, __m, __str, __rlen, __sign_size, _Lp, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:306:5
复杂度: 0
定义变量: __tmp, __q, __u64erange, _22, logTag
使用变量: , _Idx, __in, __builtin_expect, __uerange, _Nd, _Nd_ull, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleUpdateApplicationInfoInstalled end");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleAbilityStage
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:309:25
复杂度: 7
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable, __f, __pos, __months, __throw_range_error, __is_valid_cmpexch_failure_order, __atomic_exchange
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleAbilityStage(const HapModuleInfo &abilityStage)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleAbilityStage start");
    MessageParcel data;
    constexpr int32_t max = 10000;
    constexpr int32_t large = 60;
    constexpr int32_t mid = 20;
    auto abilityInfoSize = static_cast<int32_t>(abilityStage.abilityInfos.size());
    auto extensionInfoSize = static_cast<int32_t>(abilityStage.extensionInfos.size());
    if (abilityInfoSize > max || extensionInfoSize > max) {
        TAG_LOGE(AAFwkTag::APPMGR, "size exceeds max");
        return;
    }
    auto componentSize = abilityInfoSize + extensionInfoSize;
    if (componentSize > large) {
        constexpr int32_t size = 2 * 1024 * 1024; // 1.6 M
        data.SetDataCapacity(size);
    } else if (componentSize > mid) {
        constexpr int32_t size = 800 * 1024; // 800 kb
        data.SetDataCapacity(size);
    }
    if (!WriteInterfaceToken(data)) {
        return;
    }

    if (!data.WriteParcelable(&abilityStage)) {
        return ;
    }

    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_ABILITY_STAGE_INFO), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleAbilityStage end");
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:311:5
复杂度: 0
定义变量: __tmp, _27, __high, __less, logTag
使用变量: , __x, __obj, __tmp, __pred, __res, __pos, __sv_check, __capacity, __found_mantissa, _Nd_ull, _Lp, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleAbilityStage start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:312:19
复杂度: 0
定义变量: data
使用变量: __v, __r, __tmp
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:318:5
复杂度: 1
定义变量: __ret
使用变量: , __ret
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (abilityInfoSize > max || extensionInfoSize > max) {
        TAG_LOGE(AAFwkTag::APPMGR, "size exceeds max");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:319:9
复杂度: 0
定义变量: __tmp, __can_fill, __rlen, logTag
使用变量: , __a, __p, __x, __str, __found_grouping, __found_dec, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "size exceeds max");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:320:9
复杂度: 0
定义变量: 
使用变量: , __found_grouping, __negative
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:323:5
复杂度: 3
定义变量: 
使用变量: , __ret, __lhs, __builtin_expect, __atomic_always_lock_free
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (componentSize > large) {
        constexpr int32_t size = 2 * 1024 * 1024; // 1.6 M
        data.SetDataCapacity(size);
    } else if (componentSize > mid) {
        constexpr int32_t size = 800 * 1024; // 800 kb
        data.SetDataCapacity(size);
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[] → IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:326:12
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    } else if (componentSize > mid) {
        constexpr int32_t size = 800 * 1024; // 800 kb
        data.SetDataCapacity(size);
    }

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:330:5
复杂度: 1
定义变量: 
使用变量: __last, __err
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:330:10
复杂度: 0
定义变量: 
使用变量: , __a, __first, __tail, __tag, __comp, __pos, __w, __lc, memory_order_seq_cst, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:331:9
复杂度: 0
定义变量: 
使用变量: , __c, __ret, __urngrange, __rresult, __str, __grouping_tmp
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:334:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!data.WriteParcelable(&abilityStage)) {
        return ;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:335:9
复杂度: 0
定义变量: 
使用变量: , __comp
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:338:19
复杂度: 0
定义变量: reply
使用变量: __l, __e
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:339:19
复杂度: 0
定义变量: option
使用变量: , __a, __x, __last, __i, __d, __tail, __mid, __str, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:340:19
复杂度: 0
定义变量: 
使用变量: __v, , __a, __p, __first, __last, __f, __head, __out, __new_capacity, data, reply, option, SCHEDULE_ABILITY_STAGE_INFO
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_ABILITY_STAGE_INFO), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:342:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:343:9
复杂度: 0
定义变量: logTag
使用变量: __i, _Self, operator+, operator*, __out, __str, __pos1, __n1, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:345:5
复杂度: 0
定义变量: __ret, logTag
使用变量: , __a, __p, __n, __first, __i, __result, __ineof, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy ScheduleAbilityStage end");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleProfileChanged
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:348:25
复杂度: 2
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __f, __result, __c1, __is_valid_cmpexch_failure_order
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleProfileChanged(const Profile &profile)
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    data.WriteParcelable(&profile);
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_PROFILE_CHANGED_TRANSACTION), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:350:19
复杂度: 0
定义变量: data
使用变量: , __exchange_and_add_dispatch
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:351:19
复杂度: 0
定义变量: reply
使用变量: , __x, __last, __nh
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:352:19
复杂度: 0
定义变量: __parent, dec, option
使用变量: , __r, __n, __first, __last, __i, __e, __alloc, __result, __len, __pos, __m, _S_dec, memory_order_seq_cst, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:353:5
复杂度: 1
定义变量: 
使用变量: __position, __urng
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:353:10
复杂度: 0
定义变量: __n
使用变量: , __first, __position, __cur, __urange, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:354:9
复杂度: 0
定义变量: 
使用变量: __tmp, __result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:357:19
复杂度: 0
定义变量: __num, _S_twinned_facets, hex, _Nd
使用变量: , __a, __n, __first, __last, __alloc, __in, __cur, __hi, __lo, __to, _S_hex, __dfault, __found_sci, data, reply, option, SCHEDULE_PROFILE_CHANGED_TRANSACTION
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_PROFILE_CHANGED_TRANSACTION), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:359:5
复杂度: 1
定义变量: 
使用变量: __found_grouping
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:360:9
复杂度: 0
定义变量: logTag
使用变量: , __r, __x, __first, __num, _Nd, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleConfigurationUpdated
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:364:25
复杂度: 2
定义变量: 
使用变量: __is_constant_evaluated, __builtin_unreachable, __f, __result, __is_valid_cmpexch_failure_order
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleConfigurationUpdated(const Configuration &config)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    data.WriteParcelable(&config);
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_CONFIGURATION_UPDATED), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:367:19
复杂度: 0
定义变量: __capacity, _Nd, data
使用变量: , __last, _S_single
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:368:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:369:19
复杂度: 0
定义变量: option
使用变量: , __r, __y, __c1, _S_local_capacity, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:370:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:370:10
复杂度: 0
定义变量: __num, oct
使用变量: __last, __c2, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:371:9
复杂度: 0
定义变量: 
使用变量: __num
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:374:19
复杂度: 0
定义变量: right
使用变量: , __a, __t, __i, __e, _Idx, __end, __beg, __str, __err, _S_right, __io, data, reply, option, SCHEDULE_CONFIGURATION_UPDATED
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_CONFIGURATION_UPDATED), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:376:5
复杂度: 1
定义变量: 
使用变量: , __n
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:377:9
复杂度: 0
定义变量: scientific, logTag
使用变量: , __a, __tmp, __first, __last, __it, __out, __str, __err, _S_get_c_locale, _S_scientific, __convert_to_v, __units, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleProcessSecurityExit
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:381:25
复杂度: 2
定义变量: 
使用变量: __throw_range_error
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleProcessSecurityExit()
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_PROCESS_SECURITY_EXIT_TRANSACTION), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:383:19
复杂度: 0
定义变量: __urngmax, data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:384:19
复杂度: 0
定义变量: __urngrange, __lc, reply
使用变量: __s2
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:385:19
复杂度: 0
定义变量: __comp, _S_c_name, showpoint, option
使用变量: , __x, __args, __first, _Idx, __y, __iter_equal_to_iter, _S_showpoint, __lc, memory_order_seq_cst, __default_lock_policy, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:386:5
复杂度: 1
定义变量: 
使用变量: __p, __ret
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:386:10
复杂度: 0
定义变量: __c
使用变量: , __first, __last, __param, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:387:9
复杂度: 0
定义变量: 
使用变量: __first, __result
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:389:19
复杂度: 0
定义变量: __sb, __loc, __basefield, __ctype
使用变量: , __a, __x, __n, __args, __first, _Idx, __in, __constant_iterators, __m, __urange, __s1, __s2, __loc, operator&, basefield, __sb, __io, memory_order_seq_cst, __cmpexch_failure_order, data, reply, option, SCHEDULE_PROCESS_SECURITY_EXIT_TRANSACTION
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_PROCESS_SECURITY_EXIT_TRANSACTION), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:391:5
复杂度: 1
定义变量: __base
使用变量: , __x
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:392:9
复杂度: 0
定义变量: __str, logTag
使用变量: , __x, __tmp, __pos, __urngrange, hex, __basefield, __oct, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleClearPageStack
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:396:25
复杂度: 2
定义变量: 
使用变量: , __ptr
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleClearPageStack()
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_CLEAR_PAGE_STACK), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:398:19
复杂度: 0
定义变量: data
使用变量: , _Idx, __y, __len
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:399:19
复杂度: 0
定义变量: __size, reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:400:19
复杂度: 0
定义变量: option
使用变量: , __n, _Idx, __n2, __n1, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:401:5
复杂度: 1
定义变量: 
使用变量: __c, __result, __negative
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:401:10
复杂度: 0
定义变量: adjustfield
使用变量: , __n, __c, __size, __beg, __s, __atomic_add_fetch, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:402:9
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:404:19
复杂度: 0
定义变量: basefield
使用变量: , __x, __c, __first, __i, __pos, __urngrange, __urange, __uerange, __str, __refs, _S_basefield, __lc, memory_order_seq_cst, data, reply, option, SCHEDULE_CLEAR_PAGE_STACK
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_CLEAR_PAGE_STACK), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:406:5
复杂度: 1
定义变量: 
使用变量: __c, __ret
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:407:9
复杂度: 0
定义变量: __cur, floatfield, logTag
使用变量: , __t, __x, __first, __f, __result, __arg, __end, __beg, _S_floatfield, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleAcceptWant
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:411:25
复杂度: 3
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __pos
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleAcceptWant(const AAFwk::Want &want, const std::string &moduleName)
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }

    if (!data.WriteParcelable(&want) || !data.WriteString(moduleName)) {
        return;
    }
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_ACCEPT_WANT), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:413:19
复杂度: 0
定义变量: __tmp, data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:414:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:415:19
复杂度: 0
定义变量: option
使用变量: _IsMove, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:416:5
复杂度: 1
定义变量: __sep_pos
使用变量: __n
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:416:10
复杂度: 0
定义变量: 
使用变量: , __first, __alloc, _Idx, __cur, __urngrange, __urange, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:417:9
复杂度: 0
定义变量: 
使用变量: , __n
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:420:5
复杂度: 1
定义变量: 
使用变量: __c
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!data.WriteParcelable(&want) || !data.WriteString(moduleName)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:421:9
复杂度: 0
定义变量: 
使用变量: , __lc
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:423:19
复杂度: 0
定义变量: 
使用变量: , __t, __n, __it, __result, _IsMove, __builtin_memmove, __base, __beg, __s1, __s2, _S_izero, __lit, data, reply, option, SCHEDULE_ACCEPT_WANT
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_ACCEPT_WANT), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:425:5
复杂度: 1
定义变量: 
使用变量: __sep_pos
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:426:9
复杂度: 0
定义变量: logTag
使用变量: __cache, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleNewProcessRequest
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:430:25
复杂度: 4
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleNewProcessRequest(const AAFwk::Want &want, const std::string &moduleName)
{
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }

    if (!data.WriteParcelable(&want) || !data.WriteString(moduleName)) {
        return;
    }
    sptr<IRemoteObject> remote = Remote();
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote() is NULL");
        return;
    }
    int32_t ret = remote->SendRequest(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NEW_PROCESS_REQUEST), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:432:19
复杂度: 0
定义变量: __ctype, data
使用变量: , _Num
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:433:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:434:19
复杂度: 0
定义变量: __uc, option
使用变量: __t, __c, __first1, __key, __lit, _S_ix, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:435:5
复杂度: 1
定义变量: 
使用变量: __ret, __builtin_expect
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:435:10
复杂度: 0
定义变量: __lc
使用变量: , __head, __first2, __builtin_memcpy, __loc, __uc, __lit, _S_iX, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:436:9
复杂度: 0
定义变量: 
使用变量: 
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:439:5
复杂度: 1
定义变量: 
使用变量: __n, __s
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!data.WriteParcelable(&want) || !data.WriteString(moduleName)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:440:9
复杂度: 0
定义变量: 
使用变量: , __x, __ret, __urng
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:443:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote() is NULL");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator==
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:443:9
复杂度: 0
定义变量: __sign
使用变量: , __first, __ret, operator==, __urange, __atomic_is_lock_free, remote
关键位置: 否
日志评分: 0
代码:
    if (remote == nullptr) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:444:9
复杂度: 0
定义变量: __sign_size, logTag
使用变量: , __p, __ret, __nh, __pos, __str, _S_alignment, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Remote() is NULL");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:445:9
复杂度: 0
定义变量: 
使用变量: , __n, __beg
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendRequest
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:447:19
复杂度: 0
定义变量: __len
使用变量: , __a, __p, __r, __x, __n, __c, __rhs, __f, __builtin_memset, __s, npos, __eof, __sb, _S_single, data, reply, option, remote, operator->, SCHEDULE_NEW_PROCESS_REQUEST
关键位置: 否
日志评分: 0
代码:
    int32_t ret = remote->SendRequest(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NEW_PROCESS_REQUEST), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator->
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:447:19
复杂度: 0
定义变量: 
使用变量: __rhs, __sb, remote, operator->
关键位置: 否
日志评分: 0
代码:
    int32_t ret = remote->SendRequest(

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:449:5
复杂度: 1
定义变量: 
使用变量: __sign_size
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:450:9
复杂度: 0
定义变量: __old_start, logTag
使用变量: , __f, __end, __beg, __n2, __n1, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleNotifyLoadRepairPatch
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:454:28
复杂度: 5
定义变量: 
使用变量: __b, __is_constant_evaluated, __builtin_unreachable, memory_order_acq_rel, memory_order_acquire, memory_order_release, memory_order_consume, __atomic_store_n
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleNotifyLoadRepairPatch(const std::string &bundleName,
    const sptr<IQuickFixCallback> &callback, const int32_t recordId)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    MessageParcel data;
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Write interface token failed.");
        return ERR_INVALID_DATA;
    }

    if (!data.WriteString(bundleName)) {
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Write bundle name failed.");
        return ERR_INVALID_DATA;
    }

    if (callback == nullptr || !data.WriteRemoteObject(callback->AsObject())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");
        return ERR_INVALID_DATA;
    }

    if (!data.WriteInt32(recordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");
        return ERR_INVALID_DATA;
    }

    MessageParcel reply;
    MessageOption option;
    int32_t ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_LOAD_REPAIR_PATCH),
        data, reply, option);
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Send request failed with errno %{public}d.", ret);
        return ret;
    }

    return reply.ReadInt32();
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:458:19
复杂度: 0
定义变量: data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:459:5
复杂度: 1
定义变量: 
使用变量: , __c, __m
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Write interface token failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:459:10
复杂度: 0
定义变量: __how_much
使用变量: __old_size, operator&, __sb, __memory_order_mask, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:460:9
复杂度: 0
定义变量: __tmp, logTag
使用变量: , __x, __y, __n2, npos, __n1, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Write interface token failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:461:9
复杂度: 0
定义变量: __len
使用变量: , __p, __n, operator+=, __n2, __k1, __k2, __ctype, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:464:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteString(bundleName)) {
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Write bundle name failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:465:9
复杂度: 0
定义变量: logTag
使用变量: __args, __eof, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Write bundle name failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:466:9
复杂度: 0
定义变量: in
使用变量: __n2, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:469:5
复杂度: 1
定义变量: 
使用变量: __value, __m
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr || !data.WriteRemoteObject(callback->AsObject())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:470:9
复杂度: 0
定义变量: __node, logTag
使用变量: , __x, __tmp, __n, __c, __y, __tp, operator-=, eof, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:471:9
复杂度: 0
定义变量: __b
使用变量: __x, __tmp, __node, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:474:5
复杂度: 1
定义变量: 
使用变量: , __paddec
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteInt32(recordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:475:9
复杂度: 0
定义变量: logTag
使用变量: , __a, __tag, __node, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:476:9
复杂度: 0
定义变量: __smax
使用变量: , __n, _Ind, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:479:19
复杂度: 0
定义变量: __lit_zero, reply
使用变量: , _S_relocate, __k1
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:480:19
复杂度: 0
定义变量: option
使用变量: __first, __len1
关键位置: 否
日志评分: 0
代码:
    MessageOption option;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:481:19
复杂度: 0
定义变量: __old_size
使用变量: , __args, __y, option
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_LOAD_REPAIR_PATCH),
        data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:483:5
复杂度: 1
定义变量: 
使用变量: , __m
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Send request failed with errno %{public}d.", ret);
        return ret;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:484:9
复杂度: 0
定义变量: logTag
使用变量: _Nm, __is_constant_evaluated, npos, __refs, operator&, __memory_order_mask, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "ScheduleNotifyLoadRepairPatch, Send request failed with errno %{public}d.", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:485:9
复杂度: 0
定义变量: 
使用变量: , __p, __x, __y, __beg, __new_size, _S_copy, ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ret;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:488:5
复杂度: 0
定义变量: __node, __eof
使用变量: , __x, __atomic_load_n, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return reply.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleNotifyHotReloadPage
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:491:28
复杂度: 4
定义变量: 
使用变量: , __b, __is_constant_evaluated, __builtin_unreachable, __c1, __nbytes, memory_order_acq_rel, memory_order_release
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleNotifyHotReloadPage(const sptr<IQuickFixCallback> &callback, const int32_t recordId)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    MessageParcel data;
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed!");
        return ERR_INVALID_DATA;
    }

    if (callback == nullptr || !data.WriteRemoteObject(callback->AsObject())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");
        return ERR_INVALID_DATA;
    }

    if (!data.WriteInt32(recordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");
        return ERR_INVALID_DATA;
    }

    MessageParcel reply;
    MessageOption option;
    auto ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_HOT_RELOAD_PAGE),
        data, reply, option);
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with errno %{public}d.", ret);
        return ret;
    }

    return reply.ReadInt32();
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:494:19
复杂度: 0
定义变量: data
使用变量: , __result, __old_finish
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:495:5
复杂度: 1
定义变量: 
使用变量: __value, __result, __m
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed!");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:495:10
复杂度: 0
定义变量: beg
使用变量: , __first, __d, operator&, _S_beg, __lc, __digit, __memory_order_mask, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:496:9
复杂度: 0
定义变量: logTag
使用变量: , __n, __args, __result, __min, __c2, npos, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed!");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:497:9
复杂度: 0
定义变量: __nn
使用变量: , __beg, __paddec, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:500:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr || !data.WriteRemoteObject(callback->AsObject())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:501:9
复杂度: 0
定义变量: end, logTag
使用变量: , __p, __t, __u, __size, __c1, __c2, _S_end, __lit, _S_zero, __paddec, __nn, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:502:9
复杂度: 0
定义变量: __value
使用变量: , __t, __n, __len, __beg, __elems_before, __done, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:505:5
复杂度: 1
定义变量: 
使用变量: __lhs
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteInt32(recordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:506:9
复杂度: 0
定义变量: logTag
使用变量: , __p, __i, __rhs, __lhs, __len1, __len2, __m, operator==, __how_much, __atomic_exchange_n, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:507:9
复杂度: 0
定义变量: __i, __f
使用变量: __rhs, __len2, __k, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:510:19
复杂度: 0
定义变量: reply
使用变量: __max
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:511:19
复杂度: 0
定义变量: __pb1, option
使用变量: _Idx, __min
关键位置: 否
日志评分: 0
代码:
    MessageOption option;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:512:16
复杂度: 0
定义变量: __res, __pb2, __npb
使用变量: , __y, __len2, __old_start, __min, __diff, _S_putback_length, memory_order_seq_cst, option
关键位置: 否
日志评分: 0
代码:
    auto ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_HOT_RELOAD_PAGE),
        data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:514:5
复杂度: 1
定义变量: 
使用变量: , __res
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with errno %{public}d.", ret);
        return ret;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:515:9
复杂度: 0
定义变量: __value, logTag
使用变量: , __t, __rhs, __u, __lhs, __len1, __len2, __end, __beg, operator+=, __new_start, __how_much, __err, __io, __sep_pos, __found_grouping, __tm, _S_putback_length, __npb, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with errno %{public}d.", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:516:9
复杂度: 0
定义变量: 
使用变量: , __p, __s1, wmemcmp, __gbeg, __sep_pos, ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ret;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:519:5
复杂度: 0
定义变量: 
使用变量: , __p, __args, _Idx, __result, min, __len2, __s, __nbytes, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return reply.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleNotifyUnLoadRepairPatch
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:522:28
复杂度: 5
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, _S_copy, __nbytes, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleNotifyUnLoadRepairPatch(const std::string &bundleName,
    const sptr<IQuickFixCallback> &callback, const int32_t recordId)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    MessageParcel data;
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Write interface token failed.");
        return ERR_INVALID_DATA;
    }

    if (!data.WriteString(bundleName)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Write bundle name failed.");
        return ERR_INVALID_DATA;
    }

    if (callback == nullptr || !data.WriteRemoteObject(callback->AsObject())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");
        return ERR_INVALID_DATA;
    }

    if (!data.WriteInt32(recordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");
        return ERR_INVALID_DATA;
    }

    MessageParcel reply;
    MessageOption option;
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_UNLOAD_REPAIR_PATCH), data, reply, option);
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Send request failed with errno %{public}d.", ret);
        return ret;
    }

    return reply.ReadInt32();
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:526:19
复杂度: 0
定义变量: data
使用变量: __p, __rhs, operator==
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:527:5
复杂度: 1
定义变量: 
使用变量: __i
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Write interface token failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:527:10
复杂度: 0
定义变量: __i
使用变量: __hint, __alloc, _Idx, __result, __k, __mid, __lc, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:528:9
复杂度: 0
定义变量: __q, logTag
使用变量: __args, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Write interface token failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:529:9
复杂度: 0
定义变量: __outbuf
使用变量: , __t, __result, __lit_zero, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:532:5
复杂度: 1
定义变量: 
使用变量: __n, __digit
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteString(bundleName)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Write bundle name failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:533:9
复杂度: 0
定义变量: __result, __guard_ptr, logTag
使用变量: , __a, __i, __d, __len2, __q, __nleft, __lit_zero, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Write bundle name failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:534:9
复杂度: 0
定义变量: __tmp
使用变量: , __digit, __sign_size, __atomic_compare_exchange_n, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:537:5
复杂度: 1
定义变量: 
使用变量: __result
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (callback == nullptr || !data.WriteRemoteObject(callback->AsObject())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:538:9
复杂度: 0
定义变量: __old_finish, __outend, logTag
使用变量: , __a, __t, __n, __first, __last, __value, _Idx, __u, __s, wmemchr, _S_buffer_length, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write callback failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:539:9
复杂度: 0
定义变量: 
使用变量: __n, __first, __len1, __pos, __elems_after, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:542:5
复杂度: 1
定义变量: 
使用变量: , __n, __result
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteInt32(recordId)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:543:9
复杂度: 0
定义变量: logTag
使用变量: _SameSize, __f, __ti, __m, operator==, __old_finish, __sep_pos, __cmpexch_failure_order, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write record id failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:544:9
复杂度: 0
定义变量: __value
使用变量: , __x, __old_finish, __testipad, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:547:19
复杂度: 0
定义变量: reply
使用变量: , __end
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:548:19
复杂度: 0
定义变量: option
使用变量: , memory_order_seq_cst
关键位置: 否
日志评分: 0
代码:
    MessageOption option;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:549:19
复杂度: 0
定义变量: _S_id_ctype, _S_id_numeric
使用变量: , __x, __n, __i, __alloc, __y, __k, __position, __mid, __m, __s2, __str, __i1, __i2, none, __nbytes, __get_buf, data, reply, option, SCHEDULE_NOTIFY_UNLOAD_REPAIR_PATCH
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_UNLOAD_REPAIR_PATCH), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:551:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Send request failed with errno %{public}d.", ret);
        return ret;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:552:9
复杂度: 0
定义变量: _S_id_time, logTag
使用变量: , __a, __x, __n, __first, __last, __i, operator(), __ht, __pos, _S_check_init_len, __str, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Schedule notify unload patch, Send request failed with errno %{public}d.", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:553:9
复杂度: 0
定义变量: 
使用变量: ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ret;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:556:5
复杂度: 0
定义变量: 
使用变量: , __a, __b, __n, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return reply.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleNotifyAppFault
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:559:28
复杂度: 3
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __io, __is_valid_cmpexch_failure_order, __m2
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleNotifyAppFault(const FaultData &faultData)
{
    MessageParcel data;

    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return ERR_INVALID_DATA;
    }

    if (!data.WriteParcelable(&faultData)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write FaultData error.");
        return ERR_FLATTEN_OBJECT;
    }

    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    auto ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_FAULT),
        data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code %{public}d.", ret);
        return ret;
    }

    return reply.ReadInt32();
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:561:19
复杂度: 0
定义变量: data
使用变量: __what
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:563:5
复杂度: 1
定义变量: 
使用变量: __res
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:563:10
复杂度: 0
定义变量: is_always_lock_free
使用变量: __it, __rhs, __pend, failbit, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:564:9
复杂度: 0
定义变量: logTag
使用变量: , __p, __x, operator+, __ec, __what, left, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:565:9
复杂度: 0
定义变量: __mid2
使用变量: , __p, __elems_after, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:568:5
复杂度: 1
定义变量: 
使用变量: __v, __n, __first, __res, __str
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!data.WriteParcelable(&faultData)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write FaultData error.");
        return ERR_FLATTEN_OBJECT;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:569:9
复杂度: 0
定义变量: __len, __start, logTag
使用变量: , __a, __first, __last, __len, __s, __str, __fill, __testfail, __width, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write FaultData error.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:570:9
复杂度: 0
定义变量: 
使用变量: __v, __p, __n, __pos, __beg, __mid2, __m, __width, ERR_FLATTEN_OBJECT
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_FLATTEN_OBJECT;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:573:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:574:19
复杂度: 0
定义变量: __middle, option
使用变量: __v, , __a, __n, __first, __last, __alloc, __res, __len, __mid2, __s, operator+, __what, memory_order_seq_cst, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:575:16
复杂度: 0
定义变量: __pos, __old_finish
使用变量: __p, __comp, __middle, __half, __ecat, __cb, option
关键位置: 否
日志评分: 0
代码:
    auto ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_NOTIFY_FAULT),
        data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:577:5
复杂度: 1
定义变量: 
使用变量: __hf, __err
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code %{public}d.", ret);
        return ret;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:578:9
复杂度: 0
定义变量: __len, logTag
使用变量: , __a, __middle, __eql, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code %{public}d.", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:579:9
复杂度: 0
定义变量: __first
使用变量: __n, __first, ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ret;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:582:5
复杂度: 0
定义变量: __new_finish
使用变量: __new_start, pthread_setcanceltype, reply
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return reply.ReadInt32();

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleChangeAppGcState
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:585:28
复杂度: 2
定义变量: 
使用变量: 
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleChangeAppGcState(int32_t state)
{
    MessageParcel data;

    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed");
        return ERR_INVALID_DATA;
    }

    data.WriteInt32(state);
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    auto ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::APP_GC_STATE_CHANGE),
        data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code %{public}d.", ret);
        return ret;
    }

    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:587:19
复杂度: 0
定义变量: data
使用变量: __pos
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:589:5
复杂度: 1
定义变量: 
使用变量: __start, __new_finish
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed");
        return ERR_INVALID_DATA;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:589:10
复杂度: 0
定义变量: __start
使用变量: , __a, __b, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:590:9
复杂度: 0
定义变量: __ret, __move_storage, logTag
使用变量: , __x, __y, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:591:9
复杂度: 0
定义变量: 
使用变量: , __t, __hint, ERR_INVALID_DATA
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_INVALID_DATA;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:595:19
复杂度: 0
定义变量: __k, reply
使用变量: __a, __n
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:596:19
复杂度: 0
定义变量: __loc, option
使用变量: , __first, __last, __y, __k, __io, __outnext, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:597:16
复杂度: 0
定义变量: __ctype
使用变量: , __last, __hint, operator&, option
关键位置: 否
日志评分: 0
代码:
    auto ret = SendTransactCmd(static_cast<uint32_t>(IAppScheduler::Message::APP_GC_STATE_CHANGE),
        data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:599:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code %{public}d.", ret);
        return ret;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:600:9
复杂度: 0
定义变量: __roan, __cs_size, logTag
使用变量: , __a, __t, __i, __u, __next, __position, __pending, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code %{public}d.", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:601:9
复杂度: 0
定义变量: __cs
使用变量: , ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ret;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:604:5
复杂度: 0
定义变量: __len, __start
使用变量: , __node, __beg, NO_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return NO_ERROR;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: AttachAppDebug
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:607:25
复杂度: 2
定义变量: 
使用变量: __facet
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::AttachAppDebug()
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    MessageParcel data;
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return;
    }

    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    auto ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_ATTACH_APP_DEBUG), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to send request with error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:609:5
复杂度: 0
定义变量: logTag
使用变量: , __a, __x, __y, __len, __l_bkt_count, __hash_combine, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:610:19
复杂度: 0
定义变量: data
使用变量: , __new_start
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:611:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:611:10
复杂度: 0
定义变量: 
使用变量: , __a, __l, __first, __typeinfo_result, __m, _S_get_c_locale, __convert_from_v, __cmpexch_failure_order, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:612:9
复杂度: 0
定义变量: __ti, logTag
使用变量: __typeinfo_result, __ti, failbit, __units, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:613:9
复杂度: 0
定义变量: __tmp
使用变量: __beg
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:616:19
复杂度: 0
定义变量: __str, reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:617:19
复杂度: 0
定义变量: option
使用变量: __last, __new_start, memory_order_seq_cst, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:618:16
复杂度: 0
定义变量: __val, _S_buffer_length, _S_putback_length
使用变量: , __args, __first, __last, __i, __rhs, __lhs, __len, __m, __new_start, __new_finish, __p1, __p2, _S_local_word_size, __atomic_fetch_add, data, reply, option, SCHEDULE_ATTACH_APP_DEBUG
关键位置: 否
日志评分: 0
代码:
    auto ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_ATTACH_APP_DEBUG), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:620:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to send request with error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:621:9
复杂度: 0
定义变量: __uc, __guard_ptr, logTag
使用变量: , __a, __first, __last, __str, _S_buffer_length, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Failed to send request with error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: DetachAppDebug
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:625:25
复杂度: 2
定义变量: 
使用变量: , __p, __is_constant_evaluated, __builtin_unreachable, __pos
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::DetachAppDebug()
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    MessageParcel data;
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return;
    }

    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    auto ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_DETACH_APP_DEBUG), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:627:5
复杂度: 0
定义变量: __donef, logTag
使用变量: __lc, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:628:19
复杂度: 0
定义变量: data
使用变量: __l, __s, __lc
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:629:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:629:10
复杂度: 0
定义变量: 
使用变量: data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:630:9
复杂度: 0
定义变量: __n, logTag
使用变量: , __l, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:631:9
复杂度: 0
定义变量: __p
使用变量: _Cond, __n, __m, __donef
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:634:19
复杂度: 0
定义变量: __const_this, __cur, __str, reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:635:19
复杂度: 0
定义变量: __func, option
使用变量: , __p, __args, __const_this, memory_order_seq_cst, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:636:16
复杂度: 0
定义变量: __len
使用变量: , __a, __b, __n, __rhs, __size, __len, __cur, __m, __navail, __p1, __p2, memory_order_seq_cst, data, reply, option, SCHEDULE_DETACH_APP_DEBUG
关键位置: 否
日志评分: 0
代码:
    auto ret = SendTransactCmd(
        static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_DETACH_APP_DEBUG), data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:638:5
复杂度: 1
定义变量: 
使用变量: __builtin_unreachable, __rv
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:639:9
复杂度: 0
定义变量: __c, logTag
使用变量: , __args, __i, __rhs, __pos, __beg, __cur, __rv, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleDumpIpcStart
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:643:28
复杂度: 3
定义变量: 
使用变量: , __is_constant_evaluated, __builtin_unreachable, __ptr, __pos
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleDumpIpcStart(std::string& result)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpIpcStart start");
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_DUMP_IPC_START);
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_SYNC);
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStart result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    return DumpErrorCode::ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:645:5
复杂度: 0
定义变量: logTag
使用变量: __x, __n, __m, __p1, __p2, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpIpcStart start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:647:19
复杂度: 0
定义变量: data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:648:19
复杂度: 0
定义变量: reply
使用变量: , __x, __lc
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:649:19
复杂度: 0
定义变量: __n, option
使用变量: , __pos, __s, TF_SYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_SYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:650:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:650:10
复杂度: 0
定义变量: 
使用变量: __end, __s, __donef, __testt, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:651:9
复杂度: 0
定义变量: __size, __old_start, __old_finish, _S_refcount, _S_synced_with_stdio
使用变量: , __t, __x, __tmp, __n, __first, __last, __i, __y, __u, __result, __m, __testf, __testt, memory_order_seq_cst, __atomic_fetch_or, result, MSG_DUMP_IPC_START_STAT, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:651:9
复杂度: 0
定义变量: __size, __old_start, _S_refcount
使用变量: , __tmp, __n, __first, __i, memory_order_seq_cst, result, MSG_DUMP_IPC_START_STAT, MSG_DUMP_FAIL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:651:9
复杂度: 0
定义变量: __size
使用变量: , __tmp, __n, __i, result, MSG_DUMP_IPC_START_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:654:9
复杂度: 0
定义变量: logTag
使用变量: , __a, __b, __size, __pos, npos, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:655:9
复杂度: 0
定义变量: __len
使用变量: , __t, __x, __hint, __size, __pos, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:657:19
复杂度: 0
定义变量: 
使用变量: __obj, __len, memory_order_seq_cst, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:658:5
复杂度: 1
定义变量: 
使用变量: , __ret
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:659:9
复杂度: 0
定义变量: __last, __val, __first, __data
使用变量: , __a, __x, __obj, __n, __first, __ptr, __rhs, __y, __val, __ret, __size, __nh, __pos, __data, __lc, __testf, __testt, result, MSG_DUMP_IPC_START_STAT, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:659:9
复杂度: 0
定义变量: __first, __data
使用变量: , __a, __x, __obj, __n, __first, __ptr, __y, __ret, __nh, __pos, __data, __lc, __testf, __testt, result, MSG_DUMP_IPC_START_STAT, MSG_DUMP_FAIL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:659:9
复杂度: 0
定义变量: __val, __data
使用变量: , __obj, __n, __ptr, __lc, __testf, result, MSG_DUMP_IPC_START_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:662:9
复杂度: 0
定义变量: __len, logTag
使用变量: , __t, __n, __first, __u, __size, __pos, __new_start, __lc, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:663:9
复杂度: 0
定义变量: 
使用变量: , __n, __first, __i, __val, __atomic_fetch_xor, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:665:5
复杂度: 1
定义变量: 
使用变量: , __ptr, __ret, _S_relocate
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStart result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:666:9
复杂度: 0
定义变量: __ret
使用变量: , __a, __x, __n, __c, __first, __last, __it, __y, __pred, __result, __len, __k, _S_word_bit, __new_start, __elem0, __testeof, failbit, eofbit, goodbit, memory_order_seq_cst, result, MSG_DUMP_IPC_START_STAT, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:666:9
复杂度: 0
定义变量: 
使用变量: , __a, __x, __n, __c, __first, __last, __it, __y, __result, __len, _S_word_bit, __new_start, __elem0, failbit, memory_order_seq_cst, result, MSG_DUMP_IPC_START_STAT, MSG_DUMP_FAIL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:666:9
复杂度: 0
定义变量: 
使用变量: , __a, __x, __it, __y, failbit, result, MSG_DUMP_IPC_START_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_START_STAT, strlen(MSG_DUMP_IPC_START_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:669:9
复杂度: 0
定义变量: logTag
使用变量: , __obj, __first, __last, __ptr, npos, pthread_join, __threadid, __value_ptr, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStart result");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:670:9
复杂度: 0
定义变量: 
使用变量: , __t, __n, __last, __ret, __result, __old_start, __old_finish, __lc, __testt, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:672:5
复杂度: 0
定义变量: id
使用变量: __v, , __a, __b, __d, __ret, __m, ERR_OK
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return DumpErrorCode::ERR_OK;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleDumpIpcStop
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:675:28
复杂度: 3
定义变量: 
使用变量: __one, __str, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleDumpIpcStop(std::string& result)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpIpcStop start");
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_DUMP_IPC_STOP);
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_SYNC);
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStop result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    return DumpErrorCode::ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:677:5
复杂度: 0
定义变量: logTag
使用变量: , __l, __t, __x, __y, __old, npos, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpIpcStop start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:679:19
复杂度: 0
定义变量: data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:680:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:681:19
复杂度: 0
定义变量: option
使用变量: __bkt, __t1, __t2, TF_SYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_SYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:682:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:682:10
复杂度: 0
定义变量: 
使用变量: __d, __assignable, __m, __old_start, __old_finish, eofbit, no_order, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:683:9
复杂度: 0
定义变量: 
使用变量: , __a, __x, __args, __two, __first, __last, __y, __f, __result, __k, __beg, __source, __new_start, __str, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:683:9
复杂度: 0
定义变量: 
使用变量: , __a, __x, __args, __two, __first, __last, __y, __f, __source, __new_start, __str, result, MSG_DUMP_FAIL, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:683:9
复杂度: 0
定义变量: 
使用变量: , __x, __first, __last, __y, __new_start, __str, result, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:686:9
复杂度: 0
定义变量: __ret, logTag
使用变量: __result, npos, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:687:9
复杂度: 0
定义变量: __size
使用变量: __destroy_from, pthread_self, memory_order_seq_cst, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:689:19
复杂度: 0
定义变量: 
使用变量: , __y, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:690:5
复杂度: 1
定义变量: 
使用变量: , __ret
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:691:9
复杂度: 0
定义变量: __n, __p, __old
使用变量: , __p, __b, __n, __c, __d, __size, __bkt, __pos, __m, __old_start, __old_finish, __old, __data, __fmtfl, operator|=, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:691:9
复杂度: 0
定义变量: __n, __p, __old
使用变量: , __n, __d, __size, __bkt, __pos, __m, __data, __fmtfl, operator|=, result, MSG_DUMP_FAIL, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:691:9
复杂度: 0
定义变量: __n, __old
使用变量: , __p, __size, __bkt, __pos, result, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:694:9
复杂度: 0
定义变量: __loc, __xtrc, logTag
使用变量: , __p, __source, __data, __io, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:695:9
复杂度: 0
定义变量: __tp
使用变量: , __str, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:697:5
复杂度: 1
定义变量: __n
使用变量: __pred
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStop result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:698:9
复杂度: 0
定义变量: __i, __tmperr
使用变量: , __x, __n, __first, __last, __u, hash, __size, __end, __beg, __func, __can_fill, __new_start, __old_start, __str, pthread_once, __once, eofbit, goodbit, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:698:9
复杂度: 0
定义变量: __tmperr
使用变量: , __x, __u, hash, __end, __beg, __new_start, __old_start, __str, eofbit, goodbit, result, MSG_DUMP_FAIL, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:698:9
复杂度: 0
定义变量: 
使用变量: , __x, __u, hash, __end, __beg, __old_start, __str, result, MSG_DUMP_IPC_STOP_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STOP_STAT, strlen(MSG_DUMP_IPC_STOP_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:701:9
复杂度: 0
定义变量: logTag
使用变量: , __n, __first, __i, __len, __bkt, __end, __beg, __new_start, __tmperr, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStop result");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:702:9
复杂度: 0
定义变量: 
使用变量: , __first, __last, __d, __result, __bkt, __m, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:704:5
复杂度: 0
定义变量: 
使用变量: __a, ERR_OK
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return DumpErrorCode::ERR_OK;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleDumpIpcStat
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:707:28
复杂度: 3
定义变量: 
使用变量: , __one, __is_constant_evaluated, __builtin_unreachable, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleDumpIpcStat(std::string& result)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpIpcStat start");
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_DUMP_IPC_STAT);
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_SYNC);
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStat result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    return DumpErrorCode::ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:709:5
复杂度: 0
定义变量: __xtrc, logTag
使用变量: __p, __x, __i, __y, __ret, __mask, operator&=, operator~, __ctype, __format, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpIpcStat start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:711:19
复杂度: 0
定义变量: data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:712:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:713:19
复杂度: 0
定义变量: table_size, option
使用变量: , __end, __position, __str, TF_SYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_SYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:714:5
复杂度: 1
定义变量: __n
使用变量: , __ret, __tp, __beg, __str
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:714:10
复杂度: 0
定义变量: __cur
使用变量: , __first, __data, pthread_key_delete, eofbit, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:715:9
复杂度: 0
定义变量: __ret, __days
使用变量: , __t, __two, __first, __last, __hint, __u, __ret, __result, __k, __pos, __beg, __s, __refs, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:715:9
复杂度: 0
定义变量: 
使用变量: , __t, __two, __u, __ret, __pos, __beg, result, MSG_DUMP_FAIL, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:715:9
复杂度: 0
定义变量: 
使用变量: , __t, __u, __ret, __pos, __beg, result, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:718:9
复杂度: 0
定义变量: logTag
使用变量: , __a, __obj, __n, __first, __last, __cur, __days, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:719:9
复杂度: 0
定义变量: 
使用变量: , __last, __alloc, __f, __ret, __result, npos, __days, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:721:19
复杂度: 0
定义变量: 
使用变量: __r, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:722:5
复杂度: 1
定义变量: 
使用变量: , __pos, __str
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:723:9
复杂度: 0
定义变量: __i
使用变量: , __t, __first, __i, __alloc, __u, _NotEmpty, __k, __state, __cur, __str, __mem, __tm, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:723:9
复杂度: 0
定义变量: __i
使用变量: , __t, __first, __i, __alloc, __u, __k, __cur, __str, __mem, __tm, result, MSG_DUMP_FAIL, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:723:9
复杂度: 0
定义变量: __i
使用变量: , __first, __alloc, __k, __cur, __str, result, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:726:9
复杂度: 0
定义变量: is_always_lock_free, logTag
使用变量: , __args, __i, __ptr, __f, _IsMove, piecewise_construct, __key, __hi, __lo, pthread_setspecific, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:727:9
复杂度: 0
定义变量: 
使用变量: , __k, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:729:5
复杂度: 1
定义变量: 
使用变量: __size, __tp, __beg, __str
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStat result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:730:9
复杂度: 0
定义变量: __months
使用变量: , __t, __first, __last, __i, __u, _NotEmpty, __size, __pos, __str, memory_order_seq_cst, __atomic_add_fetch, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:730:9
复杂度: 0
定义变量: 
使用变量: , __first, __i, __size, __pos, __str, __atomic_add_fetch, result, MSG_DUMP_FAIL, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))
            .append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:730:9
复杂度: 0
定义变量: 
使用变量: , __first, __i, __str, result, MSG_DUMP_IPC_STAT
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_IPC_STAT, strlen(MSG_DUMP_IPC_STAT))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:733:9
复杂度: 0
定义变量: logTag
使用变量: , __first, __last, __size, __str, __refs, __months, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpIpcStat result");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:734:9
复杂度: 0
定义变量: __tmp
使用变量: , __r, __c, __first, __last, __size, _IsMove, __months, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:736:5
复杂度: 0
定义变量: 
使用变量: , __tmp, __elements, __io, __months, __tmperr, __atomic_add_fetch, ERR_OK
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return DumpErrorCode::ERR_OK;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleDumpFfrt
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:739:28
复杂度: 3
定义变量: 
使用变量: __c1, __err
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::ScheduleDumpFfrt(std::string& result)
{
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpFfrt start");
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_DUMP_FFRT);
    MessageParcel data;
    MessageParcel reply;
    reply.SetMaxCapacity(MAX_CAPACITY);
    MessageOption option(MessageOption::TF_SYNC);
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpFfrt result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }
    return DumpErrorCode::ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:741:5
复杂度: 0
定义变量: __xtrc, logTag
使用变量: , __a, __n, __i, _Num, __k, __state, __position, __s, __atomic_sub_fetch, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "AppSchedulerProxy::ScheduleDumpFfrt start");

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:743:19
复杂度: 0
定义变量: data
使用变量: , _Num
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:744:19
复杂度: 0
定义变量: __cur, reply
使用变量: , __prec
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:746:19
复杂度: 0
定义变量: __dt, option
使用变量: , __x, __args, __position, eofbit, TF_SYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_SYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:747:5
复杂度: 1
定义变量: 
使用变量: , __first, __tp, __beg
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!WriteInterfaceToken(data)) {
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:747:10
复杂度: 0
定义变量: 
使用变量: , __i, __beg, __dt, memory_order_seq_cst, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:748:9
复杂度: 0
定义变量: is_always_lock_free
使用变量: , __n, __last, __i, __alloc, _Valid, __pos, __end, __beg, __state, __cur, __mutex, pthread_mutex_lock, __io, __dt, __tmperr, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:748:9
复杂度: 0
定义变量: 
使用变量: , __n, _Valid, __pos, __end, __beg, __cur, __io, __tmperr, result, MSG_DUMP_FAIL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:750:9
复杂度: 0
定义变量: __p, logTag
使用变量: , __n, __ite, __pos, __cur, __s, __tmperr, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "AppSchedulerProxy !WriteInterfaceToken.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:751:9
复杂度: 0
定义变量: __n
使用变量: , __first, __refs, __atomic_add_fetch, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:753:19
复杂度: 0
定义变量: 
使用变量: , __n, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:754:5
复杂度: 1
定义变量: 
使用变量: __beg
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:755:9
复杂度: 0
定义变量: __old_finish, __elems_after
使用变量: , __d, __value, __result, __k, __end, __beg, __position, __s, __mem, __refs, __tmperr, __atomic_add_fetch, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:755:9
复杂度: 0
定义变量: __elems_after
使用变量: , __value, __result, __end, __beg, __position, __s, __mem, __refs, result, MSG_DUMP_FAIL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:757:9
复杂度: 0
定义变量: logTag
使用变量: __n, __tmperr, memory_order_seq_cst, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:758:9
复杂度: 0
定义变量: __fmt
使用变量: , __y, _IsMove, __mutex, pthread_mutex_trylock, __io, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:760:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (!reply.ReadString(result)) {
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpFfrt result");
        return DumpErrorCode::ERR_INTERNAL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:761:9
复杂度: 0
定义变量: 
使用变量: , __a, __x, __first, __last, __d, _Valid, __result, __state, memory_order_seq_cst, __atomic_sub_fetch, result, MSG_DUMP_FAIL, MSG_DUMP_FAIL_REASON_INTERNAL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))
            .append(MSG_DUMP_FAIL_REASON_INTERNAL, strlen(MSG_DUMP_FAIL_REASON_INTERNAL));

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:761:9
复杂度: 0
定义变量: 
使用变量: , __a, __first, __last, __d, _Valid, __state, __atomic_sub_fetch, result, MSG_DUMP_FAIL
关键位置: 否
日志评分: 0
代码:
        result.append(MSG_DUMP_FAIL, strlen(MSG_DUMP_FAIL))

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:763:9
复杂度: 0
定义变量: __move_storage, logTag
使用变量: __x, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Fail to read string of ScheduleDumpFfrt result");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:764:9
复杂度: 0
定义变量: 
使用变量: , __n, __end, __beg, ERR_INTERNAL_ERROR
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return DumpErrorCode::ERR_INTERNAL_ERROR;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:766:5
复杂度: 0
定义变量: __old
使用变量: , __x, __n, __size, __beg, __position, __old_finish, __atomic_sub_fetch, ERR_OK
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return DumpErrorCode::ERR_OK;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:769:28
复杂度: 2
定义变量: 
使用变量: __h
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
int32_t AppSchedulerProxy::SendTransactCmd(uint32_t code, MessageParcel &data,
    MessageParcel &reply, MessageOption &option)
{
    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, __PRETTY_FUNCTION__);
    sptr<IRemoteObject> remote = Remote();
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");
        return ERR_NULL_OBJECT;
    }

    HITRACE_METER_NAME(HITRACE_TAG_ABILITY_MANAGER, "remote->SendRequest");
    auto ret = remote->SendRequest(code, data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code: %{public}d", ret);
        return ret;
    }
    return ret;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:774:5
复杂度: 1
定义变量: 
使用变量: 
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");
        return ERR_NULL_OBJECT;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator==
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:774:9
复杂度: 0
定义变量: 
使用变量: , __state, operator==, remote
关键位置: 否
日志评分: 0
代码:
    if (remote == nullptr) {

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:775:9
复杂度: 0
定义变量: logTag
使用变量: , __p, __last, __size, __state, __mid, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:776:9
复杂度: 0
定义变量: __cur
使用变量: __first, __c1, __c2, ERR_NULL_OBJECT
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ERR_NULL_OBJECT;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendRequest
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:780:16
复杂度: 0
定义变量: 
使用变量: , __x, __position, __cur, data, reply, option, remote, operator->, code
关键位置: 否
日志评分: 0
代码:
    auto ret = remote->SendRequest(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: operator->
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:780:16
复杂度: 0
定义变量: 
使用变量: , remote, operator->
关键位置: 否
日志评分: 0
代码:
    auto ret = remote->SendRequest(code, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:781:5
复杂度: 1
定义变量: 
使用变量: __beg, __ctype
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code: %{public}d", ret);
        return ret;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:782:9
复杂度: 0
定义变量: logTag
使用变量: __x, __i, __end, __beg, __s1, __s2, __io, __tmperr, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error code: %{public}d", ret);

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:783:9
复杂度: 0
定义变量: 
使用变量: __wcs, ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return ret;

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:785:5
复杂度: 0
定义变量: __true_hint
使用变量: __x, __state, ret
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
    return ret;

--------------------------------------------------------------------------------
代码块类型: Method Declaration
块名称: ScheduleCacheProcess
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:788:25
复杂度: 2
定义变量: 
使用变量: __b, __is_constant_evaluated, __builtin_unreachable, memory_order_acq_rel, memory_order_acquire, memory_order_consume, __atomic_store_n
关键位置: 是
日志评分: 5
  - Method Declaration 日志存在: 得分 5
代码:
void AppSchedulerProxy::ScheduleCacheProcess()
{
    uint32_t operation = static_cast<uint32_t>(IAppScheduler::Message::SCHEDULE_CACHE_PROCESS);
    MessageParcel data;
    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    if (!WriteInterfaceToken(data)) {
        return;
    }
    int32_t ret = SendTransactCmd(operation, data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:791:19
复杂度: 0
定义变量: data
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel data;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageParcel
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:792:19
复杂度: 0
定义变量: reply
使用变量: 
关键位置: 否
日志评分: 0
代码:
    MessageParcel reply;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: MessageOption
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:793:19
复杂度: 0
定义变量: option
使用变量: __a, __x, __mem, __true_hint, TF_ASYNC
关键位置: 否
日志评分: 0
代码:
    MessageOption option(MessageOption::TF_ASYNC);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:794:5
复杂度: 1
定义变量: 
使用变量: __i
关键位置: 是
日志评分: -2
  - Conditional Block (if) 缺少日志: 得分 -2
代码:
    if (!WriteInterfaceToken(data)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: WriteInterfaceToken
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:794:10
复杂度: 0
定义变量: __old_start
使用变量: __i, data
关键位置: 否
日志评分: 0
代码:
    if (!WriteInterfaceToken(data)) {

--------------------------------------------------------------------------------
代码块类型: Return Statement
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:795:9
复杂度: 0
定义变量: __old_finish
使用变量: __i
关键位置: 是
日志评分: -2
  - Return Statement 缺少日志: 得分 -2
代码:
        return;

--------------------------------------------------------------------------------
代码块类型: Function Call
块名称: SendTransactCmd
上下文链: 
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:797:19
复杂度: 0
定义变量: __len
使用变量: , __first, __last, data, reply, option, operation
关键位置: 否
日志评分: 0
代码:
    int32_t ret = SendTransactCmd(operation, data, reply, option);

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
块名称: 
上下文链: IF_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:798:5
复杂度: 1
定义变量: 
使用变量: , __pred, __beg
关键位置: 是
日志评分: 3
  - Conditional Block (if) 日志存在: 得分 3
代码:
    if (ret != NO_ERROR) {
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do-while)
块名称: 
上下文链: IF_STMT[] → DO_STMT[]
位置: /home/user/yzb/hw_interface_analyze/interface_test/test_c/ability_ability_runtime/interfaces/inner_api/app_manager/src/appmgr/app_scheduler_proxy.cpp:799:9
复杂度: 0
定义变量: __h, __new_start, id, logTag
使用变量: , __a, _IsMove, __len, __end, __beg, __mem, APPMGR
关键位置: 是
日志评分: 2
  - Loop Block (do-while) 日志存在: 得分 2
代码:
        TAG_LOGW(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
