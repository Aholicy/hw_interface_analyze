代码块类型: Method Declaration
位置: 28:30
Spell: OnRemoteRequest
包含日志: 否
代码:
int AbilityInfoCallbackStub::OnRemoteRequest(
    uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option)
{
    TAG_LOGI(AAFwkTag::APPMGR, "code: %{public}u, flags: %{public}d", code,
        option.GetFlags());
    std::u16string descriptor = AbilityInfoCallbackStub::GetDescriptor();
    std::u16string remoteDescriptor = data.ReadInterfaceToken();
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "invalid descriptor");
        return ERR_INVALID_STATE;
    }

    if (code == static_cast<uint32_t>(IAbilityInfoCallback::Notify_ABILITY_TOKEN)) {
        return HandleNotifyAbilityToken(data, reply);
    }

    TAG_LOGI(AAFwkTag::APPMGR, "end");
    return IPCObjectStub::OnRemoteRequest(code, data, reply, option);
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 31:5
Spell: 
包含日志: 否
代码:
    TAG_LOGI(AAFwkTag::APPMGR, "code: %{public}u, flags: %{public}d", code,
        option.GetFlags());

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 35:5
Spell: 
包含日志: 否
代码:
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "invalid descriptor");
        return ERR_INVALID_STATE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 36:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "invalid descriptor");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 40:5
Spell: 
包含日志: 否
代码:
    if (code == static_cast<uint32_t>(IAbilityInfoCallback::Notify_ABILITY_TOKEN)) {
        return HandleNotifyAbilityToken(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 44:5
Spell: 
包含日志: 否
代码:
    TAG_LOGI(AAFwkTag::APPMGR, "end");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 48:31
Spell: NotifyAbilityToken
包含日志: 否
代码:
void AbilityInfoCallbackStub::NotifyAbilityToken(const sptr<IRemoteObject> token, const Want &want)
{
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 52:34
Spell: HandleNotifyAbilityToken
包含日志: 否
代码:
int32_t AbilityInfoCallbackStub::HandleNotifyAbilityToken(MessageParcel &data, MessageParcel &reply)
{
    TAG_LOGI(AAFwkTag::APPMGR, "called");
    sptr<IRemoteObject> token = data.ReadRemoteObject();
    Want *want = data.ReadParcelable<Want>();

    if (!want) {
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<Want> failed");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }
    NotifyAbilityToken(token, *want);
    delete want;
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 54:5
Spell: 
包含日志: 否
代码:
    TAG_LOGI(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 58:5
Spell: 
包含日志: 否
代码:
    if (!want) {
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<Want> failed");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 59:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "ReadParcelable<Want> failed");

--------------------------------------------------------------------------------
