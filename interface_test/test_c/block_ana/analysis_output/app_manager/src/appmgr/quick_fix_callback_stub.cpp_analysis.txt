代码块类型: Method Declaration
位置: 26:27
Spell: OnRemoteRequest
包含日志: 否
代码:
int QuickFixCallbackStub::OnRemoteRequest(
    uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option)
{
    if (data.ReadInterfaceToken() != IQuickFixCallback::GetDescriptor()) {
        TAG_LOGE(AAFwkTag::APPMGR, "local descriptor is not equal to remote.");
        return ERR_INVALID_STATE;
    }

    switch (code) {
        case ON_NOTIFY_LOAD_PATCH:
            return HandleOnLoadPatchDoneInner(data, reply);
        case ON_NOTIFY_UNLOAD_PATCH:
            return HandleOnUnloadPatchDoneInner(data, reply);
        case ON_NOTIFY_RELOAD_PAGE:
            return HandleOnReloadPageDoneInner(data, reply);
    }

    TAG_LOGW(AAFwkTag::APPMGR, "default case, need check value of code!");
    return IPCObjectStub::OnRemoteRequest(code, data, reply, option);
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 29:5
Spell: 
包含日志: 否
代码:
    if (data.ReadInterfaceToken() != IQuickFixCallback::GetDescriptor()) {
        TAG_LOGE(AAFwkTag::APPMGR, "local descriptor is not equal to remote.");
        return ERR_INVALID_STATE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 30:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "local descriptor is not equal to remote.");

--------------------------------------------------------------------------------
代码块类型: Switch Block
位置: 34:5
Spell: 
包含日志: 否
代码:
    switch (code) {
        case ON_NOTIFY_LOAD_PATCH:
            return HandleOnLoadPatchDoneInner(data, reply);
        case ON_NOTIFY_UNLOAD_PATCH:
            return HandleOnUnloadPatchDoneInner(data, reply);
        case ON_NOTIFY_RELOAD_PAGE:
            return HandleOnReloadPageDoneInner(data, reply);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 43:5
Spell: 
包含日志: 否
代码:
    TAG_LOGW(AAFwkTag::APPMGR, "default case, need check value of code!");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 47:31
Spell: HandleOnLoadPatchDoneInner
包含日志: 否
代码:
int32_t QuickFixCallbackStub::HandleOnLoadPatchDoneInner(MessageParcel &data, MessageParcel &reply)
{
    int32_t resultCode = data.ReadInt32();
    int32_t recordId = data.ReadInt32();
    OnLoadPatchDone(resultCode, recordId);
    return ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 55:31
Spell: HandleOnUnloadPatchDoneInner
包含日志: 否
代码:
int32_t QuickFixCallbackStub::HandleOnUnloadPatchDoneInner(MessageParcel &data, MessageParcel &reply)
{
    int32_t resultCode = data.ReadInt32();
    int32_t recordId = data.ReadInt32();
    OnUnloadPatchDone(resultCode, recordId);
    return ERR_OK;
}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 63:31
Spell: HandleOnReloadPageDoneInner
包含日志: 否
代码:
int32_t QuickFixCallbackStub::HandleOnReloadPageDoneInner(MessageParcel &data, MessageParcel &reply)
{
    int32_t resultCode = data.ReadInt32();
    int32_t recordId = data.ReadInt32();
    OnReloadPageDone(resultCode, recordId);
    return ERR_OK;
}

--------------------------------------------------------------------------------
