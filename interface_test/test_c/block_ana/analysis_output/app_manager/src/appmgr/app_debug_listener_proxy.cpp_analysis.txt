代码块类型: Method Declaration
位置: 31:29
Spell: WriteInterfaceToken
包含日志: 否
代码:
bool AppDebugListenerProxy::WriteInterfaceToken(MessageParcel &data)
{
    if (!data.WriteInterfaceToken(AppDebugListenerProxy::GetDescriptor())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return false;
    }
    return true;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 33:5
Spell: 
包含日志: 否
代码:
    if (!data.WriteInterfaceToken(AppDebugListenerProxy::GetDescriptor())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 34:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 40:29
Spell: OnAppDebugStarted
包含日志: 否
代码:
void AppDebugListenerProxy::OnAppDebugStarted(const std::vector<AppDebugInfo> &debugInfos)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    SendRequest(IAppDebugListener::Message::ON_APP_DEBUG_STARTED, debugInfos);
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 42:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 46:29
Spell: OnAppDebugStoped
包含日志: 否
代码:
void AppDebugListenerProxy::OnAppDebugStoped(const std::vector<AppDebugInfo> &debugInfos)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");
    SendRequest(IAppDebugListener::Message::ON_APP_DEBUG_STOPED, debugInfos);
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 48:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 52:29
Spell: SendRequest
包含日志: 否
代码:
void AppDebugListenerProxy::SendRequest(
    const IAppDebugListener::Message &message, const std::vector<AppDebugInfo> &debugInfos)
{
    MessageParcel data;
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return;
    }

    if (debugInfos.size() <= CYCLE_LIMIT_MIN || debugInfos.size() > CYCLE_LIMIT_MAX ||
        !data.WriteInt32(debugInfos.size())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write debug info size failed.");
        return;
    }
    for (auto &debugInfo : debugInfos) {
        if (!data.WriteParcelable(&debugInfo)) {
            TAG_LOGE(AAFwkTag::APPMGR, "Write debug info failed.");
            return;
        }
    };

    sptr<IRemoteObject> remote = Remote();
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");
        return;
    }

    MessageParcel reply;
    MessageOption option(MessageOption::TF_ASYNC);
    int32_t ret = remote->SendRequest(static_cast<uint32_t>(message), data, reply, option);
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 56:5
Spell: 
包含日志: 否
代码:
    if (!WriteInterfaceToken(data)) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 57:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write interface token failed.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 61:5
Spell: 
包含日志: 否
代码:
    if (debugInfos.size() <= CYCLE_LIMIT_MIN || debugInfos.size() > CYCLE_LIMIT_MAX ||
        !data.WriteInt32(debugInfos.size())) {
        TAG_LOGE(AAFwkTag::APPMGR, "Write debug info size failed.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 63:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Write debug info size failed.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 74:5
Spell: 
包含日志: 否
代码:
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 75:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 82:5
Spell: 
包含日志: 否
代码:
    if (ret != NO_ERROR) {
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 83:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "SendRequest is failed, error code: %{public}d", ret);

--------------------------------------------------------------------------------
