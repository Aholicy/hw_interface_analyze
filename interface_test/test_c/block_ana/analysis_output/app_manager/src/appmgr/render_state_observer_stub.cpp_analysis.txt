代码块类型: Namespace Declaration
位置: 23:11
Spell: OHOS
包含日志: 是
代码:
namespace OHOS {
namespace AppExecFwk {
RenderStateObserverStub::RenderStateObserverStub() {}

RenderStateObserverStub::~RenderStateObserverStub() {}

int32_t RenderStateObserverStub::OnRenderStateChangedInner(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<RenderStateData> renderStateData(data.ReadParcelable<RenderStateData>());
    if (renderStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "renderStateData is null");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }

    OnRenderStateChanged(*renderStateData);
    return NO_ERROR;
}

int RenderStateObserverStub::OnRemoteRequest(
    uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option)
{
    std::u16string descriptor = RenderStateObserverStub::GetDescriptor();
    std::u16string remoteDescriptor = data.ReadInterfaceToken();
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "Local descriptor is not equal to remote");
        return ERR_INVALID_STATE;
    }

    if (code == IRenderStateObserver::ON_RENDER_STATE_CHANGED) {
        return OnRenderStateChangedInner(data, reply);
    }

    return IPCObjectStub::OnRemoteRequest(code, data, reply, option);
}
} // namespace AppExecFwk
} // namespace OHOS
--------------------------------------------------------------------------------
代码块类型: Namespace Declaration
位置: 24:11
Spell: AppExecFwk
包含日志: 是
代码:
namespace AppExecFwk {
RenderStateObserverStub::RenderStateObserverStub() {}

RenderStateObserverStub::~RenderStateObserverStub() {}

int32_t RenderStateObserverStub::OnRenderStateChangedInner(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<RenderStateData> renderStateData(data.ReadParcelable<RenderStateData>());
    if (renderStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "renderStateData is null");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }

    OnRenderStateChanged(*renderStateData);
    return NO_ERROR;
}

int RenderStateObserverStub::OnRemoteRequest(
    uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option)
{
    std::u16string descriptor = RenderStateObserverStub::GetDescriptor();
    std::u16string remoteDescriptor = data.ReadInterfaceToken();
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "Local descriptor is not equal to remote");
        return ERR_INVALID_STATE;
    }

    if (code == IRenderStateObserver::ON_RENDER_STATE_CHANGED) {
        return OnRenderStateChangedInner(data, reply);
    }

    return IPCObjectStub::OnRemoteRequest(code, data, reply, option);
}
} // namespace AppExecFwk

--------------------------------------------------------------------------------
代码块类型: Constructor Declaration
位置: 25:26
Spell: RenderStateObserverStub
包含日志: 否
代码:
RenderStateObserverStub::RenderStateObserverStub() {}

--------------------------------------------------------------------------------
代码块类型: Destructor Declaration
位置: 27:26
Spell: ~RenderStateObserverStub
包含日志: 否
代码:
RenderStateObserverStub::~RenderStateObserverStub() {}

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 29:34
Spell: OnRenderStateChangedInner
包含日志: 是
代码:
int32_t RenderStateObserverStub::OnRenderStateChangedInner(MessageParcel &data, MessageParcel &reply)
{
    std::unique_ptr<RenderStateData> renderStateData(data.ReadParcelable<RenderStateData>());
    if (renderStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "renderStateData is null");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }

    OnRenderStateChanged(*renderStateData);
    return NO_ERROR;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 32:5
Spell: 
包含日志: 是
代码:
    if (renderStateData == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "renderStateData is null");
        return ERR_APPEXECFWK_PARCEL_ERROR;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 33:9
Spell: 
包含日志: 是
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "renderStateData is null");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 41:30
Spell: OnRemoteRequest
包含日志: 是
代码:
int RenderStateObserverStub::OnRemoteRequest(
    uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option)
{
    std::u16string descriptor = RenderStateObserverStub::GetDescriptor();
    std::u16string remoteDescriptor = data.ReadInterfaceToken();
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "Local descriptor is not equal to remote");
        return ERR_INVALID_STATE;
    }

    if (code == IRenderStateObserver::ON_RENDER_STATE_CHANGED) {
        return OnRenderStateChangedInner(data, reply);
    }

    return IPCObjectStub::OnRemoteRequest(code, data, reply, option);
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 46:5
Spell: 
包含日志: 是
代码:
    if (descriptor != remoteDescriptor) {
        TAG_LOGE(AAFwkTag::APPMGR, "Local descriptor is not equal to remote");
        return ERR_INVALID_STATE;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 47:9
Spell: 
包含日志: 是
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Local descriptor is not equal to remote");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 51:5
Spell: 
包含日志: 否
代码:
    if (code == IRenderStateObserver::ON_RENDER_STATE_CHANGED) {
        return OnRenderStateChangedInner(data, reply);
    }

--------------------------------------------------------------------------------
