代码块类型: Method Declaration
位置: 24:29
Spell: OnLoadPatchDone
包含日志: 否
代码:
void QuickFixCallbackProxy::OnLoadPatchDone(int32_t resultCode, int32_t recordId)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");

    MessageParcel data;
    MessageParcel reply;
    WRITE_PARCEL_AND_RETURN(InterfaceToken, data, QuickFixCallbackProxy::GetDescriptor());
    WRITE_PARCEL_AND_RETURN(Int32, data, resultCode);
    WRITE_PARCEL_AND_RETURN(Int32, data, recordId);
    if (!SendRequestWithCmd(IQuickFixCallback::QuickFixCallbackCmd::ON_NOTIFY_LOAD_PATCH, data, reply)) {
        return;
    }

    TAG_LOGD(AAFwkTag::APPMGR, "function finished.");
    return;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 26:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 33:5
Spell: 
包含日志: 否
代码:
    if (!SendRequestWithCmd(IQuickFixCallback::QuickFixCallbackCmd::ON_NOTIFY_LOAD_PATCH, data, reply)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 37:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "function finished.");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 41:29
Spell: OnUnloadPatchDone
包含日志: 否
代码:
void QuickFixCallbackProxy::OnUnloadPatchDone(int32_t resultCode, int32_t recordId)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");

    MessageParcel data;
    MessageParcel reply;
    WRITE_PARCEL_AND_RETURN(InterfaceToken, data, QuickFixCallbackProxy::GetDescriptor());
    WRITE_PARCEL_AND_RETURN(Int32, data, resultCode);
    WRITE_PARCEL_AND_RETURN(Int32, data, recordId);
    if (!SendRequestWithCmd(IQuickFixCallback::QuickFixCallbackCmd::ON_NOTIFY_UNLOAD_PATCH, data, reply)) {
        return;
    }

    TAG_LOGD(AAFwkTag::APPMGR, "function finished.");
    return;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 43:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 50:5
Spell: 
包含日志: 否
代码:
    if (!SendRequestWithCmd(IQuickFixCallback::QuickFixCallbackCmd::ON_NOTIFY_UNLOAD_PATCH, data, reply)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 54:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "function finished.");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 58:29
Spell: OnReloadPageDone
包含日志: 否
代码:
void QuickFixCallbackProxy::OnReloadPageDone(int32_t resultCode, int32_t recordId)
{
    TAG_LOGD(AAFwkTag::APPMGR, "called");

    MessageParcel data;
    MessageParcel reply;
    WRITE_PARCEL_AND_RETURN(InterfaceToken, data, QuickFixCallbackProxy::GetDescriptor());
    WRITE_PARCEL_AND_RETURN(Int32, data, resultCode);
    WRITE_PARCEL_AND_RETURN(Int32, data, recordId);
    if (!SendRequestWithCmd(IQuickFixCallback::QuickFixCallbackCmd::ON_NOTIFY_RELOAD_PAGE, data, reply)) {
        return;
    }

    TAG_LOGD(AAFwkTag::APPMGR, "function finished.");
    return;
}

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 60:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "called");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 67:5
Spell: 
包含日志: 否
代码:
    if (!SendRequestWithCmd(IQuickFixCallback::QuickFixCallbackCmd::ON_NOTIFY_RELOAD_PAGE, data, reply)) {
        return;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 71:5
Spell: 
包含日志: 否
代码:
    TAG_LOGD(AAFwkTag::APPMGR, "function finished.");

--------------------------------------------------------------------------------
代码块类型: Method Declaration
位置: 75:29
Spell: SendRequestWithCmd
包含日志: 否
代码:
bool QuickFixCallbackProxy::SendRequestWithCmd(uint32_t code, MessageParcel &data, MessageParcel &reply)
{
    sptr<IRemoteObject> remote = Remote();
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");
        return false;
    }

    MessageOption option(MessageOption::TF_SYNC);
    auto ret = remote->SendRequest(code, data, reply, option);
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error %{public}d.", ret);
        return false;
    }

    return true;
}

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 78:5
Spell: 
包含日志: 否
代码:
    if (remote == nullptr) {
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 79:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Remote is nullptr.");

--------------------------------------------------------------------------------
代码块类型: Conditional Block (if)
位置: 85:5
Spell: 
包含日志: 否
代码:
    if (ret != 0) {
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error %{public}d.", ret);
        return false;
    }

--------------------------------------------------------------------------------
代码块类型: Loop Block (do)
位置: 86:9
Spell: 
包含日志: 否
代码:
        TAG_LOGE(AAFwkTag::APPMGR, "Send request failed with error %{public}d.", ret);

--------------------------------------------------------------------------------
