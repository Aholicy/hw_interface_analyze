{
    "@ohos.arkui.performanceMonitor": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "begin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "scene",
                        "type": "string"
                    },
                    {
                        "name": "startInputType",
                        "type": "ActionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "end",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "scene",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "recordInputEventTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "ActionType"
                    },
                    {
                        "name": "sourceType",
                        "type": "SourceType"
                    },
                    {
                        "name": "time",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.power": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "shutdown",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rebootDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reboot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isScreenOn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isScreenOn",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isActive",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "wakeup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "detail",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "suspend",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerMode",
                "return_type": "DevicePowerMode",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPowerMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "DevicePowerMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPowerMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "DevicePowerMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isStandby",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hibernate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clearMemory",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setScreenOffTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timeout",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.InputMethodSubtype": {
        "dependencies": [],
        "interfaces": {
            "InputMethodSubtype": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.ability.ServiceExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.rpc",
                "imported_as": "rpc"
            },
            {
                "module": "@ohos.application.ServiceExtensionContext",
                "imported_as": "ServiceExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "ServiceExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.web.netErrorList": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.ability.abilityDelegatorRegistry": {
        "dependencies": [
            {
                "module": "@ohos.application.AbilityDelegator",
                "imported_as": "AbilityDelegator as _AbilityDelegator"
            },
            {
                "module": "@ohos.application.abilityDelegatorArgs",
                "imported_as": "AbilityDelegatorArgs as _AbilityDelegatorArgs"
            },
            {
                "module": "@ohos.application.AbilityMonitor",
                "imported_as": "AbilityMonitor as _AbilityMonitor"
            },
            {
                "module": "@ohos.application.AbilityStageMonitor",
                "imported_as": "AbilityStageMonitor as _AbilityStageMonitor"
            },
            {
                "module": "@ohos.application.shellCmdResult",
                "imported_as": "ShellCmdResult as _ShellCmdResult"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getAbilityDelegator",
                "return_type": "AbilityDelegator",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getArguments",
                "return_type": "AbilityDelegatorArgs",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.hiviewdfx.jsLeakWatcher": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isEnable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "watch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "obj",
                        "type": "object"
                    },
                    {
                        "name": "msg",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "check",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dump",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.fileuri": {
        "dependencies": [
            {
                "module": "@ohos.uri",
                "imported_as": "uri"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getUriFromPath",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "FileUri",
                "extends": "uri"
            }
        ]
    },
    "@ohos.app.ability.MediaControlExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIExtensionAbility",
                "imported_as": "UIExtensionAbility"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "MediaControlExtensionAbility",
                "extends": "UIExtensionAbility"
            }
        ]
    },
    "@ohos.application.formBindingData": {
        "dependencies": [],
        "interfaces": {
            "FormBindingData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createFormBindingData",
                "return_type": "FormBindingData",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.environment": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getStorageDataDir",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStorageDataDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserDataDir",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserDataDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserDownloadDir",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserDesktopDir",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserDocumentDir",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getExternalStorageDir",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserHomeDir",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.stationary": {
        "dependencies": [],
        "interfaces": {
            "ActivityResponse": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "activity",
                        "type": "ActivityType"
                    },
                    {
                        "name": "event",
                        "type": "ActivityEvent"
                    },
                    {
                        "name": "reportLatencyNs",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "activity",
                        "type": "ActivityType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "activity",
                        "type": "ActivityType"
                    },
                    {
                        "name": "event",
                        "type": "ActivityEvent"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.Configuration": {
        "dependencies": [
            {
                "module": "@ohos.application.ConfigurationConstant",
                "imported_as": "ConfigurationConstant"
            }
        ],
        "interfaces": {
            "Configuration": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.advertising": {
        "dependencies": [
            {
                "module": "@ohos.web.webview",
                "imported_as": "type web_webview"
            },
            {
                "module": "@ohos.app.ability.common",
                "imported_as": "type common"
            }
        ],
        "interfaces": {
            "AdRequestParams": [],
            "AdOptions": [],
            "AdDisplayOptions": [],
            "AdInteractionListener": [],
            "AdLoadListener": [],
            "MultiSlotsAdLoadListener": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "showAd",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "ad",
                        "type": "Advertisement"
                    },
                    {
                        "name": "options",
                        "type": "AdDisplayOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAdRequestBody",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "adParams",
                        "type": "AdRequestParams"
                    },
                    {
                        "name": "adOptions",
                        "type": "AdOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "parseAdResponse",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "adResponse",
                        "type": "string"
                    },
                    {
                        "name": "listener",
                        "type": "MultiSlotsAdLoadListener"
                    },
                    {
                        "name": "context",
                        "type": "common"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerWebAdInterface",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "controller",
                        "type": "web_webview"
                    },
                    {
                        "name": "context",
                        "type": "common"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "AdLoader",
                "extends": null
            }
        ]
    },
    "@ohos.advertising.AdsServiceExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.advertising",
                "imported_as": "type advertising"
            }
        ],
        "interfaces": {
            "RespCallback": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "AdsServiceExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.bluetooth.baseProfile": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.constant",
                "imported_as": "type constant"
            }
        ],
        "interfaces": {
            "StateChangeParam": [],
            "BaseProfile": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.bundle.freeInstall": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundleManager.DispatchInfo",
                "imported_as": "DispatchInfo as _DispatchInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setHapModuleUpgradeFlag",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "upgradeFlag",
                        "type": "UpgradeFlag"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHapModuleUpgradeFlag",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "upgradeFlag",
                        "type": "UpgradeFlag"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHapModuleRemovable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHapModuleRemovable",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundlePackInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundlePackFlag",
                        "type": "BundlePackFlag"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundlePackInfo",
                "return_type": "Promise<BundlePackInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundlePackFlag",
                        "type": "BundlePackFlag"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDispatchInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDispatchInfo",
                "return_type": "Promise<DispatchInfo>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetooth.access": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enableBluetooth",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableBluetooth",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "restrictBluetooth",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getState",
                "return_type": "BluetoothState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "factoryReset",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "factoryReset",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalAddress",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.wifiManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "IpProfile": [],
            "WifiEapProfile": [],
            "WifiProfile": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWifiActive",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWifiActive",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWifiActiveSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWifiProfile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "profile",
                        "type": "WifiProfile"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWifiProfile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "profile",
                        "type": "WifiProfile"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWifiProfileSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "profile",
                        "type": "WifiProfile"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWifiDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWifiDisabled",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.preferences": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "Context"
            }
        ],
        "interfaces": {
            "Options": [],
            "Preferences": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getPreferences",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferences",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferences",
                "return_type": "Promise<Preferences>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferences",
                "return_type": "Promise<Preferences>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferencesSync",
                "return_type": "Preferences",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deletePreferences",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deletePreferences",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deletePreferences",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deletePreferences",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferencesFromCache",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferencesFromCache",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferencesFromCache",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferencesFromCache",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferencesFromCacheSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferencesFromCacheSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.util.stream": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.events.emitter",
                "imported_as": "emitter"
            }
        ],
        "interfaces": {
            "ReadableOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "Writable",
                "extends": null
            },
            {
                "class": "inheritance",
                "extends": null
            },
            {
                "class": "Transform",
                "extends": "Duplex"
            },
            {
                "class": "Readable",
                "extends": null
            },
            {
                "class": "methods",
                "extends": null
            },
            {
                "class": "Duplex",
                "extends": "Readable"
            },
            {
                "class": "that",
                "extends": null
            },
            {
                "class": "that",
                "extends": null
            },
            {
                "class": "inheritance",
                "extends": null
            }
        ]
    },
    "@ohos.i18n": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {
            "Util": [],
            "UnitInfo": [],
            "PhoneNumberFormatOptions": [],
            "SortOptions": [],
            "LocaleItem": [],
            "TimeZoneCityItem": [],
            "HolidayInfoItem": [],
            "HolidayLocalName": [],
            "EntityInfoItem": [],
            "StyledNumberFormatOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getDisplayCountry",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "country",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisplayLanguage",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemLanguage",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemRegion",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemLocale",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisplayCountry",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "country",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisplayLanguage",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemLanguages",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemCountries",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSuggested",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemLanguage",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSystemLanguage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemRegion",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSystemRegion",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "region",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemLocale",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSystemLocale",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "is24HourClock",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set24HourClock",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "option",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addPreferredLanguage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferredLanguage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "index",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferredLanguageList",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFirstPreferredLanguage",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppPreferredLanguage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppPreferredLanguage",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setUsingLocalDigit",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "flag",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUsingLocalDigit",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimplifiedLanguage",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTemperatureType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "TemperatureType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTemperatureType",
                "return_type": "TemperatureType",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTemperatureName",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "type",
                        "type": "TemperatureType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFirstDayOfWeek",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "WeekDay"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFirstDayOfWeek",
                "return_type": "WeekDay",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unitConvert",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "fromUnit",
                        "type": "UnitInfo"
                    },
                    {
                        "name": "toUnit",
                        "type": "UnitInfo"
                    },
                    {
                        "name": "value",
                        "type": "number"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDateOrder",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimePeriodName",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "hour",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBestMatchLocale",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    },
                    {
                        "name": "localeList",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getThreeLetterLanguage",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getThreeLetterRegion",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUnicodeWrappedFilePath",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCalendar",
                "return_type": "Calendar",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRTL",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLineInstance",
                "return_type": "BreakIterator",
                "parameters": [
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInstance",
                "return_type": "IndexUtil",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDigit",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSpaceChar",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWhitespace",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRTL",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isIdeograph",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLetter",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLowerCase",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isUpperCase",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getType",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "char",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "is24HourClock",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set24HourClock",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "option",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addPreferredLanguage",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "language",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePreferredLanguage",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "index",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferredLanguageList",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFirstPreferredLanguage",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimeZone",
                "return_type": "TimeZone",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAvailableIDs",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAvailableZoneCityIDs",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCityDisplayName",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "cityID",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimezoneFromCity",
                "return_type": "TimeZone",
                "parameters": [
                    {
                        "name": "cityID",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimezonesByLocation",
                "return_type": "Array<TimeZone>",
                "parameters": [
                    {
                        "name": "longitude",
                        "type": "number"
                    },
                    {
                        "name": "latitude",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAvailableIDs",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInstance",
                "return_type": "Transliterator",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInstance",
                "return_type": "Normalizer",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "NormalizerMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimeZoneCityItemArray",
                "return_type": "Array<TimeZoneCityItem>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimpleDateTimeFormatByPattern",
                "return_type": "SimpleDateTimeFormat",
                "parameters": [
                    {
                        "name": "pattern",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimpleDateTimeFormatBySkeleton",
                "return_type": "SimpleDateTimeFormat",
                "parameters": [
                    {
                        "name": "skeleton",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNumberFormatBySkeleton",
                "return_type": "SimpleNumberFormat",
                "parameters": [
                    {
                        "name": "skeleton",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "System",
                "extends": null
            },
            {
                "class": "I18NUtil",
                "extends": null
            },
            {
                "class": "PhoneNumberFormat",
                "extends": null
            },
            {
                "class": "Calendar",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "BreakIterator",
                "extends": null
            },
            {
                "class": "IndexUtil",
                "extends": null
            },
            {
                "class": "Character",
                "extends": null
            },
            {
                "class": "Unicode",
                "extends": null
            },
            {
                "class": "TimeZone",
                "extends": null
            },
            {
                "class": "Transliterator",
                "extends": null
            },
            {
                "class": "Normalizer",
                "extends": null
            },
            {
                "class": "SystemLocaleManager",
                "extends": null
            },
            {
                "class": "HolidayManager",
                "extends": null
            },
            {
                "class": "EntityRecognizer",
                "extends": null
            },
            {
                "class": "SimpleDateTimeFormat",
                "extends": null
            },
            {
                "class": "SimpleNumberFormat",
                "extends": null
            },
            {
                "class": "StyledNumberFormat",
                "extends": null
            }
        ]
    },
    "@ohos.graphics.text": {
        "dependencies": [
            {
                "module": "@ohos.graphics.drawing",
                "imported_as": "type drawing"
            },
            {
                "module": "@ohos.graphics.common2D",
                "imported_as": "type common2D"
            }
        ],
        "interfaces": {
            "Decoration": [],
            "TextShadow": [],
            "RectStyle": [],
            "FontFeature": [],
            "FontVariation": [],
            "TextStyle": [],
            "StrutStyle": [],
            "ParagraphStyle": [],
            "PlaceholderSpan": [],
            "Range": [],
            "FontDescriptor": [],
            "PositionWithAffinity": [],
            "TypographicBounds": [],
            "RunMetrics": [],
            "LineMetrics": [],
            "TextTab": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getGlobalInstance",
                "return_type": "FontCollection",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemFontFullNamesByType",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "fontType",
                        "type": "SystemFontType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFontDescriptorByFullName",
                "return_type": "Promise<FontDescriptor>",
                "parameters": [
                    {
                        "name": "fullName",
                        "type": "string"
                    },
                    {
                        "name": "fontType",
                        "type": "SystemFontType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "matchFontDescriptors",
                "return_type": "Promise<Array<FontDescriptor>>",
                "parameters": [
                    {
                        "name": "desc",
                        "type": "FontDescriptor"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "FontCollection",
                "extends": null
            },
            {
                "class": "Paragraph",
                "extends": null
            },
            {
                "class": "LineTypeset",
                "extends": null
            },
            {
                "class": "ParagraphBuilder",
                "extends": null
            },
            {
                "class": "TextLine",
                "extends": null
            },
            {
                "class": "Run",
                "extends": null
            }
        ]
    },
    "@ohos.application.DataShareExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.data.dataSharePredicates",
                "imported_as": "dataSharePredicates"
            },
            {
                "module": "@ohos.data.ValuesBucket",
                "imported_as": "ValuesBucket"
            },
            {
                "module": "@ohos.data.dataShare",
                "imported_as": "dataShare"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "DataShareExtensionAbility",
                "extends": null
            }
        ]
    },
    "@system.configuration": {
        "dependencies": [],
        "interfaces": {
            "LocaleResponse": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getLocale",
                "return_type": "LocaleResponse",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Configuration",
                "extends": null
            }
        ]
    },
    "@ohos.util.LightWeightMap": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "LightWeightMap",
                "extends": null
            }
        ]
    },
    "@ohos.fileio": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "Dir": [],
            "Dirent": [],
            "Stat": [],
            "Stream": [],
            "ReadOut": [],
            "Watcher": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "access",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "access",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "access",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "accessSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "close",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "close",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFileSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createStream",
                "return_type": "Promise<Stream>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createStream",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createStreamSync",
                "return_type": "Stream",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "chown",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "chown",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "chownSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "chmod",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "chmod",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "chmodSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "ftruncate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "ftruncate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "ftruncate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "len",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "ftruncateSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fsync",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fsync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fsyncSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fstat",
                "return_type": "Promise<Stat>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fstat",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fstatSync",
                "return_type": "Stat",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdatasync",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdatasync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdatasyncSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fchown",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fchown",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fchownSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fchmod",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fchmod",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fchmodSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdopenStream",
                "return_type": "Promise<Stream>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdopenStream",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdopenStreamSync",
                "return_type": "Stream",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hash",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "algorithm",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hash",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "algorithm",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lchown",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lchown",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lchownSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "gid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lstat",
                "return_type": "Promise<Stat>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lstat",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lstatSync",
                "return_type": "Stat",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdirSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdtemp",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "prefix",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdtemp",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "prefix",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdtempSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "prefix",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "open",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "open",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "open",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "flags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "open",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "flags",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "opendir",
                "return_type": "Promise<Dir>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "opendir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "opendirSync",
                "return_type": "Dir",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readText",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readText",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readTextSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "Promise<ReadOut>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rename",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "oldPath",
                        "type": "string"
                    },
                    {
                        "name": "newPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rename",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "oldPath",
                        "type": "string"
                    },
                    {
                        "name": "newPath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "renameSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "oldPath",
                        "type": "string"
                    },
                    {
                        "name": "newPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rmdir",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rmdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rmdirSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stat",
                "return_type": "Promise<Stat>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stat",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "statSync",
                "return_type": "Stat",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "symlink",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "name": "srcPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "symlink",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "name": "srcPath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "symlinkSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "name": "srcPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "len",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncateSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlink",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlink",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlinkSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "writeSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWatcher",
                "return_type": "Watcher",
                "parameters": [
                    {
                        "name": "filename",
                        "type": "string"
                    },
                    {
                        "name": "events",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.document": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "choose",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "choose",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "choose",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "types",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "show",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "show",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.formHost": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.form.formInfo",
                "imported_as": "formInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "deleteForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "isReleaseCache",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "castTempForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "castTempForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyVisibleForms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyVisibleForms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyInvisibleForms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyInvisibleForms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableFormsUpdate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableFormsUpdate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableFormsUpdate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableFormsUpdate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSystemReady",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSystemReady",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllFormsInfo",
                "return_type": "Promise<Array<formInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "Promise<Array<formInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteInvalidForms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteInvalidForms",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireFormState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireFormState",
                "return_type": "Promise<formInfo",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsVisible",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isVisible",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsVisible",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isVisible",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsEnableUpdate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isEnableUpdate",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsEnableUpdate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isEnableUpdate",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.usbManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "UsbDeviceId": [],
            "UsbDeviceType": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setUsbPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "usbPolicy",
                        "type": "UsbPolicy"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setUsbPolicy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "usbPolicy",
                        "type": "UsbPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableUsb",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isUsbDisabled",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAllowedUsbDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "usbDeviceIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllowedUsbDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "usbDeviceIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllowedUsbDevices",
                "return_type": "Array<UsbDeviceId>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setUsbStorageDeviceAccessPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "usbPolicy",
                        "type": "UsbPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUsbStorageDeviceAccessPolicy",
                "return_type": "UsbPolicy",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedUsbDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "usbDevices",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedUsbDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "usbDevices",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedUsbDevices",
                "return_type": "Array<UsbDeviceType>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "in",
                "extends": null
            },
            {
                "class": "code",
                "extends": null
            },
            {
                "class": "in",
                "extends": null
            },
            {
                "class": "code",
                "extends": null
            },
            {
                "class": "code",
                "extends": null
            },
            {
                "class": "code",
                "extends": null
            }
        ]
    },
    "@ohos.systemparameter": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "def",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.commonEventManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.commonEvent.commonEventData",
                "imported_as": "CommonEventData as _CommonEventData"
            },
            {
                "module": "@ohos.commonEvent.commonEventSubscriber",
                "imported_as": "CommonEventSubscriber as _CommonEventSubscriber"
            },
            {
                "module": "@ohos.commonEvent.commonEventSubscribeInfo",
                "imported_as": "CommonEventSubscribeInfo as _CommonEventSubscribeInfo"
            },
            {
                "module": "@ohos.commonEvent.commonEventPublishData",
                "imported_as": "CommonEventPublishData as _CommonEventPublishData"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "CommonEventPublishData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishAsUser",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishAsUser",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "CommonEventPublishData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSubscriber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscribeInfo",
                        "type": "CommonEventSubscribeInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSubscriber",
                "return_type": "Promise<CommonEventSubscriber>",
                "parameters": [
                    {
                        "name": "subscribeInfo",
                        "type": "CommonEventSubscribeInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSubscriberSync",
                "return_type": "CommonEventSubscriber",
                "parameters": [
                    {
                        "name": "subscribeInfo",
                        "type": "CommonEventSubscribeInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "CommonEventSubscriber"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "CommonEventSubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeStickyCommonEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeStickyCommonEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setStaticSubscriberState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setStaticSubscriberState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setStaticSubscriberState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bundle": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundle.applicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundle.abilityInfo",
                "imported_as": "AbilityInfo"
            },
            {
                "module": "@ohos.bundle.PermissionDef",
                "imported_as": "PermissionDef"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.bundle.bundleInfo",
                "imported_as": "BundleInfo"
            },
            {
                "module": "@ohos.bundle.bundleInstaller",
                "imported_as": "BundleInstaller"
            }
        ],
        "interfaces": {
            "BundleOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "BundleOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfo",
                "return_type": "Promise<BundleInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInstaller",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInstaller",
                "return_type": "Promise<BundleInstaller>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityInfo",
                "return_type": "Promise<AbilityInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfo",
                "return_type": "Promise<ApplicationInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityByWant",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityByWant",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityByWant",
                "return_type": "Promise<Array<AbilityInfo>>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleFlag",
                        "type": "BundleFlag"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleFlag",
                        "type": "BundleFlag"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleInfo",
                "return_type": "Promise<Array<BundleInfo>>",
                "parameters": [
                    {
                        "name": "bundleFlag",
                        "type": "BundleFlag"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllApplicationInfo",
                "return_type": "Promise<Array<ApplicationInfo>>",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNameForUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNameForUid",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleArchiveInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hapFilePath",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleArchiveInfo",
                "return_type": "Promise<BundleInfo>",
                "parameters": [
                    {
                        "name": "hapFilePath",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLaunchWantForBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLaunchWantForBundle",
                "return_type": "Promise<Want>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cleanBundleCacheFiles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cleanBundleCacheFiles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAbilityEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "isEnable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAbilityEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "isEnable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionDef",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "permissionName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionDef",
                "return_type": "Promise<PermissionDef>",
                "parameters": [
                    {
                        "name": "permissionName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityLabel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityLabel",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityIcon",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityIcon",
                "return_type": "Promise<image",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAbilityEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAbilityEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.hidebug": {
        "dependencies": [],
        "interfaces": {
            "ThreadCpuUsage": [],
            "SystemMemInfo": [],
            "NativeMemInfo": [],
            "MemoryLimit": [],
            "VMMemoryInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getNativeHeapSize",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNativeHeapAllocatedSize",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNativeHeapFreeSize",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVss",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPss",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharedDirty",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrivateDirty",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCpuUsage",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startProfiling",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filename",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopProfiling",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dumpHeapData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filename",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startJsCpuProfiling",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filename",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopJsCpuProfiling",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dumpJsHeapData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filename",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getServiceDump",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "serviceid",
                        "type": "number"
                    },
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "args",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemCpuUsage",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppThreadCpuUsage",
                "return_type": "ThreadCpuUsage",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemMemInfo",
                "return_type": "SystemMemInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppNativeMemInfo",
                "return_type": "NativeMemInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppMemoryLimit",
                "return_type": "MemoryLimit",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppVMMemoryInfo",
                "return_type": "VMMemoryInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAppTraceCapture",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "number"
                    },
                    {
                        "name": "flag",
                        "type": "TraceFlag"
                    },
                    {
                        "name": "limitSize",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopAppTraceCapture",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVMRuntimeStats",
                "return_type": "GcStats",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVMRuntimeStat",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "item",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppResourceLimit",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "number"
                    },
                    {
                        "name": "enableDebugLog",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDebugState",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGraphicsMemory",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGraphicsMemorySync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetooth.wearDetection": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enableWearDetection",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableWearDetection",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableWearDetection",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableWearDetection",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWearDetectionSupported",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWearDetectionSupported",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWearDetectionEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWearDetectionEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetoothManager": {
        "dependencies": [],
        "interfaces": {
            "BaseProfile": [],
            "GattServer": [],
            "GattClientDevice": [],
            "GattService": [
                "serviceUuid",
                "isPrimary"
            ],
            "BLECharacteristic": [],
            "BLEDescriptor": [],
            "NotifyCharacteristic": [],
            "CharacteristicReadRequest": [
                "deviceId",
                "transId",
                "offset",
                "characteristicUuid",
                "serviceUuid"
            ],
            "CharacteristicWriteRequest": [
                "deviceId",
                "transId",
                "offset",
                "isPrep",
                "needRsp",
                "value",
                "characteristicUuid",
                "serviceUuid"
            ],
            "DescriptorReadRequest": [
                "deviceId",
                "transId",
                "offset",
                "descriptorUuid",
                "characteristicUuid",
                "serviceUuid"
            ],
            "DescriptorWriteRequest": [
                "deviceId",
                "transId",
                "offset",
                "isPrep",
                "needRsp",
                "value",
                "descriptorUuid",
                "characteristicUuid",
                "serviceUuid"
            ],
            "ServerResponse": [
                "deviceId",
                "transId",
                "status",
                "offset",
                "value"
            ],
            "BLEConnectChangedState": [
                "deviceId",
                "state"
            ],
            "ScanResult": [
                "deviceId",
                "rssi",
                "data"
            ],
            "AdvertiseSetting": [],
            "AdvertiseData": [
                "serviceUuids",
                "manufactureData",
                "serviceData"
            ],
            "ManufactureData": [
                "manufactureId",
                "manufactureValue"
            ],
            "ServiceData": [
                "serviceUuid",
                "serviceValue"
            ],
            "ScanFilter": [],
            "ScanOptions": [],
            "SppOption": [
                "uuid",
                "secure"
            ],
            "PinRequiredParam": [
                "deviceId",
                "pinCode"
            ],
            "DeviceClass": [
                "majorClass",
                "majorMinorClass",
                "classOfDevice"
            ],
            "BondStateParam": [
                "deviceId",
                "state"
            ],
            "StateChangeParam": [
                "deviceId",
                "state"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getState",
                "return_type": "BluetoothState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBtConnectionState",
                "return_type": "ProfileConnectionState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pairDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPairedDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceName",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceClass",
                "return_type": "DeviceClass",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableBluetooth",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableBluetooth",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalName",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPairedDevices",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileConnectionState",
                "return_type": "ProfileConnectionState",
                "parameters": [
                    {
                        "name": "profileId",
                        "type": "ProfileId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDevicePairingConfirmation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "device",
                        "type": "string"
                    },
                    {
                        "name": "accept",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setLocalName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBluetoothScanMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "ScanMode"
                    },
                    {
                        "name": "duration",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBluetoothScanMode",
                "return_type": "ScanMode",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBluetoothDiscovery",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBluetoothDiscovery",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppListen",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "option",
                        "type": "SppOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppAccept",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "serverSocket",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppConnect",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "device",
                        "type": "string"
                    },
                    {
                        "name": "option",
                        "type": "SppOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppCloseServerSocket",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "socket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppCloseClientSocket",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "socket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppWrite",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    },
                    {
                        "name": "data",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileInstance",
                "return_type": "A2dpSourceProfile",
                "parameters": [
                    {
                        "name": "profileId",
                        "type": "ProfileId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGattServer",
                "return_type": "GattServer",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGattClientDevice",
                "return_type": "GattClientDevice",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getConnectedBLEDevices",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBLEScan",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filters",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBLEScan",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.distributedDeviceManager": {
        "dependencies": [],
        "interfaces": {
            "DeviceBasicInfo": [],
            "DeviceManager": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createDeviceManager",
                "return_type": "DeviceManager",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseDeviceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceManager",
                        "type": "DeviceManager"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.hiSysEvent": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "SysEventInfo": [],
            "WatchRule": [],
            "Watcher": [],
            "QueryArg": [],
            "QueryRule": [],
            "Querier": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "SysEventInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "SysEventInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addWatcher",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "watcher",
                        "type": "Watcher"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeWatcher",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "watcher",
                        "type": "Watcher"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "query",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "queryArg",
                        "type": "QueryArg"
                    },
                    {
                        "name": "rules",
                        "type": "QueryRule"
                    },
                    {
                        "name": "querier",
                        "type": "Querier"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportSysEvents",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "queryArg",
                        "type": "QueryArg"
                    },
                    {
                        "name": "rules",
                        "type": "QueryRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "rules",
                        "type": "QueryRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.UiTest": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "Point": [],
            "Rect": [],
            "WindowFilter": [],
            "UIElementInfo": [],
            "UIEventObserver": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "UiDriver",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Driver",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "PointerMatrix",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    },
                    {
                        "name": "steps",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "By",
                "extends": null
            },
            {
                "class": "UiComponent",
                "extends": null
            },
            {
                "class": "UiDriver",
                "extends": null
            },
            {
                "class": "On",
                "extends": null
            },
            {
                "class": "Component",
                "extends": null
            },
            {
                "class": "Driver",
                "extends": null
            },
            {
                "class": "UiWindow",
                "extends": null
            },
            {
                "class": "PointerMatrix",
                "extends": null
            }
        ]
    },
    "@ohos.web.webview": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.security.cert",
                "imported_as": "cert"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.print",
                "imported_as": "type print"
            },
            {
                "module": "@ohos.web.netErrorList",
                "imported_as": "WebNetErrorList"
            }
        ],
        "interfaces": {
            "WebHeader": [],
            "HitTestValue": [],
            "WebCustomScheme": [],
            "PdfConfiguration": [],
            "WebStorageOrigin": [],
            "RequestInfo": [],
            "ScrollOffset": [],
            "WebMessagePort": [],
            "HistoryItem": [],
            "BackForwardList": [],
            "SnapshotInfo": [],
            "SnapshotResult": [],
            "CacheOptions": [],
            "OfflineResourceMap": [],
            "NativeMediaPlayerHandler": [],
            "NativeMediaPlayerBridge": [],
            "RectEvent": [],
            "MediaInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteAllData",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteOrigin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOrigins",
                "return_type": "Promise<Array<WebStorageOrigin>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOrigins",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOriginQuota",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOriginQuota",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOriginUsage",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOriginUsage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "existHttpAuthCredentials",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteHttpAuthCredentials",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHttpAuthCredentials",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "name": "realm",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "saveHttpAuthCredentials",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "name": "realm",
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "allowGeolocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteGeolocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteAllGeolocation",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessibleGeolocation",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessibleGeolocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "origin",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStoredGeolocation",
                "return_type": "Promise<Array<string>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStoredGeolocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCookie",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fetchCookieSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fetchCookie",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fetchCookie",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "incognito",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fetchCookie",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCookie",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "configCookieSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "configCookieSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "incognito",
                        "type": "boolean"
                    },
                    {
                        "name": "includeHttpOnly",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "configCookie",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "configCookie",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "incognito",
                        "type": "boolean"
                    },
                    {
                        "name": "includeHttpOnly",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "configCookie",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "saveCookieAsync",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "saveCookieAsync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCookieAllowed",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "putAcceptCookieEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accept",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isThirdPartyCookieAllowed",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "putAcceptThirdPartyCookieEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accept",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "existCookie",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteEntireCookie",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAllCookiesSync",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAllCookies",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAllCookies",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteSessionCookie",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearSessionCookieSync",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearSessionCookie",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearSessionCookie",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "initializeWebEngine",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHttpDns",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "secureDnsMode",
                        "type": "SecureDnsMode"
                    },
                    {
                        "name": "secureDnsConfig",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWebDebuggingAccess",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "webDebuggingAccess",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "customizeSchemes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "schemes",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "prepareForPageLoad",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    },
                    {
                        "name": "preconnectable",
                        "type": "boolean"
                    },
                    {
                        "name": "numSockets",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setConnectionTimeout",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timeout",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pauseAllTimers",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resumeAllTimers",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setServiceWorkerWebSchemeHandler",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "scheme",
                        "type": "string"
                    },
                    {
                        "name": "handler",
                        "type": "WebSchemeHandler"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearServiceWorkerWebSchemeHandler",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addIntelligentTrackingPreventionBypassingList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeIntelligentTrackingPreventionBypassingList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearIntelligentTrackingPreventionBypassingList",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultUserAgent",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableWholeWebPageDrawing",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "prefetchResource",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "RequestInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearPrefetchedResource",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "cacheKeyList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRenderProcessMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "RenderProcessMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRenderProcessMode",
                "return_type": "RenderProcessMode",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHostIP",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostName",
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "type": "string"
                    },
                    {
                        "name": "aliveTime",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearHostIP",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "warmupServiceWorker",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "trimMemoryByPressureLevel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "level",
                        "type": "PressureLevel"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableBackForwardCache",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "features",
                        "type": "BackForwardCacheSupportedFeatures"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deserialize",
                "return_type": "WebDownloadItem",
                "parameters": [
                    {
                        "name": "serializedData",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDownloadDelegate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "delegate",
                        "type": "WebDownloadDelegate"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resumeDownload",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "webDownloadItem",
                        "type": "WebDownloadItem"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAdsBlockRules",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rulesFile",
                        "type": "string"
                    },
                    {
                        "name": "replace",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAdsBlockDisallowedList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domainSuffixes",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAdsBlockAllowedList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domainSuffixes",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAdsBlockDisallowedList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domainSuffixes",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAdsBlockAllowedList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domainSuffixes",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAdsBlockDisallowedList",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAdsBlockAllowedList",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "PdfData",
                "extends": null
            },
            {
                "class": "WebStorage",
                "extends": null
            },
            {
                "class": "WebDataBase",
                "extends": null
            },
            {
                "class": "GeolocationPermissions",
                "extends": null
            },
            {
                "class": "WebCookieManager",
                "extends": null
            },
            {
                "class": "WebMessageExt",
                "extends": null
            },
            {
                "class": "JsMessageExt",
                "extends": null
            },
            {
                "class": "WebviewController",
                "extends": null
            },
            {
                "class": "WebDownloadItem",
                "extends": null
            },
            {
                "class": "WebDownloadDelegate",
                "extends": null
            },
            {
                "class": "WebDownloadManager",
                "extends": null
            },
            {
                "class": "WebHttpBodyStream",
                "extends": null
            },
            {
                "class": "WebSchemeHandlerRequest",
                "extends": null
            },
            {
                "class": "WebSchemeHandlerResponse",
                "extends": null
            },
            {
                "class": "WebResourceHandler",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "WebSchemeHandler",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "MediaSourceInfo",
                "extends": null
            },
            {
                "class": "NativeMediaPlayerSurfaceInfo",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "AdsBlockManager",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "BackForwardCacheSupportedFeatures",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "BackForwardCacheOptions",
                "extends": null
            }
        ]
    },
    "@ohos.net.sharing": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            }
        ],
        "interfaces": {
            "InterfaceSharingStateInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isSharingSupported",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSharingSupported",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSharing",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSharing",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startSharing",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startSharing",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopSharing",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopSharing",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStatsRxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStatsRxBytes",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStatsTxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStatsTxBytes",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStatsTotalBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStatsTotalBytes",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharingIfaces",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "state",
                        "type": "SharingIfaceState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharingIfaces",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "SharingIfaceState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharingState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharingState",
                "return_type": "Promise<SharingIfaceState>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharableRegexes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharableRegexes",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SharingIfaceType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.vibrator": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "VibrateAttribute": [],
            "VibrateTime": [],
            "VibratePreset": [],
            "VibrateFromFile": [],
            "HapticFileDescriptor": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "vibrate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "duration",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "vibrate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "duration",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "vibrate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "effectId",
                        "type": "EffectId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "vibrate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "effectId",
                        "type": "EffectId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startVibration",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "effect",
                        "type": "VibrateEffect"
                    },
                    {
                        "name": "attribute",
                        "type": "VibrateAttribute"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startVibration",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "effect",
                        "type": "VibrateEffect"
                    },
                    {
                        "name": "attribute",
                        "type": "VibrateAttribute"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopVibration",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "stopMode",
                        "type": "VibratorStopMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopVibration",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "stopMode",
                        "type": "VibratorStopMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopVibration",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopVibration",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopVibrationSync",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportEffect",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "effectId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportEffect",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "effectId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportEffectSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "effectId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stop",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "stopMode",
                        "type": "VibratorStopMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stop",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "stopMode",
                        "type": "VibratorStopMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHdHapticSupported",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.fileshare": {
        "dependencies": [
            {
                "module": "@ohos.ability.wantConstant",
                "imported_as": "type wantConstant"
            }
        ],
        "interfaces": {
            "PolicyInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "grantUriPermission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "flag",
                        "type": "wantConstant"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "grantUriPermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "flag",
                        "type": "wantConstant"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "persistPermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "policies",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "revokePermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "policies",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "activatePermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "policies",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deactivatePermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "policies",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "checkPersistentPermission",
                "return_type": "Promise<Array<boolean>>",
                "parameters": [
                    {
                        "name": "policies",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.DriverExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.rpc",
                "imported_as": "type rpc"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.application.DriverExtensionContext",
                "imported_as": "_DriverExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "DriverExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.bundleState": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "BundleStateInfo": [],
            "BundleActiveState": [],
            "BundleActiveInfoResponse": [
                "key"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isIdleState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isIdleState",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppUsagePriorityGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppUsagePriorityGroup",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStateInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStateInfos",
                "return_type": "Promise<BundleActiveInfoResponse>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStateInfoByInterval",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "byInterval",
                        "type": "IntervalType"
                    },
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStateInfoByInterval",
                "return_type": "Promise<Array<BundleStateInfo>>",
                "parameters": [
                    {
                        "name": "byInterval",
                        "type": "IntervalType"
                    },
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleActiveStates",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleActiveStates",
                "return_type": "Promise<Array<BundleActiveState>>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryCurrentBundleActiveStates",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryCurrentBundleActiveStates",
                "return_type": "Promise<Array<BundleActiveState>>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "@ohos.notificationSubscribe": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.notification.NotificationCommonDef",
                "imported_as": "BundleOption as _BundleOption"
            },
            {
                "module": "@ohos.notification.notificationSubscribeInfo",
                "imported_as": "NotificationSubscribeInfo as _NotificationSubscribeInfo"
            },
            {
                "module": "@ohos.notification.notificationSubscriber",
                "imported_as": "NotificationSubscriber as _NotificationSubscriber"
            },
            {
                "module": "@ohos.notification.notificationSubscriber",
                "imported_as": "SubscribeCallbackData as _SubscribeCallbackData"
            },
            {
                "module": "@ohos.notification.notificationSubscriber",
                "imported_as": "EnabledNotificationCallbackData as _EnabledNotificationCallbackData"
            }
        ],
        "interfaces": {
            "NotificationKey": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeSelf",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    },
                    {
                        "name": "info",
                        "type": "NotificationSubscribeInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "notificationKey",
                        "type": "NotificationKey"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "notificationKey",
                        "type": "NotificationKey"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hashCode",
                        "type": "string"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hashCodes",
                        "type": "Array"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "hashCode",
                        "type": "string"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "hashCodes",
                        "type": "Array"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.AutoFillExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.ExtensionAbility",
                "imported_as": "ExtensionAbility"
            },
            {
                "module": "@ohos.app.ability.UIExtensionContentSession",
                "imported_as": "type UIExtensionContentSession"
            },
            {
                "module": "@ohos.application.AutoFillExtensionContext",
                "imported_as": "type AutoFillExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "AutoFillExtensionAbility",
                "extends": "ExtensionAbility"
            }
        ]
    },
    "@ohos.multimedia.movingphotoview": {
        "dependencies": [
            {
                "module": "@ohos.file.photoAccessHelper",
                "imported_as": "photoAccessHelper"
            }
        ],
        "interfaces": {
            "MovingPhotoViewOptions": [],
            "MovingPhotoViewInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "MovingPhotoViewAttribute",
                "extends": "CommonMethod"
            },
            {
                "class": "MovingPhotoViewController",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.InsightIntentExecutor": {
        "dependencies": [
            {
                "module": "@ohos.window",
                "imported_as": "type window"
            },
            {
                "module": "@ohos.app.ability.insightIntent",
                "imported_as": "type insightIntent"
            },
            {
                "module": "@ohos.app.ability.InsightIntentContext",
                "imported_as": "type InsightIntentContext"
            },
            {
                "module": "@ohos.app.ability.UIExtensionContentSession",
                "imported_as": "type UIExtensionContentSession"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "InsightIntentExecutor",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.ConfigurationConstant": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.data.DataShareResultSet": {
        "dependencies": [],
        "interfaces": {
            "DataShareResultSet": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            }
        ]
    },
    "@ohos.logLibrary": {
        "dependencies": [],
        "interfaces": {
            "LogEntry": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "list",
                "return_type": "LogEntry",
                "parameters": [
                    {
                        "name": "logType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "logType",
                        "type": "string"
                    },
                    {
                        "name": "logName",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "logType",
                        "type": "string"
                    },
                    {
                        "name": "logName",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "move",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "logType",
                        "type": "string"
                    },
                    {
                        "name": "logName",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "move",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "logType",
                        "type": "string"
                    },
                    {
                        "name": "logName",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "logType",
                        "type": "string"
                    },
                    {
                        "name": "logName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimedia.camera": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "ErrorCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type Context"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.graphics.colorSpaceManager",
                "imported_as": "type colorSpaceManager"
            },
            {
                "module": "@ohos.file.photoAccessHelper",
                "imported_as": "photoAccessHelper"
            }
        ],
        "interfaces": {
            "Profile": [],
            "FrameRateRange": [],
            "CameraOutputCapability": [],
            "SettingParam": [],
            "PrelaunchConfig": [],
            "CameraManager": [],
            "TorchStatusInfo": [],
            "CameraStatusInfo": [],
            "FoldStatusInfo": [],
            "CameraDevice": [],
            "Size": [],
            "Point": [],
            "CameraInput": [],
            "LcdFlashStatus": [],
            "FlashQuery": [],
            "AutoExposureQuery": [],
            "FocusQuery": [],
            "ManualFocus": [],
            "WhiteBalanceQuery": [],
            "ManualIsoQuery": [],
            "SmoothZoomInfo": [],
            "ZoomPointInfo": [],
            "ZoomQuery": [],
            "StabilizationQuery": [],
            "BeautyQuery": [],
            "EffectSuggestion": [],
            "ColorEffectQuery": [],
            "ColorManagementQuery": [],
            "AutoDeviceSwitchQuery": [],
            "AutoDeviceSwitchStatus": [],
            "MacroQuery": [],
            "Session": [],
            "CaptureSession": [],
            "SceneFeatureDetectionResult": [],
            "SceneDetectionQuery": [],
            "PortraitQuery": [],
            "ZoomRange": [],
            "PhysicalAperture": [],
            "ApertureQuery": [],
            "ManualExposureQuery": [],
            "IsoInfo": [],
            "ExposureInfo": [],
            "ApertureInfo": [],
            "LuminationInfo": [],
            "CameraOutput": [],
            "SketchStatusData": [],
            "Location": [],
            "PhotoCaptureSetting": [],
            "Photo": [],
            "DeferredPhotoProxy": [],
            "FrameShutterInfo": [],
            "FrameShutterEndInfo": [],
            "CaptureStartInfo": [],
            "CaptureEndInfo": [],
            "DeferredVideoEnhancementInfo": [],
            "Rect": [],
            "MetadataObject": [],
            "CameraOcclusionDetectionResult": [],
            "TryAEInfo": [],
            "DepthProfile": [],
            "DepthData": [],
            "DepthFusionQuery": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getCameraManager",
                "return_type": "CameraManager",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "EffectSuggestionStatus",
                "extends": null
            }
        ]
    },
    "@ohos.ability.particleAbility": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.ability.startAbilityParameter",
                "imported_as": "StartAbilityParameter"
            },
            {
                "module": "@ohos.ability.dataAbilityHelper",
                "imported_as": "DataAbilityHelper"
            },
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "NotificationRequest"
            },
            {
                "module": "@ohos.ability.connectOptions",
                "imported_as": "ConnectOptions"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "startAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "StartAbilityParameter"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAbility",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "StartAbilityParameter"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateSelf",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateSelf",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireDataAbilityHelper",
                "return_type": "DataAbilityHelper",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBackgroundRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBackgroundRunning",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelBackgroundRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelBackgroundRunning",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectAbility",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "request",
                        "type": "Want"
                    },
                    {
                        "name": "options",
                        "type": "ConnectOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "connection",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectAbility",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "connection",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.uiExtensionHost": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {
            "UIExtensionHostWindowProxy": [],
            "UIExtensionHostWindowProxyProperties": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.telephony.esim": {
        "dependencies": [],
        "interfaces": {
            "AccessRule": [],
            "DownloadableProfile": [],
            "GetDownloadableProfileMetadataResult": [],
            "GetDownloadableProfilesResult": [],
            "DownloadProfileResult": [],
            "GetEuiccProfileInfoListResult": [],
            "OperatorId": [],
            "EuiccProfile": [],
            "EuiccInfo": [],
            "DownloadConfiguration": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addProfile",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "profile",
                        "type": "DownloadableProfile"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEid",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOsuStatus",
                "return_type": "Promise<OsuStatus>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startOsu",
                "return_type": "Promise<OsuStatus>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDownloadableProfileMetadata",
                "return_type": "Promise<GetDownloadableProfileMetadataResult>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "portIndex",
                        "type": "number"
                    },
                    {
                        "name": "profile",
                        "type": "DownloadableProfile"
                    },
                    {
                        "name": "forceDisableProfile",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDownloadableProfiles",
                "return_type": "Promise<GetDownloadableProfilesResult>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "portIndex",
                        "type": "number"
                    },
                    {
                        "name": "forceDisableProfile",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "downloadProfile",
                "return_type": "Promise<DownloadProfileResult>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "portIndex",
                        "type": "number"
                    },
                    {
                        "name": "profile",
                        "type": "DownloadableProfile"
                    },
                    {
                        "name": "configuration",
                        "type": "DownloadConfiguration"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEuiccProfileInfoList",
                "return_type": "Promise<GetEuiccProfileInfoListResult>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEuiccInfo",
                "return_type": "Promise<EuiccInfo>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteProfile",
                "return_type": "Promise<ResultCode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "iccid",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchToProfile",
                "return_type": "Promise<ResultCode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "portIndex",
                        "type": "number"
                    },
                    {
                        "name": "iccid",
                        "type": "string"
                    },
                    {
                        "name": "forceDisableProfile",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setProfileNickname",
                "return_type": "Promise<ResultCode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "iccid",
                        "type": "string"
                    },
                    {
                        "name": "nickname",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetMemory",
                "return_type": "Promise<ResultCode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reserveProfilesForFactoryRestore",
                "return_type": "Promise<ResultCode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultSmdpAddress",
                "return_type": "Promise<ResultCode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "address",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultSmdpAddress",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelSession",
                "return_type": "Promise<ResultCode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "transactionId",
                        "type": "string"
                    },
                    {
                        "name": "cancelReason",
                        "type": "CancelReason"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "not",
                "extends": null
            }
        ]
    },
    "@system.brightness": {
        "dependencies": [],
        "interfaces": {
            "BrightnessResponse": [],
            "GetBrightnessOptions": [],
            "SetBrightnessOptions": [],
            "BrightnessModeResponse": [],
            "GetBrightnessModeOptions": [],
            "SetBrightnessModeOptions": [],
            "SetKeepScreenOnOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getValue",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMode",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMode",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setKeepScreenOn",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Brightness",
                "extends": null
            }
        ]
    },
    "@ohos.enterprise.systemManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "SystemUpdateInfo": [],
            "OtaUpdatePolicy": [],
            "UpdatePackageInfo": [],
            "Package": [],
            "PackageDescription": [],
            "NotifyDescription": [],
            "UpdateResult": [],
            "ErrorInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setNTPServer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "server",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNTPServer",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setOtaUpdatePolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "policy",
                        "type": "OtaUpdatePolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOtaUpdatePolicy",
                "return_type": "OtaUpdatePolicy",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyUpdatePackages",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "packageInfo",
                        "type": "UpdatePackageInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUpdateResult",
                "return_type": "Promise<UpdateResult>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "version",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.wantAgent": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.wantAgent.wantAgentInfo",
                "imported_as": "WantAgentInfo as _WantAgentInfo"
            },
            {
                "module": "@ohos.wantAgent.triggerInfo",
                "imported_as": "TriggerInfo as _TriggerInfo"
            }
        ],
        "interfaces": {
            "CompleteData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleName",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUid",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWant",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWant",
                "return_type": "Promise<Want>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "trigger",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "triggerInfo",
                        "type": "TriggerInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "equal",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "otherAgent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "equal",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "otherAgent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWantAgent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "WantAgentInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWantAgent",
                "return_type": "Promise<WantAgent>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "WantAgentInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOperationType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOperationType",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.calendarManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.Context",
                "imported_as": "type Context"
            }
        ],
        "interfaces": {
            "CalendarManager": [],
            "Calendar": [],
            "CalendarAccount": [],
            "CalendarConfig": [],
            "Event": [],
            "Location": [],
            "RecurrenceRule": [],
            "Attendee": [],
            "EventService": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getCalendarManager",
                "return_type": "CalendarManager",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "filterById",
                "return_type": "EventFilter",
                "parameters": [
                    {
                        "name": "ids",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "filterByTime",
                "return_type": "EventFilter",
                "parameters": [
                    {
                        "name": "start",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "filterByTitle",
                "return_type": "EventFilter",
                "parameters": [
                    {
                        "name": "title",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "EventFilter",
                "extends": null
            }
        ]
    },
    "@ohos.application.testRunner": {
        "dependencies": [],
        "interfaces": {
            "TestRunner": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            }
        ]
    },
    "@ohos.util.TreeMap": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TreeMap",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.PrintExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.application.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.print",
                "imported_as": "type print"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "PrintExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.data.dataShare": {
        "dependencies": [
            {
                "module": "@ohos.application.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.data.DataShareResultSet",
                "imported_as": "DataShareResultSet"
            },
            {
                "module": "@ohos.data.dataSharePredicates",
                "imported_as": "dataSharePredicates"
            },
            {
                "module": "@ohos.data.ValuesBucket",
                "imported_as": "ValuesBucket"
            }
        ],
        "interfaces": {
            "DataShareHelperOptions": [],
            "TemplateId": [],
            "PublishedItem": [],
            "RdbDataChangeNode": [],
            "PublishedDataChangeNode": [],
            "Template": [],
            "OperationResult": [],
            "UpdateOperation": [],
            "ChangeInfo": [],
            "DataShareHelper": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createDataShareHelper",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createDataShareHelper",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "DataShareHelperOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createDataShareHelper",
                "return_type": "Promise<DataShareHelper>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableSilentProxy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableSilentProxy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.abilityManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.Configuration",
                "imported_as": "Configuration"
            },
            {
                "module": "@ohos.application.AbilityRunningInfo",
                "imported_as": "AbilityRunningInfo"
            },
            {
                "module": "@ohos.application.ExtensionRunningInfo",
                "imported_as": "ExtensionRunningInfo"
            },
            {
                "module": "@ohos.bundle.elementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "updateConfiguration",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "Configuration"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateConfiguration",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "Configuration"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityRunningInfos",
                "return_type": "Promise<Array<AbilityRunningInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityRunningInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.process": {
        "dependencies": [],
        "interfaces": {
            "ChildProcess": [],
            "ConditionType": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isIsolatedProcess",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAppUid",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "v",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "is64Bit",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUidForName",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "v",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getThreadPriority",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "v",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStartRealtime",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPastCpuTime",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemConfig",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "name",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEnvironmentVar",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "runCmd",
                "return_type": "ChildProcess",
                "parameters": [
                    {
                        "name": "command",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "abort",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "listener",
                        "type": "EventListener"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exit",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "code",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cwd",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "chdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "dir",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uptime",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "kill",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "signal",
                        "type": "number"
                    },
                    {
                        "name": "pid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "ProcessManager",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.ChildProcess": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "ChildProcess",
                "extends": null
            }
        ]
    },
    "@ohos.accessibility.GesturePath": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "GesturePath",
                "extends": null
            }
        ]
    },
    "@ohos.security.huks": {
        "dependencies": [],
        "interfaces": {
            "HuksParam": [],
            "HuksHandle": [],
            "HuksSessionHandle": [],
            "HuksOptions": [],
            "HuksResult": [],
            "HuksReturnResult": [],
            "HuksListAliasesReturnResult": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "generateKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateKey",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateKeyItem",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateKeyItemAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteKey",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteKeyItem",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteKeyItemAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importKey",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importKeyItem",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importKeyItemAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importWrappedKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "wrappingKeyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importWrappedKeyItemAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "wrappingKeyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importWrappedKeyItem",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "wrappingKeyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportKey",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportKeyItemAsUser",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportKeyItem",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyProperties",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyProperties",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyItemProperties",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyItemPropertiesAsUser",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyItemProperties",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isKeyExist",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isKeyExist",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isKeyItemExist",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isKeyItemExist",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasKeyItemAsUser",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasKeyItem",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "init",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "init",
                "return_type": "Promise<HuksHandle>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "initSession",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "initSession",
                "return_type": "Promise<HuksSessionHandle>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "initSessionAsUser",
                "return_type": "Promise<HuksSessionHandle>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "update",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "update",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateSession",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateSession",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "token",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateSession",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finish",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finishSession",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finishSession",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "token",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finishSession",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "abort",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "abort",
                "return_type": "Promise<HuksResult>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "abortSession",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "abortSession",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "attestKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "attestKeyItemAsUser",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "attestKeyItem",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "anonAttestKeyItem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "anonAttestKeyItemAsUser",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "huksOptions",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "anonAttestKeyItem",
                "return_type": "Promise<HuksReturnResult>",
                "parameters": [
                    {
                        "name": "keyAlias",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSdkVersion",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "listAliases",
                "return_type": "Promise<HuksListAliasesReturnResult>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "HuksOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.OpenLinkOptions": {
        "dependencies": [],
        "interfaces": {
            "OpenLinkOptions": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.multimodalInput.keyCode": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.hiTraceChain": {
        "dependencies": [],
        "interfaces": {
            "HiTraceId": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "begin",
                "return_type": "HiTraceId",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "end",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "HiTraceId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getId",
                "return_type": "HiTraceId",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "HiTraceId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearId",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSpan",
                "return_type": "HiTraceId",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "tracepoint",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "HiTraceCommunicationMode"
                    },
                    {
                        "name": "type",
                        "type": "HiTraceTracepointType"
                    },
                    {
                        "name": "id",
                        "type": "HiTraceId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isValid",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "id",
                        "type": "HiTraceId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isFlagEnabled",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "id",
                        "type": "HiTraceId"
                    },
                    {
                        "name": "flag",
                        "type": "HiTraceFlag"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableFlag",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "HiTraceId"
                    },
                    {
                        "name": "flag",
                        "type": "HiTraceFlag"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.drawableDescriptor": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            }
        ],
        "interfaces": {
            "AnimationOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getMaskClipPath",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "DrawableDescriptor",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "LayeredDrawableDescriptor",
                "extends": "DrawableDescriptor"
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "PixelMapDrawableDescriptor",
                "extends": "DrawableDescriptor"
            },
            {
                "class": "AnimatedDrawableDescriptor",
                "extends": "DrawableDescriptor"
            }
        ]
    },
    "@ohos.enterprise.deviceInfo": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getDeviceSerial",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceSerial",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisplayVersion",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisplayVersion",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceName",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceInfo",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "label",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.security.cert": {
        "dependencies": [
            {
                "module": "@ohos.security.cryptoFramework",
                "imported_as": "cryptoFramework"
            }
        ],
        "interfaces": {
            "DataBlob": [],
            "DataArray": [],
            "EncodingBlob": [],
            "CertChainData": [],
            "X509Cert": [],
            "CertExtension": [],
            "X509CrlEntry": [],
            "X509CRLEntry": [],
            "X509Crl": [],
            "X509CRL": [],
            "CertChainValidator": [],
            "GeneralName": [],
            "X509CertMatchParameters": [],
            "X509CRLMatchParameters": [],
            "CertCRLCollection": [],
            "X509CertChain": [],
            "X500DistinguishedName": [],
            "X509TrustAnchor": [],
            "RevocationCheckParameter": [],
            "CertChainValidationParameters": [],
            "CertChainValidationResult": [],
            "CertChainBuildParameters": [],
            "CertChainBuildResult": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createX509Cert",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509Cert",
                "return_type": "Promise<X509Cert>",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCertExtension",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCertExtension",
                "return_type": "Promise<CertExtension>",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509Crl",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509Crl",
                "return_type": "Promise<X509Crl>",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509CRL",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509CRL",
                "return_type": "Promise<X509CRL>",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCertChainValidator",
                "return_type": "CertChainValidator",
                "parameters": [
                    {
                        "name": "algorithm",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCertCRLCollection",
                "return_type": "CertCRLCollection",
                "parameters": [
                    {
                        "name": "certs",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509CertChain",
                "return_type": "Promise<X509CertChain>",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509CertChain",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inStream",
                        "type": "EncodingBlob"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX509CertChain",
                "return_type": "X509CertChain",
                "parameters": [
                    {
                        "name": "certs",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "buildX509CertChain",
                "return_type": "Promise<CertChainBuildResult>",
                "parameters": [
                    {
                        "name": "param",
                        "type": "CertChainBuildParameters"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createTrustAnchorsWithKeyStore",
                "return_type": "Promise<Array<X509TrustAnchor>>",
                "parameters": [
                    {
                        "name": "keystore",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "pwd",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX500DistinguishedName",
                "return_type": "Promise<X500DistinguishedName>",
                "parameters": [
                    {
                        "name": "nameStr",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createX500DistinguishedName",
                "return_type": "Promise<X500DistinguishedName>",
                "parameters": [
                    {
                        "name": "nameDer",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.bluetooth": {
        "dependencies": [],
        "interfaces": {
            "StartBLEScanOptions": [],
            "StopBLEScanOptions": [],
            "BluetoothDevice": [],
            "BLEFoundResponse": [],
            "SubscribeBLEFoundOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "startBLEScan",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "StartBLEScanOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBLEScan",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "StopBLEScanOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeBLEFound",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeBLEFoundOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeBLEFound",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Bluetooth",
                "extends": null
            }
        ]
    },
    "@ohos.net.vpnExtension": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            },
            {
                "module": "@ohos.application.VpnExtensionContext",
                "imported_as": "type _VpnExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "VpnConnection": [],
            "VpnConfig": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "startVpnExtensionAbility",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopVpnExtensionAbility",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAlwaysOnVpnEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAlwaysOnVpnEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateVpnAuthorizedState",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVpnConnection",
                "return_type": "VpnConnection",
                "parameters": [
                    {
                        "name": "context",
                        "type": "VpnExtensionContext"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.account.distributedAccount": {
        "dependencies": [],
        "interfaces": {
            "DistributedAccountAbility": [],
            "DistributedInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getDistributedAccountAbility",
                "return_type": "DistributedAccountAbility",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.mediaquery": {
        "dependencies": [],
        "interfaces": {
            "MediaQueryEvent": [],
            "MediaQueryList": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "matchMedia",
                "return_type": "MediaQueryList",
                "parameters": [
                    {
                        "name": "condition",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "MediaQuery",
                "extends": null
            }
        ]
    },
    "@system.vibrator": {
        "dependencies": [],
        "interfaces": {
            "VibrateOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "vibrate",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Vibrator",
                "extends": null
            }
        ]
    },
    "@ohos.arkui.observer": {
        "dependencies": [
            {
                "module": "@ohos.application.UIAbilityContext",
                "imported_as": "type UIAbilityContext"
            }
        ],
        "interfaces": {
            "NavDestinationInfo": [],
            "NavigationInfo": [],
            "ScrollEventInfo": [],
            "TabContentInfo": [],
            "ObserverOptions": [],
            "NavDestinationSwitchInfo": [],
            "NavDestinationSwitchObserverOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "navigationId",
                        "type": "ResourceStr"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "navigationId",
                        "type": "ResourceStr"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    },
                    {
                        "name": "observerOptions",
                        "type": "NavDestinationSwitchObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    },
                    {
                        "name": "observerOptions",
                        "type": "NavDestinationSwitchObserverOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "RouterPageInfo",
                "extends": null
            },
            {
                "class": "DensityInfo",
                "extends": null
            }
        ]
    },
    "@ohos.data.uniformTypeDescriptor": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getTypeDescriptor",
                "return_type": "TypeDescriptor",
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUniformDataTypeByFilenameExtension",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "filenameExtension",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUniformDataTypeByMIMEType",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "mimeType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUniformDataTypesByFilenameExtension",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "filenameExtension",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUniformDataTypesByMIMEType",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "mimeType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "TypeDescriptor",
                "extends": null
            }
        ]
    },
    "@ohos.request.cacheDownload": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {
            "CacheDownloadOptions": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.file.hash": {
        "dependencies": [
            {
                "module": "@ohos.util.stream",
                "imported_as": "stream"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "hash",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "algorithm",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hash",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "algorithm",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createHash",
                "return_type": "HashStream",
                "parameters": [
                    {
                        "name": "algorithm",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "HashStream",
                "extends": "stream"
            }
        ]
    },
    "@ohos.ability.wantConstant": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.data.distributedDataObject": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type Context"
            },
            {
                "module": "@ohos.data.commonType",
                "imported_as": "commonType"
            }
        ],
        "interfaces": {
            "BindInfo": [],
            "SaveSuccessResponse": [],
            "RevokeSaveSuccessResponse": [],
            "DistributedObject": [],
            "DataObject": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createDistributedObject",
                "return_type": "DistributedObject",
                "parameters": [
                    {
                        "name": "source",
                        "type": "object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "DataObject",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "source",
                        "type": "object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "genSessionId",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.storage": {
        "dependencies": [],
        "interfaces": {
            "GetStorageOptions": [
                "key",
                "data",
                "data"
            ],
            "SetStorageOptions": [
                "key",
                "value",
                "data"
            ],
            "ClearStorageOptions": [
                "data"
            ],
            "DeleteStorageOptions": [
                "key",
                "data"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "GetStorageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SetStorageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clear",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "delete",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "DeleteStorageOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Storage",
                "extends": null
            }
        ]
    },
    "@ohos.enterprise.EnterpriseAdminExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.enterprise.systemManager",
                "imported_as": "type systemManager"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "EnterpriseAdminExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.telephony.sim": {
        "dependencies": [],
        "interfaces": {
            "OperatorConfig": [],
            "IccAccountInfo": [],
            "LockStatusResponse": [],
            "DiallingNumbersInfo": [],
            "LockInfo": [],
            "PersoLockInfo": [],
            "SimAuthenticationResponse": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isSimActive",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSimActive",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSimActiveSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultVoiceSlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultVoiceSlotId",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasOperatorPrivileges",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasOperatorPrivileges",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getISOCountryCodeForSim",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getISOCountryCodeForSim",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getISOCountryCodeForSimSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimOperatorNumeric",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimOperatorNumeric",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimOperatorNumericSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimSpn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimSpn",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimSpnSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimState",
                "return_type": "Promise<SimState>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimStateSync",
                "return_type": "SimState",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCardType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCardType",
                "return_type": "Promise<CardType>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCardTypeSync",
                "return_type": "CardType",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimIccId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimIccId",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVoiceMailIdentifier",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVoiceMailIdentifier",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVoiceMailNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVoiceMailNumber",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVoiceMailInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "mailName",
                        "type": "string"
                    },
                    {
                        "name": "mailNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVoiceMailInfo",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "mailName",
                        "type": "string"
                    },
                    {
                        "name": "mailNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimTelephoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimTelephoneNumber",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimGid1",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimGid1",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMaxSimCount",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIMSI",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIMSI",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOperatorSimCard",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "operator",
                        "type": "OperatorSimCard"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasSimCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasSimCard",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasSimCardSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimAccountInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimAccountInfo",
                "return_type": "Promise<IccAccountInfo>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveSimAccountInfoList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveSimAccountInfoList",
                "return_type": "Promise<Array<IccAccountInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultVoiceSlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultVoiceSlotId",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "activateSim",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "activateSim",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deactivateSim",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deactivateSim",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setShowName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setShowName",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShowName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShowName",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setShowNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "number",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setShowNumber",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "number",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShowNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShowNumber",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOperatorConfigs",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOperatorConfigs",
                "return_type": "Promise<Array<OperatorConfig>>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "pin",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPin",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "pin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPuk",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin",
                        "type": "string"
                    },
                    {
                        "name": "puk",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPuk",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin",
                        "type": "string"
                    },
                    {
                        "name": "puk",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "alterPin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin",
                        "type": "string"
                    },
                    {
                        "name": "oldPin",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "alterPin",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin",
                        "type": "string"
                    },
                    {
                        "name": "oldPin",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setLockState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "LockInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setLockState",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "LockInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPin2",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "pin2",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPin2",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "pin2",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPuk2",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin2",
                        "type": "string"
                    },
                    {
                        "name": "puk2",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockPuk2",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin2",
                        "type": "string"
                    },
                    {
                        "name": "puk2",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "alterPin2",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin2",
                        "type": "string"
                    },
                    {
                        "name": "oldPin2",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "alterPin2",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "newPin2",
                        "type": "string"
                    },
                    {
                        "name": "oldPin2",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryIccDiallingNumbers",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryIccDiallingNumbers",
                "return_type": "Promise<Array<DiallingNumbersInfo>>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addIccDiallingNumbers",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    },
                    {
                        "name": "diallingNumbers",
                        "type": "DiallingNumbersInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addIccDiallingNumbers",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    },
                    {
                        "name": "diallingNumbers",
                        "type": "DiallingNumbersInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "delIccDiallingNumbers",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    },
                    {
                        "name": "diallingNumbers",
                        "type": "DiallingNumbersInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "delIccDiallingNumbers",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    },
                    {
                        "name": "diallingNumbers",
                        "type": "DiallingNumbersInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateIccDiallingNumbers",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    },
                    {
                        "name": "diallingNumbers",
                        "type": "DiallingNumbersInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateIccDiallingNumbers",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "ContactType"
                    },
                    {
                        "name": "diallingNumbers",
                        "type": "DiallingNumbersInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLockState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "lockType",
                        "type": "LockType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLockState",
                "return_type": "Promise<LockState>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "lockType",
                        "type": "LockType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendEnvelopeCmd",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "cmd",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendEnvelopeCmd",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "cmd",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendTerminalResponseCmd",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "cmd",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendTerminalResponseCmd",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "cmd",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockSimLock",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "lockInfo",
                        "type": "PersoLockInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockSimLock",
                "return_type": "Promise<LockStatusResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "lockInfo",
                        "type": "PersoLockInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOpKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOpKey",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOpKeySync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOpName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOpName",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOpNameSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultVoiceSimId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultVoiceSimId",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDsdsMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDsdsMode",
                "return_type": "Promise<DsdsMode>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSimAuthentication",
                "return_type": "Promise<SimAuthenticationResponse>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "authType",
                        "type": "AuthType"
                    },
                    {
                        "name": "authData",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.graphics.scene": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.multimedia.audioHaptic": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.audio",
                "imported_as": "type audio"
            }
        ],
        "interfaces": {
            "AudioHapticPlayerOptions": [],
            "AudioHapticManager": [],
            "AudioHapticPlayer": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAudioHapticManager",
                "return_type": "AudioHapticManager",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.net.statistics": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            }
        ],
        "interfaces": {
            "IfaceInfo": [],
            "UidInfo": [],
            "NetStatsInfo": [],
            "NetStatsChangeInfo": [],
            "NetworkInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getIfaceRxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "nic",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIfaceRxBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "nic",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIfaceTxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "nic",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIfaceTxBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "nic",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularRxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularRxBytes",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularTxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularTxBytes",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllRxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllRxBytes",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllTxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllTxBytes",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUidRxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUidRxBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUidTxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUidTxBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTrafficStatsByIface",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "ifaceInfo",
                        "type": "IfaceInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTrafficStatsByIface",
                "return_type": "Promise<NetStatsInfo>",
                "parameters": [
                    {
                        "name": "ifaceInfo",
                        "type": "IfaceInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTrafficStatsByUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uidInfo",
                        "type": "UidInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTrafficStatsByUid",
                "return_type": "Promise<NetStatsInfo>",
                "parameters": [
                    {
                        "name": "uidInfo",
                        "type": "UidInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSockfdRxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sockfd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSockfdRxBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "sockfd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSockfdTxBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sockfd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSockfdTxBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "sockfd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTrafficStatsByNetwork",
                "return_type": "Promise<UidNetStatsInfo>",
                "parameters": [
                    {
                        "name": "networkInfo",
                        "type": "NetworkInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTrafficStatsByUidNetwork",
                "return_type": "Promise<NetStatsInfoSequence>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "networkInfo",
                        "type": "NetworkInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimodalInput.pointer": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "type image"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setPointerSpeed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "speed",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerSpeed",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "speed",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerSpeedSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "speed",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerSpeed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerSpeed",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerSpeedSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerStyle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    },
                    {
                        "name": "pointerStyle",
                        "type": "PointerStyle"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerStyle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    },
                    {
                        "name": "pointerStyle",
                        "type": "PointerStyle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerStyleSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    },
                    {
                        "name": "pointerStyle",
                        "type": "PointerStyle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerStyle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerStyle",
                "return_type": "Promise<PointerStyle>",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerStyleSync",
                "return_type": "PointerStyle",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerVisible",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "visible",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerVisible",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "visible",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerVisibleSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "visible",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isPointerVisible",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isPointerVisible",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isPointerVisibleSync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerColor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "color",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerColor",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "color",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerColorSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "color",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerColor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerColor",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerColorSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "size",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerSize",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "size",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPointerSizeSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "size",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerSize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPointerSizeSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMousePrimaryButton",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "primary",
                        "type": "PrimaryButton"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMousePrimaryButton",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "primary",
                        "type": "PrimaryButton"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMousePrimaryButton",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMousePrimaryButton",
                "return_type": "Promise<PrimaryButton>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHoverScrollState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHoverScrollState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHoverScrollState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHoverScrollState",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMouseScrollRows",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rows",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMouseScrollRows",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "rows",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMouseScrollRows",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMouseScrollRows",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadScrollSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadScrollSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadScrollSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadScrollSwitch",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadScrollDirection",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadScrollDirection",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadScrollDirection",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadScrollDirection",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadTapSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadTapSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadTapSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadTapSwitch",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadPointerSpeed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "speed",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadPointerSpeed",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "speed",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadPointerSpeed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadPointerSpeed",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadPinchSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadPinchSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadPinchSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadPinchSwitch",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadSwipeSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadSwipeSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadSwipeSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadSwipeSwitch",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadRightClickType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "RightClickType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadRightClickType",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "RightClickType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadRightClickType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadRightClickType",
                "return_type": "Promise<RightClickType>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCustomCursor",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    },
                    {
                        "name": "pixelMap",
                        "type": "image"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCustomCursorSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    },
                    {
                        "name": "pixelMap",
                        "type": "image"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadDoubleTapAndDragState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isOpen",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTouchpadDoubleTapAndDragState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "isOpen",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadDoubleTapAndDragState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTouchpadDoubleTapAndDragState",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.zlib": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "Options": [],
            "ZStream": [],
            "GzHeader": [],
            "ZipOutputInfo": [],
            "DictionaryOutputInfo": [],
            "DecompressionOutputInfo": [],
            "DeflatePendingOutputInfo": [],
            "GzErrorOutputInfo": [],
            "Checksum": [],
            "Zip": [],
            "GZip": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "zipFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "inFile",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unzipFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "inFile",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "compressFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inFile",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "compressFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "inFile",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "compressFiles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "inFiles",
                        "type": "Array"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "decompressFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inFile",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "decompressFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inFile",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "decompressFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "inFile",
                        "type": "string"
                    },
                    {
                        "name": "outFile",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOriginalSize",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "compressedFile",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createChecksum",
                "return_type": "Promise<Checksum>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createChecksumSync",
                "return_type": "Checksum",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createZip",
                "return_type": "Promise<Zip>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createZipSync",
                "return_type": "Zip",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGZip",
                "return_type": "Promise<GZip>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGZipSync",
                "return_type": "GZip",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.net.policy": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            }
        ],
        "interfaces": {
            "NetQuotaPolicy": [],
            "QuotaPolicy": [],
            "NetworkMatchRule": [],
            "NetUidRuleInfo": [],
            "NetUidPolicyInfo": [],
            "NetworkAccessPolicy": [],
            "UidNetworkAccessPolicy": [
                "key"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setBackgroundAllowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBackgroundAllowed",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBackgroundAllowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBackgroundAllowed",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBackgroundPolicyByUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBackgroundPolicyByUid",
                "return_type": "Promise<NetBackgroundPolicy>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPolicyByUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "policy",
                        "type": "NetUidPolicy"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPolicyByUid",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "policy",
                        "type": "NetUidPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPolicyByUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPolicyByUid",
                "return_type": "Promise<NetUidPolicy>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUidsByPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "policy",
                        "type": "NetUidPolicy"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUidsByPolicy",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "policy",
                        "type": "NetUidPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isUidNetAllowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "isMetered",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isUidNetAllowed",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "isMetered",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isUidNetAllowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "iface",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isUidNetAllowed",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "iface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetQuotaPolicies",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "quotaPolicies",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetQuotaPolicies",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "quotaPolicies",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetQuotaPolicies",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetQuotaPolicies",
                "return_type": "Promise<Array<NetQuotaPolicy>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateRemindPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netType",
                        "type": "NetBearType"
                    },
                    {
                        "name": "simId",
                        "type": "string"
                    },
                    {
                        "name": "remindType",
                        "type": "RemindType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateRemindPolicy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "netType",
                        "type": "NetBearType"
                    },
                    {
                        "name": "simId",
                        "type": "string"
                    },
                    {
                        "name": "remindType",
                        "type": "RemindType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDeviceIdleTrustlist",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uids",
                        "type": "Array"
                    },
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDeviceIdleTrustlist",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uids",
                        "type": "Array"
                    },
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceIdleTrustlist",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceIdleTrustlist",
                "return_type": "Promise<Array<number>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPowerSaveTrustlist",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uids",
                        "type": "Array"
                    },
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPowerSaveTrustlist",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uids",
                        "type": "Array"
                    },
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerSaveTrustlist",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerSaveTrustlist",
                "return_type": "Promise<Array<number>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetPolicies",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "simId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetPolicies",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "simId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkAccessPolicy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "policy",
                        "type": "NetworkAccessPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkAccessPolicy",
                "return_type": "Promise<NetworkAccessPolicy>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkAccessPolicy",
                "return_type": "Promise<UidNetworkAccessPolicy>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.recent": {
        "dependencies": [],
        "interfaces": {
            "FileInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "listFile",
                "return_type": "Array<FileInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "add",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.geoLocationManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.wantAgent",
                "imported_as": "WantAgent"
            },
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "NotificationRequest"
            }
        ],
        "interfaces": {
            "ReverseGeocodingMockInfo": [],
            "LocationMockConfig": [],
            "SatelliteStatusInfo": [],
            "CachedGnssLocationsRequest": [],
            "GnssGeofenceRequest": [],
            "GeofenceRequest": [],
            "Geofence": [],
            "ReverseGeoCodeRequest": [],
            "GeoCodeRequest": [],
            "GeoAddress": [],
            "LocationRequest": [],
            "CurrentLocationRequest": [],
            "GeofenceTransition": [],
            "ContinuousLocationRequest": [],
            "SingleLocationRequest": [],
            "Location": [],
            "LocatingRequiredDataConfig": [],
            "LocatingRequiredData": [],
            "WifiScanInfo": [],
            "BluetoothScanInfo": [],
            "LocationCommand": [],
            "CountryCode": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "LocationRequest"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "CachedGnssLocationsRequest"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeofenceRequest"
                    },
                    {
                        "name": "want",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeofenceRequest"
                    },
                    {
                        "name": "want",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "LocatingRequiredDataConfig"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "CurrentLocationRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentLocation",
                "return_type": "Promise<Location>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLastLocation",
                "return_type": "Location",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocationEnabled",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableLocation",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableLocation",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "ReverseGeoCodeRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocation",
                "return_type": "Promise<Array<GeoAddress>>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "ReverseGeoCodeRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocationName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeoCodeRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocationName",
                "return_type": "Promise<Array<GeoAddress>>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeoCodeRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isGeocoderAvailable",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCachedGnssLocationsSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCachedGnssLocationsSize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "flushCachedGnssLocations",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "flushCachedGnssLocations",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendCommand",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "command",
                        "type": "LocationCommand"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendCommand",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "command",
                        "type": "LocationCommand"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCountryCode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCountryCode",
                "return_type": "Promise<CountryCode>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableLocationMock",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableLocationMock",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMockedLocations",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "LocationMockConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableReverseGeocodingMock",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableReverseGeocodingMock",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setReverseGeocodingMockInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mockInfos",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocationPrivacyConfirmed",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "type",
                        "type": "LocationPrivacyType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setLocationPrivacyConfirmStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "LocationPrivacyType"
                    },
                    {
                        "name": "isConfirmed",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocatingRequiredData",
                "return_type": "Promise<Array<LocatingRequiredData>>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "LocatingRequiredDataConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addGnssGeofence",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "fenceRequest",
                        "type": "GnssGeofenceRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeGnssGeofence",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "geofenceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGeofenceSupportedCoordTypes",
                "return_type": "Array<CoordinateSystemType>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocationIconStatus",
                "return_type": "LocationIconStatus",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentWifiBssidForLocating",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.hiAppEvent": {
        "dependencies": [],
        "interfaces": {
            "ConfigOption": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "eventName",
                        "type": "string"
                    },
                    {
                        "name": "eventType",
                        "type": "EventType"
                    },
                    {
                        "name": "keyValues",
                        "type": "object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventName",
                        "type": "string"
                    },
                    {
                        "name": "eventType",
                        "type": "EventType"
                    },
                    {
                        "name": "keyValues",
                        "type": "object"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "configure",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "config",
                        "type": "ConfigOption"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.screenshot": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "ErrorCallback"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            }
        ],
        "interfaces": {
            "PickInfo": [],
            "Rect": [],
            "Size": [],
            "CaptureOption": [],
            "ScreenshotOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "save",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ScreenshotOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "save",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "save",
                "return_type": "Promise<image",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "capture",
                "return_type": "Promise<image",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pick",
                "return_type": "Promise<PickInfo>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.configPolicy": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getOneCfgFile",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "relPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOneCfgFile",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "relPath",
                        "type": "string"
                    },
                    {
                        "name": "followMode",
                        "type": "FollowXMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOneCfgFileSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "relPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCfgFiles",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "relPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCfgFiles",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "relPath",
                        "type": "string"
                    },
                    {
                        "name": "followMode",
                        "type": "FollowXMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCfgFilesSync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "relPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCfgDirList",
                "return_type": "Promise<Array<string>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCfgDirListSync",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.PhotoEditorExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.ExtensionAbility",
                "imported_as": "ExtensionAbility"
            },
            {
                "module": "@ohos.application.PhotoEditorExtensionContext",
                "imported_as": "PhotoEditorExtensionContext"
            },
            {
                "module": "@ohos.app.ability.UIExtensionContentSession",
                "imported_as": "type UIExtensionContentSession"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PhotoEditorExtensionAbility",
                "extends": "ExtensionAbility"
            }
        ]
    },
    "@ohos.app.ability.Want": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Want",
                "extends": null
            }
        ]
    },
    "@ohos.hichecker": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "addRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "bigint"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "bigint"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRule",
                "return_type": "bigint",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "contains",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "bigint"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addCheckRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "bigint"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeCheckRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "bigint"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "containsCheckRule",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "bigint"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.util.List": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "List",
                "extends": null
            }
        ]
    },
    "@ohos.multimedia.avCastPickerParam": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.notificationManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.notification.NotificationCommonDef",
                "imported_as": "BundleOption as _BundleOption"
            },
            {
                "module": "@ohos.notification.notificationActionButton",
                "imported_as": "NotificationActionButton as _NotificationActionButton"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationBasicContent as _NotificationBasicContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationContent as _NotificationContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationLongTextContent as _NotificationLongTextContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationMultiLineContent as _NotificationMultiLineContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationPictureContent as _NotificationPictureContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationSystemLiveViewContent as _NotificationSystemLiveViewContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationCapsule as _NotificationCapsule"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationButton as _NotificationButton"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationTime as _NotificationTime"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationProgress as _NotificationProgress"
            },
            {
                "module": "@ohos.notification.notificationFlags",
                "imported_as": "NotificationFlags as _NotificationFlags"
            },
            {
                "module": "@ohos.notification.notificationFlags",
                "imported_as": "NotificationFlagStatus as _NotificationFlagStatus"
            },
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "NotificationRequest as _NotificationRequest"
            },
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "UnifiedGroupInfo as _UnifiedGroupInfo"
            },
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "DistributedOptions as _DistributedOptions"
            },
            {
                "module": "@ohos.notification.notificationSlot",
                "imported_as": "NotificationSlot as _NotificationSlot"
            },
            {
                "module": "@ohos.notification.notificationSorting",
                "imported_as": "NotificationSorting as _NotificationSorting"
            },
            {
                "module": "@ohos.notification.notificationTemplate",
                "imported_as": "NotificationTemplate as _NotificationTemplate"
            },
            {
                "module": "@ohos.notification.notificationUserInput",
                "imported_as": "NotificationUserInput as _NotificationUserInput"
            },
            {
                "module": "@ohos.application.UIAbilityContext",
                "imported_as": "type UIAbilityContext"
            }
        ],
        "interfaces": {
            "ButtonOptions": [],
            "SystemLiveViewSubscriber": [],
            "NotificationCheckInfo": [],
            "NotificationCheckResult": [],
            "DoNotDisturbDate": [],
            "DoNotDisturbProfile": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishAsBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "representativeBundle",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishAsBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "representativeBundle",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishAsBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "representativeBundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "label",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "representativeBundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAsBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "representativeBundle",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAsBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "representativeBundle",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAsBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "representativeBundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAll",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SlotType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlots",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slots",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlots",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slots",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlot",
                "return_type": "Promise<NotificationSlot>",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlots",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlots",
                "return_type": "Promise<Array<NotificationSlot>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllNotificationEnabledBundles",
                "return_type": "Promise<Array<BundleOption>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllSlots",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllSlots",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNotificationEnable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNotificationEnable",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabledSync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "displayBadge",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "displayBadge",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBadgeDisplayed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBadgeDisplayed",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSlotByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSlotByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotsByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotByBundle",
                "return_type": "Promise<NotificationSlot>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotsByBundle",
                "return_type": "Promise<Array<NotificationSlot>>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotNumByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotNumByBundle",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllActiveNotifications",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllActiveNotifications",
                "return_type": "Promise<Array<NotificationRequest>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotificationCount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotificationCount",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotifications",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotifications",
                "return_type": "Promise<Array<NotificationRequest>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotificationByFilter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "NotificationFilter"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotificationByFilter",
                "return_type": "Promise<NotificationRequest>",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "NotificationFilter"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "groupName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelGroup",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "groupName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeGroupByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "groupName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeGroupByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "groupName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "Promise<DoNotDisturbDate>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "Promise<DoNotDisturbDate>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportDoNotDisturbMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportDoNotDisturbMode",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportTemplate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "templateName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportTemplate",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "templateName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableNotification",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableNotification",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableNotification",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableNotification",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDistributedEnable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDistributedEnable",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDistributedEnableByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDistributedEnableByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDistributedEnabledByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "deviceType",
                        "type": "string"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabledByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabledByBundle",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabledByBundle",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "deviceType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSmartReminderEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceType",
                        "type": "string"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSmartReminderEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "deviceType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceRemindType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceRemindType",
                "return_type": "Promise<DeviceRemindType>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNotificationEnableSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "type",
                        "type": "SlotType"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNotificationEnableSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "type",
                        "type": "SlotType"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "isForceControl",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNotificationEnableSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "type",
                        "type": "SlotType"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationSlotEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "type",
                        "type": "SlotType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationSlotEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "type",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSyncNotificationEnabledWithoutApp",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSyncNotificationEnabledWithoutApp",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSyncNotificationEnabledWithoutApp",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSyncNotificationEnabledWithoutApp",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBadgeNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "badgeNumber",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBadgeNumber",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "badgeNumber",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBadgeNumberByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "badgeNumber",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "triggerSystemLiveView",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "notificationId",
                        "type": "number"
                    },
                    {
                        "name": "buttonOptions",
                        "type": "ButtonOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeSystemLiveView",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "SystemLiveViewSubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSlotFlagsByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "slotFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotFlagsByBundle",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDoNotDisturbProfile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "templates",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDoNotDisturbProfile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "templates",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAdditionalConfig",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openNotificationSettings",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIAbilityContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbProfile",
                "return_type": "Promise<DoNotDisturbProfile>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.security.securityGuard": {
        "dependencies": [],
        "interfaces": {
            "SecurityEvent": [],
            "SecurityEventRule": [],
            "Querier": [],
            "CollectorRule": [],
            "ModelRule": [],
            "ModelResult": [],
            "SecurityEventInfo": [],
            "PolicyFile": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "reportSecurityEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "securityEvent",
                        "type": "SecurityEvent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "querySecurityEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rules",
                        "type": "Array"
                    },
                    {
                        "name": "querier",
                        "type": "Querier"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startSecurityEventCollector",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "CollectorRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopSecurityEventCollector",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "CollectorRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getModelResult",
                "return_type": "Promise<ModelResult>",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "ModelRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "securityEventInfo",
                        "type": "SecurityEventInfo"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "securityEventInfo",
                        "type": "SecurityEventInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePolicyFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "policyFile",
                        "type": "PolicyFile"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.telephony.observer": {
        "dependencies": [
            {
                "module": "@ohos.telephony.radio",
                "imported_as": "type radio"
            },
            {
                "module": "@ohos.telephony.data",
                "imported_as": "type data"
            },
            {
                "module": "@ohos.telephony.call",
                "imported_as": "type call"
            },
            {
                "module": "@ohos.telephony.sim",
                "imported_as": "type sim"
            }
        ],
        "interfaces": {
            "SimStateData": [],
            "CallStateInfo": [],
            "DataConnectionStateInfo": [],
            "ObserverOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ObserverOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.form.formInfo": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "FormInfo": [],
            "FormStateInfo": [],
            "FormInfoFilter": [],
            "PublishFormResult": [],
            "FormProviderFilter": [],
            "RunningFormInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "@ohos.request": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "BaseContext"
            }
        ],
        "interfaces": {
            "DownloadConfig": [],
            "DownloadInfo": [],
            "DownloadTask": [],
            "File": [],
            "RequestData": [],
            "UploadConfig": [],
            "TaskState": [],
            "UploadTask": [],
            "FileSpec": [],
            "FormItem": [],
            "Config": [],
            "Progress": [],
            "Filter": [],
            "TaskInfo": [],
            "HttpResponse": [],
            "Task": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "download",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "DownloadConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "downloadFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "BaseContext"
                    },
                    {
                        "name": "config",
                        "type": "DownloadConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "download",
                "return_type": "Promise<DownloadTask>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "DownloadConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "downloadFile",
                "return_type": "Promise<DownloadTask>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "BaseContext"
                    },
                    {
                        "name": "config",
                        "type": "DownloadConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "upload",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "UploadConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uploadFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "BaseContext"
                    },
                    {
                        "name": "config",
                        "type": "UploadConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "upload",
                "return_type": "Promise<UploadTask>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "UploadConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uploadFile",
                "return_type": "Promise<UploadTask>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "BaseContext"
                    },
                    {
                        "name": "config",
                        "type": "UploadConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "BaseContext"
                    },
                    {
                        "name": "config",
                        "type": "Config"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Promise<Task>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "BaseContext"
                    },
                    {
                        "name": "config",
                        "type": "Config"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTask",
                "return_type": "Promise<Task>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "BaseContext"
                    },
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "show",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "show",
                "return_type": "Promise<TaskInfo>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "touch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "touch",
                "return_type": "Promise<TaskInfo>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "token",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "search",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "search",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "Filter"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "search",
                "return_type": "Promise<Array<string>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "query",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "query",
                "return_type": "Promise<TaskInfo>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.wantAgent": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.wantAgent.wantAgentInfo",
                "imported_as": "WantAgentInfo"
            },
            {
                "module": "@ohos.wantAgent.triggerInfo",
                "imported_as": "TriggerInfo"
            }
        ],
        "interfaces": {
            "CompleteData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleName",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUid",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWant",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWant",
                "return_type": "Promise<Want>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "trigger",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "triggerInfo",
                        "type": "TriggerInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "equal",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "otherAgent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "equal",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "agent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "otherAgent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWantAgent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "WantAgentInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWantAgent",
                "return_type": "Promise<WantAgent>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "WantAgentInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.fs": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.util.stream",
                "imported_as": "stream"
            }
        ],
        "interfaces": {
            "Progress": [],
            "CopyOptions": [],
            "File": [],
            "RandomAccessFile": [],
            "Stat": [],
            "Stream": [],
            "WatchEventListener": [],
            "WatchEvent": [],
            "Watcher": [],
            "ReaderIteratorResult": [],
            "ReaderIterator": [],
            "Filter": [],
            "ConflictFiles": [],
            "Options": [],
            "ReadOptions": [],
            "ListFileOptions": [],
            "RandomAccessFileOptions": [],
            "ReadStreamOptions": [],
            "WriteStreamOptions": [],
            "DfsListeners": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "access",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "access",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "access",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "AccessModeType"
                    },
                    {
                        "name": "flag",
                        "type": "AccessFlagType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "accessSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "accessSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "AccessModeType"
                    },
                    {
                        "name": "flag",
                        "type": "AccessFlagType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "close",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "file",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "close",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "srcUri",
                        "type": "string"
                    },
                    {
                        "name": "destUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "srcUri",
                        "type": "string"
                    },
                    {
                        "name": "destUri",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "srcUri",
                        "type": "string"
                    },
                    {
                        "name": "destUri",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "CopyOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyDir",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyDirSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copyFileSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createStream",
                "return_type": "Promise<Stream>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createStream",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createStreamSync",
                "return_type": "Stream",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRandomAccessFile",
                "return_type": "Promise<RandomAccessFile>",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRandomAccessFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRandomAccessFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRandomAccessFileSync",
                "return_type": "RandomAccessFile",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createReadStream",
                "return_type": "ReadStream",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWriteStream",
                "return_type": "WriteStream",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWatcher",
                "return_type": "Watcher",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "events",
                        "type": "number"
                    },
                    {
                        "name": "listener",
                        "type": "WatchEventListener"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dup",
                "return_type": "File",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdatasync",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdatasync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdatasyncSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdopenStream",
                "return_type": "Promise<Stream>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdopenStream",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fdopenStreamSync",
                "return_type": "Stream",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fsync",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fsync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fsyncSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "listFile",
                "return_type": "Promise<string",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "listFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "listFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "ListFileOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "listFileSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lseek",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "offset",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lstat",
                "return_type": "Promise<Stat>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lstat",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lstatSync",
                "return_type": "Stat",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "recursion",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "recursion",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdirSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdirSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "recursion",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdtemp",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "prefix",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdtemp",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "prefix",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdtempSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "prefix",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveDir",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveDir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveDirSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveFile",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveFileSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "string"
                    },
                    {
                        "name": "dest",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "open",
                "return_type": "Promise<File>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "open",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "open",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openSync",
                "return_type": "File",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "options",
                        "type": "ReadOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readLines",
                "return_type": "Promise<ReaderIterator>",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readLines",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readLines",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readLinesSync",
                "return_type": "ReaderIterator",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readText",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readText",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readText",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "ReadTextOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readTextSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rename",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "oldPath",
                        "type": "string"
                    },
                    {
                        "name": "newPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rename",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "oldPath",
                        "type": "string"
                    },
                    {
                        "name": "newPath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "renameSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "oldPath",
                        "type": "string"
                    },
                    {
                        "name": "newPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rmdir",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rmdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rmdirSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stat",
                "return_type": "Promise<Stat>",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stat",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "statSync",
                "return_type": "Stat",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "symlink",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "name": "srcPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "symlink",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "name": "srcPath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "symlinkSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "target",
                        "type": "string"
                    },
                    {
                        "name": "srcPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    },
                    {
                        "name": "len",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "truncateSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "file",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlink",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlink",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlinkSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "utimes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "mtime",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "options",
                        "type": "WriteOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "writeSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectDfs",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    },
                    {
                        "name": "listeners",
                        "type": "DfsListeners"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectDfs",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setxattr",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setxattrSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getxattr",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getxattrSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "RandomAccessFile",
                "extends": null
            },
            {
                "class": "RandomAccessFile",
                "extends": null
            },
            {
                "class": "RandomAccessFile",
                "extends": null
            },
            {
                "class": "RandomAccessFile",
                "extends": null
            },
            {
                "class": "RandomAccessFile",
                "extends": null
            },
            {
                "class": "RandomAccessFile",
                "extends": null
            },
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "Stream",
                "extends": null
            },
            {
                "class": "TaskSignal",
                "extends": null
            },
            {
                "class": "ReadStream",
                "extends": "stream"
            },
            {
                "class": "WriteStream",
                "extends": "stream"
            }
        ]
    },
    "@ohos.application.appManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.ApplicationStateObserver",
                "imported_as": "ApplicationStateObserver"
            },
            {
                "module": "@ohos.application.AbilityStateData",
                "imported_as": "AbilityStateData"
            },
            {
                "module": "@ohos.application.AppStateData",
                "imported_as": "AppStateData"
            },
            {
                "module": "@ohos.application.ProcessRunningInfo",
                "imported_as": "ProcessRunningInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "registerApplicationStateObserver",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "ApplicationStateObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterApplicationStateObserver",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterApplicationStateObserver",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "observerId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getForegroundApplications",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getForegroundApplications",
                "return_type": "Promise<Array<AppStateData>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessWithAccount",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessWithAccount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRunningInStabilityTest",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRunningInStabilityTest",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProcessRunningInfos",
                "return_type": "Promise<Array<ProcessRunningInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProcessRunningInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessesByBundleName",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearUpApplicationData",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRamConstrainedDevice",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRamConstrainedDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppMemorySize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppMemorySize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.sensor": {
        "dependencies": [],
        "interfaces": {
            "AccelerometerResponse": [],
            "subscribeAccelerometerOptions": [],
            "CompassResponse": [],
            "SubscribeCompassOptions": [],
            "ProximityResponse": [],
            "SubscribeProximityOptions": [],
            "LightResponse": [],
            "SubscribeLightOptions": [],
            "StepCounterResponse": [],
            "SubscribeStepCounterOptions": [],
            "BarometerResponse": [],
            "SubscribeBarometerOptions": [],
            "HeartRateResponse": [],
            "SubscribeHeartRateOptions": [],
            "OnBodyStateResponse": [],
            "SubscribeOnBodyStateOptions": [],
            "GetOnBodyStateOptions": [],
            "DeviceOrientationResponse": [],
            "SubscribeDeviceOrientationOptions": [],
            "GyroscopeResponse": [],
            "SubscribeGyroscopeOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "subscribeAccelerometer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "subscribeAccelerometerOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeAccelerometer",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeCompass",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeCompassOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeCompass",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeProximity",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeProximityOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeProximity",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeLight",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeLightOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeLight",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeStepCounter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeStepCounterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeStepCounter",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeBarometer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeBarometerOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeBarometer",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeHeartRate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeHeartRateOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeHeartRate",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeOnBodyState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeOnBodyStateOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeOnBodyState",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOnBodyState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "GetOnBodyStateOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeDeviceOrientation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeDeviceOrientationOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeDeviceOrientation",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeGyroscope",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeGyroscopeOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeGyroscope",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Sensor",
                "extends": null
            }
        ]
    },
    "@ohos.ability.ability": {
        "dependencies": [
            {
                "module": "@ohos.ability.dataAbilityHelper",
                "imported_as": "DataAbilityHelper as _DataAbilityHelper"
            },
            {
                "module": "@ohos.ability.dataAbilityHelper",
                "imported_as": "PacMap as _PacMap"
            },
            {
                "module": "@ohos.ability.dataAbilityOperation",
                "imported_as": "DataAbilityOperation as _DataAbilityOperation"
            },
            {
                "module": "@ohos.ability.dataAbilityResult",
                "imported_as": "DataAbilityResult as _DataAbilityResult"
            },
            {
                "module": "@ohos.ability.abilityResult",
                "imported_as": "AbilityResult as _AbilityResult"
            },
            {
                "module": "@ohos.ability.connectOptions",
                "imported_as": "ConnectOptions as _ConnectOptions"
            },
            {
                "module": "@ohos.ability.startAbilityParameter",
                "imported_as": "StartAbilityParameter as _StartAbilityParameter"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.file.photoAccessHelper": {
        "dependencies": [
            {
                "module": "@ohos.application.Context",
                "imported_as": "type Context"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "type image"
            },
            {
                "module": "@ohos.data.dataSharePredicates",
                "imported_as": "type dataSharePredicates"
            }
        ],
        "interfaces": {
            "MediaAssetProgressHandler": [],
            "RequestOptions": [],
            "PhotoProxy": [],
            "PhotoAsset": [],
            "FetchOptions": [],
            "PhotoCreateOptions": [],
            "PhotoCreationConfig": [],
            "CreateOptions": [],
            "RequestPhotoOptions": [],
            "AbsAlbum": [],
            "PhotoAccessHelper": [],
            "FormInfo": [],
            "ChangeData": [],
            "TextContextInfo": [],
            "MediaChangeRequest": [],
            "SharedPhotoAsset": [],
            "SharedAlbumAsset": [],
            "MovingPhoto": [],
            "CloudEnhancementTaskState": [],
            "CloudMediaAssetStatus": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getPhotoAccessHelper",
                "return_type": "PhotoAccessHelper",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestImage",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "asset",
                        "type": "PhotoAsset"
                    },
                    {
                        "name": "requestOptions",
                        "type": "RequestOptions"
                    },
                    {
                        "name": "dataHandler",
                        "type": "MediaAssetDataHandler"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "quickRequestImage",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "asset",
                        "type": "PhotoAsset"
                    },
                    {
                        "name": "requestOptions",
                        "type": "RequestOptions"
                    },
                    {
                        "name": "dataHandler",
                        "type": "QuickImageDataHandler"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestImageData",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "asset",
                        "type": "PhotoAsset"
                    },
                    {
                        "name": "requestOptions",
                        "type": "RequestOptions"
                    },
                    {
                        "name": "dataHandler",
                        "type": "MediaAssetDataHandler"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestMovingPhoto",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "asset",
                        "type": "PhotoAsset"
                    },
                    {
                        "name": "requestOptions",
                        "type": "RequestOptions"
                    },
                    {
                        "name": "dataHandler",
                        "type": "MediaAssetDataHandler"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelRequest",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "requestId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestVideoFile",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "asset",
                        "type": "PhotoAsset"
                    },
                    {
                        "name": "requestOptions",
                        "type": "RequestOptions"
                    },
                    {
                        "name": "fileUri",
                        "type": "string"
                    },
                    {
                        "name": "dataHandler",
                        "type": "MediaAssetDataHandler"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadMovingPhoto",
                "return_type": "Promise<MovingPhoto>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "imageFileUri",
                        "type": "string"
                    },
                    {
                        "name": "videoFileUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageAssetRequest",
                "return_type": "MediaAssetChangeRequest",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "fileUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVideoAssetRequest",
                "return_type": "MediaAssetChangeRequest",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "fileUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAssetRequest",
                "return_type": "MediaAssetChangeRequest",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "displayName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAssetRequest",
                "return_type": "MediaAssetChangeRequest",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "photoType",
                        "type": "PhotoType"
                    },
                    {
                        "name": "extension",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteAssets",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "assets",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteAssets",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "uriList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAlbumRequest",
                "return_type": "MediaAlbumChangeRequest",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteAlbums",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "albums",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCloudEnhancementInstance",
                "return_type": "CloudEnhancement",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCloudMediaAssetManagerInstance",
                "return_type": "CloudMediaAssetManager",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "MediaAssetManager",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "BaseSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectOptions",
                "extends": "BaseSelectOptions"
            },
            {
                "class": "RecommendationOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectResult",
                "extends": null
            },
            {
                "class": "PhotoViewPicker",
                "extends": null
            },
            {
                "class": "MediaAssetEditData",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "MediaAssetChangeRequest",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "MediaAssetsChangeRequest",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "MediaAlbumChangeRequest",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "HighlightAlbum",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "CloudEnhancement",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "CloudMediaAssetManager",
                "extends": null
            }
        ]
    },
    "@ohos.faultLogger": {
        "dependencies": [],
        "interfaces": {
            "FaultLogInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "querySelfFaultLog",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "faultType",
                        "type": "FaultType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "querySelfFaultLog",
                "return_type": "Promise<Array<FaultLogInfo>>",
                "parameters": [
                    {
                        "name": "faultType",
                        "type": "FaultType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "query",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "faultType",
                        "type": "FaultType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "query",
                "return_type": "Promise<Array<FaultLogInfo>>",
                "parameters": [
                    {
                        "name": "faultType",
                        "type": "FaultType"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.accountManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.account.osAccount",
                "imported_as": "type osAccount"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "disallowAddLocalAccount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disallowAddLocalAccount",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disallowAddOsAccountByUser",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAddOsAccountByUserDisallowed",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addOsAccount",
                "return_type": "osAccount",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "osAccount"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disallowOsAccountAddition",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOsAccountAdditionDisallowed",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addOsAccountAsync",
                "return_type": "Promise<osAccount",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "osAccount"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.application": {
        "dependencies": [
            {
                "module": "@ohos.application.ApplicationContext",
                "imported_as": "ApplicationContext"
            },
            {
                "module": "@ohos.application.Context",
                "imported_as": "Context"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createModuleContext",
                "return_type": "Promise<Context>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createModuleContext",
                "return_type": "Promise<Context>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createBundleContext",
                "return_type": "Promise<Context>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationContext",
                "return_type": "ApplicationContext",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetooth.connection": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.constant",
                "imported_as": "type constant"
            }
        ],
        "interfaces": {
            "BondStateParam": [],
            "PinRequiredParam": [],
            "DeviceClass": [],
            "DiscoveryResult": [],
            "BatteryInfo": [],
            "ControlDeviceActionParams": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getProfileConnectionState",
                "return_type": "ProfileConnectionState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pairDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pairDevice",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pairCredibleDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "transport",
                        "type": "BluetoothTransport"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pairCredibleDevice",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "transport",
                        "type": "BluetoothTransport"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPairedDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPairedDevice",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPairingDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPairingDevice",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceName",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceClass",
                "return_type": "DeviceClass",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalName",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPairedDevices",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPairState",
                "return_type": "BondState",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDevicePairingConfirmation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "accept",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDevicePinCode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDevicePinCode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setLocalName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBluetoothScanMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "ScanMode"
                    },
                    {
                        "name": "duration",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBluetoothScanMode",
                "return_type": "ScanMode",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBluetoothDiscovery",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBluetoothDiscovery",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBluetoothDiscovering",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalProfileUuids",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalProfileUuids",
                "return_type": "Promise<Array<ProfileUuids>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteProfileUuids",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteProfileUuids",
                "return_type": "Promise<Array<ProfileUuids>>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectAllowedProfiles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectAllowedProfiles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectAllowedProfiles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceBatteryInfo",
                "return_type": "Promise<BatteryInfo>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteProductId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectAllowedProfiles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRemoteDeviceName",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRemoteDeviceType",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "DeviceType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceType",
                "return_type": "Promise<DeviceType>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "controlDeviceAction",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "controlDeviceActionParams",
                        "type": "ControlDeviceActionParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.arkui.theme": {
        "dependencies": [],
        "interfaces": {
            "Theme": [],
            "Colors": [],
            "CustomTheme": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setDefaultTheme",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "theme",
                        "type": "CustomTheme"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "ThemeControl",
                "extends": null
            }
        ]
    },
    "@ohos.bluetooth.ble": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.constant",
                "imported_as": "type constant"
            }
        ],
        "interfaces": {
            "GattServer": [],
            "GattClientDevice": [],
            "GattService": [],
            "BLECharacteristic": [],
            "BLEDescriptor": [],
            "NotifyCharacteristic": [],
            "CharacteristicReadRequest": [],
            "CharacteristicWriteRequest": [],
            "DescriptorReadRequest": [],
            "DescriptorWriteRequest": [],
            "ServerResponse": [],
            "BLEConnectionChangeState": [],
            "ScanResult": [],
            "AdvertiseSetting": [],
            "AdvertiseData": [],
            "AdvertisingParams": [],
            "AdvertisingEnableParams": [],
            "AdvertisingDisableParams": [],
            "AdvertisingStateChangeInfo": [],
            "ManufactureData": [],
            "ServiceData": [],
            "ScanFilter": [],
            "ScanOptions": [],
            "GattProperties": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createGattServer",
                "return_type": "GattServer",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGattClientDevice",
                "return_type": "GattClientDevice",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getConnectedBLEDevices",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBLEScan",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filters",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBLEScan",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAdvertising",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "setting",
                        "type": "AdvertiseSetting"
                    },
                    {
                        "name": "advData",
                        "type": "AdvertiseData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopAdvertising",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAdvertising",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "advertisingParams",
                        "type": "AdvertisingParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAdvertising",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "advertisingParams",
                        "type": "AdvertisingParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAdvertising",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "advertisingEnableParams",
                        "type": "AdvertisingEnableParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAdvertising",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "advertisingEnableParams",
                        "type": "AdvertisingEnableParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAdvertising",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "advertisingDisableParams",
                        "type": "AdvertisingDisableParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAdvertising",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "advertisingDisableParams",
                        "type": "AdvertisingDisableParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopAdvertising",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "advertisingId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopAdvertising",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "advertisingId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.componentSnapshot": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "SnapshotOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "Promise<image",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createFromBuilder",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "builder",
                        "type": "CustomBuilder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createFromBuilder",
                "return_type": "Promise<image",
                "parameters": [
                    {
                        "name": "builder",
                        "type": "CustomBuilder"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSync",
                "return_type": "image",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimedia.avsession": {
        "dependencies": [
            {
                "module": "@ohos.wantAgent",
                "imported_as": "WantAgent"
            },
            {
                "module": "@ohos.multimodalInput.keyEvent",
                "imported_as": "KeyEvent"
            },
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.multimedia.audio",
                "imported_as": "audio"
            },
            {
                "module": "@ohos.multimedia.media",
                "imported_as": "type media"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type Context"
            }
        ],
        "interfaces": {
            "SessionToken": [],
            "AVSession": [],
            "AVCastControlCommand": [],
            "AVCastController": [],
            "AVCastPickerOptions": [],
            "CastDisplayInfo": [],
            "AVQueueInfo": [],
            "AVMetadata": [],
            "AVMediaDescription": [],
            "AVQueueItem": [],
            "AVPlaybackState": [],
            "PlaybackPosition": [],
            "CallMetadata": [],
            "AVCallState": [],
            "DeviceInfo": [],
            "OutputDeviceInfo": [],
            "AVSessionDescriptor": [],
            "AVSessionController": [],
            "AVControlCommand": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createAVSession",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "AVSessionType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVSession",
                "return_type": "Promise<AVSession>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "AVSessionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSessionDescriptors",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSessionDescriptors",
                "return_type": "Promise<Array<Readonly<AVSessionDescriptor>>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHistoricalSessionDescriptors",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "maxSize",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHistoricalSessionDescriptors",
                "return_type": "Promise<Array<Readonly<AVSessionDescriptor>>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHistoricalAVQueueInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "maxSize",
                        "type": "number"
                    },
                    {
                        "name": "maxAppSize",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHistoricalAVQueueInfos",
                "return_type": "Promise<Array<Readonly<AVQueueInfo>>>",
                "parameters": [
                    {
                        "name": "maxSize",
                        "type": "number"
                    },
                    {
                        "name": "maxAppSize",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createController",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sessionId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createController",
                "return_type": "Promise<AVSessionController>",
                "parameters": [
                    {
                        "name": "sessionId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "castAudio",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "session",
                        "type": "SessionToken"
                    },
                    {
                        "name": "audioDevices",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "castAudio",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "session",
                        "type": "SessionToken"
                    },
                    {
                        "name": "audioDevices",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAVPlayback",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "assetId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendSystemAVKeyEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "KeyEvent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendSystemAVKeyEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "event",
                        "type": "KeyEvent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendSystemControlCommand",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "command",
                        "type": "AVControlCommand"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendSystemControlCommand",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "command",
                        "type": "AVControlCommand"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startCastDeviceDiscovery",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startCastDeviceDiscovery",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startCastDeviceDiscovery",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopCastDeviceDiscovery",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopCastDeviceDiscovery",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDiscoverable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDiscoverable",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAVCastController",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sessionId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAVCastController",
                "return_type": "Promise<AVCastController>",
                "parameters": [
                    {
                        "name": "sessionId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startCasting",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "session",
                        "type": "SessionToken"
                    },
                    {
                        "name": "device",
                        "type": "OutputDeviceInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startCasting",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "session",
                        "type": "SessionToken"
                    },
                    {
                        "name": "device",
                        "type": "OutputDeviceInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopCasting",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "session",
                        "type": "SessionToken"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopCasting",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "session",
                        "type": "SessionToken"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDeviceLogging",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDeviceLogging",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "AVCastPickerHelper",
                "extends": null
            }
        ]
    },
    "@ohos.batteryInfo": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setBatteryConfig",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "sceneName",
                        "type": "string"
                    },
                    {
                        "name": "sceneValue",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBatteryConfig",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "sceneName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBatteryConfigSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "sceneName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.trash": {
        "dependencies": [],
        "interfaces": {
            "FileInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "listFile",
                "return_type": "Array<FileInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "recover",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "completelyDelete",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetooth.constant": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.net.networkSecurity": {
        "dependencies": [],
        "interfaces": {
            "CertBlob": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "certVerification",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "cert",
                        "type": "CertBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "certVerificationSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "cert",
                        "type": "CertBlob"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimedia.systemSoundManager": {
        "dependencies": [
            {
                "module": "@ohos.application.Context",
                "imported_as": "type Context"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type BaseContext"
            }
        ],
        "interfaces": {
            "ToneAttrs": [],
            "ToneHapticsSettings": [],
            "ToneHapticsAttrs": [],
            "SystemSoundManager": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createCustomizedToneAttrs",
                "return_type": "ToneAttrs",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemSoundManager",
                "return_type": "SystemSoundManager",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.screen": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "MultiScreenPositionOptions": [],
            "ExpandOption": [],
            "VirtualScreenOption": [],
            "Screen": [],
            "ScreenModeInfo": [],
            "Rect": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAllScreens",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllScreens",
                "return_type": "Promise<Array<Screen>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeExpand",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeExpand",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopExpand",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "expandScreen",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopExpand",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "expandScreen",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeMirror",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mainScreen",
                        "type": "number"
                    },
                    {
                        "name": "mirrorScreen",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeMirror",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "mainScreen",
                        "type": "number"
                    },
                    {
                        "name": "mirrorScreen",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeMirrorWithRegion",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "mainScreen",
                        "type": "number"
                    },
                    {
                        "name": "mirrorScreen",
                        "type": "Array"
                    },
                    {
                        "name": "mainScreenRegion",
                        "type": "Rect"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopMirror",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mirrorScreen",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopMirror",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "mirrorScreen",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVirtualScreen",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "VirtualScreenOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVirtualScreen",
                "return_type": "Promise<Screen>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "VirtualScreenOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "destroyVirtualScreen",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "screenId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "destroyVirtualScreen",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "screenId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVirtualScreenSurface",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "screenId",
                        "type": "number"
                    },
                    {
                        "name": "surfaceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVirtualScreenSurface",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "screenId",
                        "type": "number"
                    },
                    {
                        "name": "surfaceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isScreenRotationLocked",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isScreenRotationLocked",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setScreenRotationLocked",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isLocked",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setScreenRotationLocked",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "isLocked",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMultiScreenMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "primaryScreenId",
                        "type": "number"
                    },
                    {
                        "name": "secondaryScreenId",
                        "type": "number"
                    },
                    {
                        "name": "secondaryScreenMode",
                        "type": "MultiScreenMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMultiScreenRelativePosition",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "mainScreenOptions",
                        "type": "MultiScreenPositionOptions"
                    },
                    {
                        "name": "secondaryScreenOptions",
                        "type": "MultiScreenPositionOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.appManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.ProcessInformation",
                "imported_as": "ProcessInformation as _ProcessInformation"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            },
            {
                "module": "@ohos.application.RunningMultiAppInfo",
                "imported_as": "RunningMultiAppInfo as _RunningMultiAppInfo"
            }
        ],
        "interfaces": {
            "KeepAliveBundleInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "ApplicationStateObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "ApplicationStateObserver"
                    },
                    {
                        "name": "bundleNameList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "AppForegroundStateObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "AbilityFirstFrameStateObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "observerId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getForegroundApplications",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getForegroundApplications",
                "return_type": "Promise<Array<AppStateData>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessWithAccount",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessWithAccount",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    },
                    {
                        "name": "clearPageStack",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessWithAccount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRunningInStabilityTest",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRunningInStabilityTest",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessesByBundleName",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessesByBundleName",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "clearPageStack",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearUpApplicationData",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRamConstrainedDevice",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRamConstrainedDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppMemorySize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppMemorySize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningProcessInformation",
                "return_type": "Promise<Array<ProcessInformation>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningProcessInformationByBundleType",
                "return_type": "Promise<Array<ProcessInformation>>",
                "parameters": [
                    {
                        "name": "bundleType",
                        "type": "bundleManager"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningProcessInformation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSharedBundleRunning",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "versionCode",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSharedBundleRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "versionCode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProcessMemoryByPid",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "pid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProcessMemoryByPid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "pid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningProcessInfoByBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningProcessInfoByBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningProcessInfoByBundleName",
                "return_type": "Promise<Array<ProcessInformation>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningProcessInfoByBundleName",
                "return_type": "Promise<Array<ProcessInformation>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationRunning",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "preloadApplication",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "PreloadMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningMultiAppInfo",
                "return_type": "Promise<RunningMultiAppInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAppRunning",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearUpAppData",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedProcessCachePids",
                "return_type": "Promise<Array<number>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setKeepAliveForBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeepAliveBundles",
                "return_type": "Promise<Array<KeepAliveBundleInfo>>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "KeepAliveAppType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "killProcessesInBatch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "pids",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.deviceStatus.dragInteraction": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "Summary": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDataSummary",
                "return_type": "Array<Summary>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDragSwitchState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppDragSwitchState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enabled",
                        "type": "boolean"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.formInfo": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "FormInfo": [],
            "FormStateInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "@ohos.util.LinkedList": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "LinkedList",
                "extends": null
            }
        ]
    },
    "@ohos.enterprise.browser": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setPolicies",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "policies",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPolicies",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "policies",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPolicies",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPolicies",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPolicySync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "policyName",
                        "type": "string"
                    },
                    {
                        "name": "policyValue",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPoliciesSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.account.appAccount": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.rpc",
                "imported_as": "type rpc"
            }
        ],
        "interfaces": {
            "AppAccountManager": [],
            "AppAccountInfo": [],
            "OAuthTokenInfo": [],
            "AuthTokenInfo": [],
            "AuthenticatorInfo": [],
            "AuthResult": [],
            "CreateAccountOptions": [],
            "CreateAccountImplicitlyOptions": [],
            "SelectAccountsOptions": [],
            "VerifyCredentialOptions": [],
            "SetPropertiesOptions": [],
            "AuthenticatorCallback": [],
            "AuthCallback": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createAppAccountManager",
                "return_type": "AppAccountManager",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Authenticator",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.EnvironmentCallback": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.AbilityConstant",
                "imported_as": "AbilityConstant"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "EnvironmentCallback",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.AbilityLifecycleCallback": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIAbility",
                "imported_as": "UIAbility"
            },
            {
                "module": "@ohos.data.dataAbility",
                "imported_as": "dataAbility"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AbilityLifecycleCallback",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.EmbeddableUIAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIAbility",
                "imported_as": "UIAbility"
            },
            {
                "module": "@ohos.application.EmbeddableUIAbilityContext",
                "imported_as": "type EmbeddableUIAbilityContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "EmbeddableUIAbility",
                "extends": "UIAbility"
            }
        ]
    },
    "@ohos.distributedBundle": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundle.elementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.bundle.remoteAbilityInfo",
                "imported_as": "RemoteAbilityInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "Promise<RemoteAbilityInfo>",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementNames",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfos",
                "return_type": "Promise<Array<RemoteAbilityInfo>>",
                "parameters": [
                    {
                        "name": "elementNames",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.systemDateTime": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "time",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTime",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "time",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isNano",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentTime",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTime",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealActiveTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isNano",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealActiveTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealActiveTime",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isNano",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealTime",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUptime",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "timeType",
                        "type": "TimeType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "date",
                        "type": "Date"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "date",
                        "type": "Date"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDate",
                "return_type": "Promise<Date>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTimezone",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timezone",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTimezone",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "timezone",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimezone",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimezone",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimezoneSync",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateNtpTime",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNtpTime",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.InsightIntentContext": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "InsightIntentContext",
                "extends": null
            }
        ]
    },
    "@ohos.nfc.controller": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "isNfcAvailable",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openNfc",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableNfc",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeNfc",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableNfc",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNfcOpen",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcState",
                "return_type": "NfcState",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.net.connection": {
        "dependencies": [
            {
                "module": "@ohos.net.http",
                "imported_as": "type http"
            },
            {
                "module": "@ohos.net.socket",
                "imported_as": "type socket"
            }
        ],
        "interfaces": {
            "NetConnection": [],
            "NetSpecifier": [],
            "NetCapabilityInfo": [],
            "NetHandle": [],
            "NetCapabilities": [],
            "NetConnectionPropertyInfo": [],
            "NetBlockStatusInfo": [],
            "ConnectionProperties": [],
            "RouteInfo": [],
            "LinkAddress": [],
            "NetAddress": [],
            "HttpProxy": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createNetConnection",
                "return_type": "NetConnection",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultNet",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultNet",
                "return_type": "Promise<NetHandle>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultNetSync",
                "return_type": "NetHandle",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllNets",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllNets",
                "return_type": "Promise<Array<NetHandle>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllNetsSync",
                "return_type": "Array<NetHandle>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getConnectionProperties",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getConnectionProperties",
                "return_type": "Promise<ConnectionProperties>",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getConnectionPropertiesSync",
                "return_type": "ConnectionProperties",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetCapabilities",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetCapabilities",
                "return_type": "Promise<NetCapabilities>",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetCapabilitiesSync",
                "return_type": "NetCapabilities",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDefaultNetMetered",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDefaultNetMetered",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDefaultNetMeteredSync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasDefaultNet",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasDefaultNet",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasDefaultNetSync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAirplaneMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAirplaneMode",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAirplaneMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAirplaneMode",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reportNetConnected",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reportNetConnected",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reportNetDisconnected",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reportNetDisconnected",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesByName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesByName",
                "return_type": "Promise<Array<NetAddress>>",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppNet",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppNet",
                "return_type": "Promise<NetHandle>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppNetSync",
                "return_type": "NetHandle",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppNet",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppNet",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "netHandle",
                        "type": "NetHandle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultHttpProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultHttpProxy",
                "return_type": "Promise<HttpProxy>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGlobalHttpProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGlobalHttpProxy",
                "return_type": "Promise<HttpProxy>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppHttpProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "httpProxy",
                        "type": "HttpProxy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGlobalHttpProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "httpProxy",
                        "type": "HttpProxy"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGlobalHttpProxy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "httpProxy",
                        "type": "HttpProxy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addCustomDnsRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addCustomDnsRule",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeCustomDnsRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeCustomDnsRule",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "host",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearCustomDnsRules",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearCustomDnsRules",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "factoryReset",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.notification": {
        "dependencies": [],
        "interfaces": {
            "ActionResult": [],
            "ShowNotificationOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "show",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Notification",
                "extends": null
            }
        ]
    },
    "@ohos.resourceschedule.usageStatistics": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "BundleStatsInfo": [],
            "HapFormInfo": [],
            "HapModuleInfo": [],
            "DeviceEventStats": [],
            "BundleEvents": [],
            "AppGroupCallbackInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isIdleState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isIdleState",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isIdleStateSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppGroup",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppGroupSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppGroup",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAppGroupSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStatsInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStatsInfos",
                "return_type": "Promise<BundleStatsMap>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStatsInfoByInterval",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "byInterval",
                        "type": "IntervalType"
                    },
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleStatsInfoByInterval",
                "return_type": "Promise<Array<BundleStatsInfo>>",
                "parameters": [
                    {
                        "name": "byInterval",
                        "type": "IntervalType"
                    },
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleEvents",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBundleEvents",
                "return_type": "Promise<Array<BundleEvents>>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryCurrentBundleEvents",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryCurrentBundleEvents",
                "return_type": "Promise<Array<BundleEvents>>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryModuleUsageRecords",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "maxNum",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryModuleUsageRecords",
                "return_type": "Promise<Array<HapModuleInfo>>",
                "parameters": [
                    {
                        "name": "maxNum",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryModuleUsageRecords",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryModuleUsageRecords",
                "return_type": "Promise<Array<HapModuleInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "newGroup",
                        "type": "GroupType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppGroup",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "newGroup",
                        "type": "GroupType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerAppGroupCallBack",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "groupCallback",
                        "type": "Callback"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerAppGroupCallBack",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "groupCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterAppGroupCallBack",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterAppGroupCallBack",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryDeviceEventStats",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryDeviceEventStats",
                "return_type": "Promise<Array<DeviceEventStats>>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryNotificationEventStats",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryNotificationEventStats",
                "return_type": "Promise<Array<DeviceEventStats>>",
                "parameters": [
                    {
                        "name": "begin",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "@ohos.ability.screenLockFileManager": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "acquireAccess",
                "return_type": "AccessStatus",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireAccess",
                "return_type": "AccessStatus",
                "parameters": [
                    {
                        "name": "dataType",
                        "type": "DataType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseAccess",
                "return_type": "ReleaseStatus",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseAccess",
                "return_type": "ReleaseStatus",
                "parameters": [
                    {
                        "name": "dataType",
                        "type": "DataType"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.uiExtension": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {
            "WindowProxy": [],
            "AvoidAreaInfo": [],
            "WindowProxyProperties": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.security.certManagerDialog": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.common",
                "imported_as": "type common"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "openCertificateManagerDialog",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "common"
                    },
                    {
                        "name": "pageType",
                        "type": "CertificateDialogPageType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openInstallCertificateDialog",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "common"
                    },
                    {
                        "name": "certType",
                        "type": "CertificateType"
                    },
                    {
                        "name": "certScope",
                        "type": "CertificateScope"
                    },
                    {
                        "name": "cert",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.UIAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Ability",
                "imported_as": "Ability"
            },
            {
                "module": "@ohos.app.ability.AbilityConstant",
                "imported_as": "AbilityConstant"
            },
            {
                "module": "@ohos.application.UIAbilityContext",
                "imported_as": "UIAbilityContext"
            },
            {
                "module": "@ohos.rpc",
                "imported_as": "rpc"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {
            "OnReleaseCallback": [],
            "OnRemoteStateChangeCallback": [],
            "CalleeCallback": [],
            "Caller": [],
            "Callee": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "UIAbility",
                "extends": "Ability"
            }
        ]
    },
    "@ohos.util.Stack": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Stack",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.autoStartupManager": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AutoStartupCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationAutoStartup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AutoStartupInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationAutoStartup",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AutoStartupInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelApplicationAutoStartup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AutoStartupInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelApplicationAutoStartup",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AutoStartupInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAllAutoStartupApplications",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAllAutoStartupApplications",
                "return_type": "Promise<Array<AutoStartupInfo>>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.AtomicServiceOptions": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AtomicServiceOptions",
                "extends": "StartOptions"
            }
        ]
    },
    "@ohos.data.dataSharePredicates": {
        "dependencies": [
            {
                "module": "@ohos.data.ValuesBucket",
                "imported_as": "ValueType"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "DataSharePredicates",
                "extends": null
            }
        ]
    },
    "@ohos.rpc": {
        "dependencies": [],
        "interfaces": {
            "Sequenceable": [],
            "Parcelable": [],
            "SendRequestResult": [],
            "RequestResult": [],
            "IRemoteBroker": [],
            "DeathRecipient": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "MessageParcel",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeFileDescriptor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dupFileDescriptor",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "MessageSequence",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeFileDescriptor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dupFileDescriptor",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getContextObject",
                "return_type": "IRemoteObject",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallingPid",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallingUid",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallingTokenId",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallingDeviceID",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalDeviceID",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocalCalling",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "flushCommands",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "object",
                        "type": "IRemoteObject"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "flushCmdBuffer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "object",
                        "type": "IRemoteObject"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetCallingIdentity",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallingIdentity",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "identity",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "restoreCallingIdentity",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "identity",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAshmem",
                "return_type": "Ashmem",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Ashmem",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAshmemFromExisting",
                "return_type": "Ashmem",
                "parameters": [
                    {
                        "name": "ashmem",
                        "type": "Ashmem"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Ashmem",
                "parameters": [
                    {
                        "name": "ashmem",
                        "type": "Ashmem"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "MessageParcel",
                "extends": null
            },
            {
                "class": "MessageSequence",
                "extends": null
            },
            {
                "class": "are",
                "extends": null
            },
            {
                "class": "IRemoteObject",
                "extends": null
            },
            {
                "class": "MessageOption",
                "extends": null
            },
            {
                "class": "RemoteObject",
                "extends": "IRemoteObject"
            },
            {
                "class": "RemoteProxy",
                "extends": "IRemoteObject"
            },
            {
                "class": "IPCSkeleton",
                "extends": null
            },
            {
                "class": "Ashmem",
                "extends": null
            }
        ]
    },
    "@ohos.telephony.data": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getDefaultCellularDataSlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultCellularDataSlotId",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultCellularDataSlotIdSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultCellularDataSlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultCellularDataSlotId",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularDataFlowType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularDataFlowType",
                "return_type": "Promise<DataFlowType>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularDataState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellularDataState",
                "return_type": "Promise<DataConnectState>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCellularDataEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCellularDataEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCellularDataEnabledSync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableCellularData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableCellularData",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCellularData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCellularData",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCellularDataRoamingEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCellularDataRoamingEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCellularDataRoamingEnabledSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableCellularDataRoaming",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableCellularDataRoaming",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCellularDataRoaming",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCellularDataRoaming",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultCellularDataSimId",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.uriPermissionManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.wantConstant",
                "imported_as": "type wantConstant"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "grantUriPermission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "flag",
                        "type": "wantConstant"
                    },
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "grantUriPermission",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "flag",
                        "type": "wantConstant"
                    },
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "grantUriPermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "flag",
                        "type": "wantConstant"
                    },
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    },
                    {
                        "name": "appCloneIndex",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "revokeUriPermission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "revokeUriPermission",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "revokeUriPermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    },
                    {
                        "name": "appCloneIndex",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.relationalStore": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.data.dataSharePredicates",
                "imported_as": "dataSharePredicates"
            },
            {
                "module": "@ohos.data.sendableRelationalStore",
                "imported_as": "sendableRelationalStore"
            }
        ],
        "interfaces": {
            "Asset": [],
            "StoreConfig": [],
            "CryptoParam": [],
            "Statistic": [],
            "TableDetails": [],
            "ProgressDetails": [],
            "SqlExecutionInfo": [],
            "ChangeInfo": [],
            "Reference": [],
            "DistributedConfig": [],
            "TransactionOptions": [],
            "ResultSet": [],
            "RdbStore": [],
            "Transaction": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getRdbStore",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "config",
                        "type": "StoreConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRdbStore",
                "return_type": "Promise<RdbStore>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "config",
                        "type": "StoreConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteRdbStore",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteRdbStore",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "config",
                        "type": "StoreConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteRdbStore",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteRdbStore",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "config",
                        "type": "StoreConfig"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "RdbPredicates",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            }
        ]
    },
    "@ohos.multimodalInput.inputDeviceCooperate": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enable",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "start",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sinkDeviceDescriptor",
                        "type": "string"
                    },
                    {
                        "name": "srcInputDeviceId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "start",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "sinkDeviceDescriptor",
                        "type": "string"
                    },
                    {
                        "name": "srcInputDeviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stop",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stop",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceDescriptor",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    },
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getState",
                "return_type": "Promise<",
                "parameters": [
                    {
                        "name": "deviceDescriptor",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    },
                    {
                        "name": "deviceDescriptor",
                        "type": "string"
                    },
                    {
                        "name": "eventMsg",
                        "type": "EventMsg"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.AbilityConstant": {
        "dependencies": [],
        "interfaces": {
            "LaunchParam": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.data.distributedKVStore": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.data.ValuesBucket",
                "imported_as": "ValuesBucket"
            },
            {
                "module": "@ohos.data.dataSharePredicates",
                "imported_as": "dataSharePredicates"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "BaseContext"
            }
        ],
        "interfaces": {
            "KVManagerConfig": [],
            "Constants": [],
            "Value": [],
            "Entry": [],
            "ChangeNotification": [],
            "Options": [],
            "KVStoreResultSet": [],
            "SingleKVStore": [],
            "KVManager": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createKVManager",
                "return_type": "KVManager",
                "parameters": [
                    {
                        "name": "config",
                        "type": "KVManagerConfig"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Schema",
                "extends": null
            },
            {
                "class": "FieldNode",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "also",
                "extends": null
            },
            {
                "class": "Query",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.ActionExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIExtensionAbility",
                "imported_as": "UIExtensionAbility"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "ActionExtensionAbility",
                "extends": "UIExtensionAbility"
            }
        ]
    },
    "@ohos.hiTraceMeter": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "startTrace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "taskId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finishTrace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "taskId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "traceByValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.cloudData": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.data.relationalStore",
                "imported_as": "type relationalStore"
            },
            {
                "module": "@ohos.data.commonType",
                "imported_as": "commonType"
            }
        ],
        "interfaces": {
            "ExtraData": [],
            "StatisticInfo": [],
            "SyncInfo": [],
            "Privilege": [],
            "Participant": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "enableCloud",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "switches",
                        "type": "Record"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableCloud",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "switches",
                        "type": "Record"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCloud",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCloud",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "changeAppCloudSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "changeAppCloudSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "extInfo",
                        "type": "ExtraData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "extInfo",
                        "type": "ExtraData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "extInfo",
                        "type": "ExtraData"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryStatistics",
                "return_type": "Promise<Record<string",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryLastSyncInfo",
                "return_type": "Promise<Record<string",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clear",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "appActions",
                        "type": "Record"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clear",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "appActions",
                        "type": "Record"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGlobalCloudStrategy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "strategy",
                        "type": "StrategyType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCloudStrategy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "strategy",
                        "type": "StrategyType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "allocResourceAndShare",
                "return_type": "Promise<relationalStore",
                "parameters": [
                    {
                        "name": "storeId",
                        "type": "string"
                    },
                    {
                        "name": "predicates",
                        "type": "relationalStore"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "allocResourceAndShare",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "storeId",
                        "type": "string"
                    },
                    {
                        "name": "predicates",
                        "type": "relationalStore"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "allocResourceAndShare",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "storeId",
                        "type": "string"
                    },
                    {
                        "name": "predicates",
                        "type": "relationalStore"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    },
                    {
                        "name": "columns",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "share",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "share",
                "return_type": "Promise<Result<Array<Result<Participant>>>>",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unshare",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unshare",
                "return_type": "Promise<Result<Array<Result<Participant>>>>",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exit",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exit",
                "return_type": "Promise<Result<void>>",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "changePrivilege",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "changePrivilege",
                "return_type": "Promise<Result<Array<Result<Participant>>>>",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "participants",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryParticipants",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryParticipants",
                "return_type": "Promise<Result<Array<Participant>>>",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryParticipantsByInvitation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "invitationCode",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryParticipantsByInvitation",
                "return_type": "Promise<Result<Array<Participant>>>",
                "parameters": [
                    {
                        "name": "invitationCode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "confirmInvitation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "invitationCode",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "State"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "confirmInvitation",
                "return_type": "Promise<Result<string>>",
                "parameters": [
                    {
                        "name": "invitationCode",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "State"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "changeConfirmation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "State"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "changeConfirmation",
                "return_type": "Promise<Result<void>>",
                "parameters": [
                    {
                        "name": "sharingResource",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "State"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Config",
                "extends": null
            }
        ]
    },
    "@ohos.arkui.StateManagement": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "keys",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyOnError",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "PersistenceErrorCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "constructor",
                "extends": null
            },
            {
                "class": "instance",
                "extends": null
            },
            {
                "class": "AppStorageV2",
                "extends": null
            },
            {
                "class": "type",
                "extends": null
            },
            {
                "class": "type",
                "extends": null
            },
            {
                "class": "type",
                "extends": null
            },
            {
                "class": "PersistenceV2",
                "extends": "AppStorageV2"
            },
            {
                "class": "type",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "UIUtils",
                "extends": null
            }
        ]
    },
    "@ohos.application.formProvider": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.formBindingData",
                "imported_as": "formBindingData"
            },
            {
                "module": "@ohos.app.form.formInfo",
                "imported_as": "formInfo"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setFormNextRefreshTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "minute",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFormNextRefreshTime",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "minute",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "formBindingData",
                        "type": "formBindingData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "formBindingData",
                        "type": "formBindingData"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.inputMethodEngine": {
        "dependencies": [
            {
                "module": "@ohos.InputMethodSubtype",
                "imported_as": "InputMethodSubtype"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "BaseContext"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {
            "KeyboardController": [],
            "InputMethodEngine": [],
            "InputMethodAbility": [],
            "TextInputClient": [],
            "InputClient": [],
            "KeyboardDelegate": [],
            "Panel": [],
            "EditorAttribute": [],
            "KeyEvent": [],
            "PanelInfo": [],
            "Range": [],
            "Movement": [],
            "WindowInfo": [],
            "PanelRect": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getInputMethodAbility",
                "return_type": "InputMethodAbility",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInputMethodEngine",
                "return_type": "InputMethodEngine",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardDelegate",
                "return_type": "KeyboardDelegate",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createKeyboardDelegate",
                "return_type": "KeyboardDelegate",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.util": {
        "dependencies": [],
        "interfaces": {
            "TextDecoderOptions": [],
            "DecodeWithStreamOptions": [],
            "DecodeToStringOptions": [],
            "EncodeIntoUint8ArrayInfo": [],
            "ScopeComparable": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "printf",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "format",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getErrorString",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "errno",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "errnoToString",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "errno",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateRandomUUID",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateRandomBinaryUUID",
                "return_type": "Uint8Array",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "parseUUID",
                "return_type": "Uint8Array",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHash",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "object",
                        "type": "object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "TextDecoder",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "TextEncoder",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "parseRationalNumber",
                "return_type": "RationalNumber",
                "parameters": [
                    {
                        "name": "numerator",
                        "type": "number"
                    },
                    {
                        "name": "denominator",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRationalFromString",
                "return_type": "RationalNumber",
                "parameters": [
                    {
                        "name": "rationalString",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCommonDivisor",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "number1",
                        "type": "number"
                    },
                    {
                        "name": "number2",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCommonFactor",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "number1",
                        "type": "number"
                    },
                    {
                        "name": "number2",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addBefore",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetClass",
                        "type": "Object"
                    },
                    {
                        "name": "methodName",
                        "type": "string"
                    },
                    {
                        "name": "isStatic",
                        "type": "boolean"
                    },
                    {
                        "name": "before",
                        "type": "Function"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAfter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetClass",
                        "type": "Object"
                    },
                    {
                        "name": "methodName",
                        "type": "string"
                    },
                    {
                        "name": "isStatic",
                        "type": "boolean"
                    },
                    {
                        "name": "after",
                        "type": "Function"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetClass",
                        "type": "Object"
                    },
                    {
                        "name": "methodName",
                        "type": "string"
                    },
                    {
                        "name": "isStatic",
                        "type": "boolean"
                    },
                    {
                        "name": "instead",
                        "type": "Function"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "TextDecoder",
                "extends": null
            },
            {
                "class": "TextEncoder",
                "extends": null
            },
            {
                "class": "RationalNumber",
                "extends": null
            },
            {
                "class": "LruBuffer",
                "extends": null
            },
            {
                "class": "LRUCache",
                "extends": null
            },
            {
                "class": "Scope",
                "extends": null
            },
            {
                "class": "ScopeHelper",
                "extends": null
            },
            {
                "class": "Base64",
                "extends": null
            },
            {
                "class": "Base64Helper",
                "extends": null
            },
            {
                "class": "types",
                "extends": null
            },
            {
                "class": "method",
                "extends": null
            },
            {
                "class": "method",
                "extends": null
            },
            {
                "class": "method",
                "extends": null
            },
            {
                "class": "method",
                "extends": null
            },
            {
                "class": "Aspect",
                "extends": null
            },
            {
                "class": "StringDecoder",
                "extends": null
            }
        ]
    },
    "@ohos.enterprise.networkManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            }
        ],
        "interfaces": {
            "AddFilterRule": [],
            "RemoveFilterRule": [],
            "FirewallRule": [],
            "DomainFilterRule": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAllNetworkInterfaces",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllNetworkInterfaces",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllNetworkInterfacesSync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIpAddress",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIpAddress",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIpAddressSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMac",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMac",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMacSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNetworkInterfaceDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNetworkInterfaceDisabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNetworkInterfaceDisabledSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkInterfaceDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    },
                    {
                        "name": "isDisabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkInterfaceDisabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    },
                    {
                        "name": "isDisabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkInterfaceDisabledSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "networkInterface",
                        "type": "string"
                    },
                    {
                        "name": "isDisabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGlobalProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "httpProxy",
                        "type": "connection"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGlobalProxy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "httpProxy",
                        "type": "connection"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGlobalProxySync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "httpProxy",
                        "type": "connection"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGlobalProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGlobalProxy",
                "return_type": "Promise<connection",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGlobalProxySync",
                "return_type": "connection",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addIptablesFilterRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "filterRule",
                        "type": "AddFilterRule"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addIptablesFilterRule",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "filterRule",
                        "type": "AddFilterRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeIptablesFilterRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "filterRule",
                        "type": "RemoveFilterRule"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeIptablesFilterRule",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "filterRule",
                        "type": "RemoveFilterRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "listIptablesFilterRules",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "listIptablesFilterRules",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addFirewallRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "firewallRule",
                        "type": "FirewallRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeFirewallRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFirewallRules",
                "return_type": "Array<FirewallRule>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDomainFilterRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "domainFilterRule",
                        "type": "DomainFilterRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDomainFilterRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDomainFilterRules",
                "return_type": "Array<DomainFilterRule>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.inputMethod.Panel": {
        "dependencies": [],
        "interfaces": {
            "PanelInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.brightness": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    },
                    {
                        "name": "continuous",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.connectedTag": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "init",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "initialize",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninit",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninitialize",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readNdefTag",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readNdefTag",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "Promise<number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "read",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "writeNdefTag",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "data",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "writeNdefTag",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "data",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "data",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "data",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimedia.image": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.graphics.colorSpaceManager",
                "imported_as": "type colorSpaceManager"
            },
            {
                "module": "@ohos.resourceManager",
                "imported_as": "type resourceManager"
            },
            {
                "module": "@ohos.rpc",
                "imported_as": "type rpc"
            }
        ],
        "interfaces": {
            "Size": [],
            "Region": [],
            "PositionArea": [],
            "ImageInfo": [],
            "PackingOption": [],
            "PackingOptionsForSequence": [],
            "GetImagePropertyOptions": [],
            "ImagePropertyOptions": [],
            "DecodingOptions": [],
            "Component": [],
            "InitializationOptions": [],
            "SourceOptions": [],
            "HdrStaticMetadata": [],
            "GainmapChannel": [],
            "HdrGainmapMetadata": [],
            "PixelMap": [],
            "Picture": [],
            "AuxiliaryPicture": [],
            "Metadata": [],
            "DecodingOptionsForPicture": [],
            "AuxiliaryPictureInfo": [],
            "ImageSource": [],
            "ImagePacker": [],
            "Image": [],
            "ImageReceiver": [],
            "ImageCreator": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createPixelMap",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "colors",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "options",
                        "type": "InitializationOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPixelMap",
                "return_type": "Promise<PixelMap>",
                "parameters": [
                    {
                        "name": "colors",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "options",
                        "type": "InitializationOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPixelMapSync",
                "return_type": "PixelMap",
                "parameters": [
                    {
                        "name": "colors",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "options",
                        "type": "InitializationOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPixelMapSync",
                "return_type": "PixelMap",
                "parameters": [
                    {
                        "name": "options",
                        "type": "InitializationOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPremultipliedPixelMap",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "PixelMap"
                    },
                    {
                        "name": "dst",
                        "type": "PixelMap"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPremultipliedPixelMap",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "src",
                        "type": "PixelMap"
                    },
                    {
                        "name": "dst",
                        "type": "PixelMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createUnpremultipliedPixelMap",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "src",
                        "type": "PixelMap"
                    },
                    {
                        "name": "dst",
                        "type": "PixelMap"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createUnpremultipliedPixelMap",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "src",
                        "type": "PixelMap"
                    },
                    {
                        "name": "dst",
                        "type": "PixelMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPixelMapFromParcel",
                "return_type": "PixelMap",
                "parameters": [
                    {
                        "name": "sequence",
                        "type": "rpc"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPixelMapFromSurface",
                "return_type": "Promise<PixelMap>",
                "parameters": [
                    {
                        "name": "surfaceId",
                        "type": "string"
                    },
                    {
                        "name": "region",
                        "type": "Region"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPixelMapFromSurfaceSync",
                "return_type": "PixelMap",
                "parameters": [
                    {
                        "name": "surfaceId",
                        "type": "string"
                    },
                    {
                        "name": "region",
                        "type": "Region"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "SourceOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "SourceOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "buf",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "buf",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "options",
                        "type": "SourceOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "rawfile",
                        "type": "resourceManager"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "CreateIncrementalSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "buf",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "CreateIncrementalSource",
                "return_type": "ImageSource",
                "parameters": [
                    {
                        "name": "buf",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImagePacker",
                "return_type": "ImagePacker",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageReceiver",
                "return_type": "ImageReceiver",
                "parameters": [
                    {
                        "name": "width",
                        "type": "number"
                    },
                    {
                        "name": "height",
                        "type": "number"
                    },
                    {
                        "name": "format",
                        "type": "number"
                    },
                    {
                        "name": "capacity",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageReceiver",
                "return_type": "ImageReceiver",
                "parameters": [
                    {
                        "name": "size",
                        "type": "Size"
                    },
                    {
                        "name": "format",
                        "type": "ImageFormat"
                    },
                    {
                        "name": "capacity",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageCreator",
                "return_type": "ImageCreator",
                "parameters": [
                    {
                        "name": "width",
                        "type": "number"
                    },
                    {
                        "name": "height",
                        "type": "number"
                    },
                    {
                        "name": "format",
                        "type": "number"
                    },
                    {
                        "name": "capacity",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageCreator",
                "return_type": "ImageCreator",
                "parameters": [
                    {
                        "name": "size",
                        "type": "Size"
                    },
                    {
                        "name": "format",
                        "type": "ImageFormat"
                    },
                    {
                        "name": "capacity",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPicture",
                "return_type": "Picture",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPictureFromParcel",
                "return_type": "Picture",
                "parameters": [
                    {
                        "name": "sequence",
                        "type": "rpc"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAuxiliaryPicture",
                "return_type": "AuxiliaryPicture",
                "parameters": [
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "size",
                        "type": "Size"
                    },
                    {
                        "name": "type",
                        "type": "AuxiliaryPictureType"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.net.http": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            }
        ],
        "interfaces": {
            "HttpRequestOptions": [],
            "MultiFormData": [],
            "ClientCert": [],
            "CertificatePinning": [],
            "HttpRequest": [],
            "HttpResponse": [],
            "PerformanceTiming": [],
            "DataReceiveProgressInfo": [],
            "DataSendProgressInfo": [],
            "HttpResponseCache": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createHttp",
                "return_type": "HttpRequest",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createHttpResponseCache",
                "return_type": "HttpResponseCache",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.insightIntentDriver": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.insightIntent",
                "imported_as": "type insightIntent"
            }
        ],
        "interfaces": {
            "ExecuteParam": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "execute",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "param",
                        "type": "ExecuteParam"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "execute",
                "return_type": "Promise<insightIntent",
                "parameters": [
                    {
                        "name": "param",
                        "type": "ExecuteParam"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.Ability": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.AbilityConstant",
                "imported_as": "AbilityConstant"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "Ability",
                "extends": null
            }
        ]
    },
    "@ohos.filemanagement.userFileManager": {
        "dependencies": [
            {
                "module": "@ohos.application.Context",
                "imported_as": "type Context"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.data.dataSharePredicates",
                "imported_as": "dataSharePredicates"
            }
        ],
        "interfaces": {
            "FileAsset": [],
            "FetchOptions": [],
            "AlbumFetchOptions": [],
            "PhotoCreateOptions": [],
            "AbsAlbum": [],
            "UserFileManager": [],
            "ChangeData": [],
            "PeerInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getUserFileMgr",
                "return_type": "UserFileManager",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "and",
                "extends": null
            }
        ]
    },
    "@ohos.update": {
        "dependencies": [],
        "interfaces": {
            "Updater": [],
            "Restorer": [],
            "LocalUpdater": [],
            "UpgradeInfo": [],
            "BusinessType": [],
            "CheckResult": [],
            "NewVersionInfo": [],
            "VersionDigestInfo": [],
            "VersionComponent": [],
            "DescriptionOptions": [],
            "ComponentDescription": [],
            "DescriptionInfo": [],
            "CurrentVersionInfo": [],
            "DownloadOptions": [],
            "ResumeDownloadOptions": [],
            "PauseDownloadOptions": [],
            "UpgradeOptions": [],
            "ClearOptions": [],
            "UpgradePolicy": [],
            "UpgradePeriod": [],
            "TaskInfo": [],
            "EventInfo": [],
            "TaskBody": [],
            "ErrorMessage": [],
            "EventClassifyInfo": [],
            "UpgradeFile": [],
            "UpgradeTaskCallback": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getOnlineUpdater",
                "return_type": "Updater",
                "parameters": [
                    {
                        "name": "upgradeInfo",
                        "type": "UpgradeInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRestorer",
                "return_type": "Restorer",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalUpdater",
                "return_type": "LocalUpdater",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            }
        ]
    },
    "@ohos.systemTimer": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.wantAgent",
                "imported_as": "WantAgent"
            }
        ],
        "interfaces": {
            "TimerOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createTimer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "TimerOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createTimer",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "TimerOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startTimer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timer",
                        "type": "number"
                    },
                    {
                        "name": "triggerTime",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startTimer",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "timer",
                        "type": "number"
                    },
                    {
                        "name": "triggerTime",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopTimer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timer",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopTimer",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "timer",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "destroyTimer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timer",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "destroyTimer",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "timer",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.deviceInfo": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "Identifier",
                "return_type": "a",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "pertaining",
                "extends": null
            },
            {
                "class": "pertaining",
                "extends": null
            }
        ]
    },
    "@ohos.wallpaper": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            }
        ],
        "interfaces": {
            "RgbaColor": [],
            "WallpaperInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getColors",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getColors",
                "return_type": "Promise<Array<RgbaColor>>",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getColorsSync",
                "return_type": "Array<RgbaColor>",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getId",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFile",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMinHeight",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMinHeight",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMinHeightSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMinWidth",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMinWidth",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMinWidthSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isChangePermitted",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isChangePermitted",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOperationAllowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOperationAllowed",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reset",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reset",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "restore",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "restore",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWallpaper",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWallpaper",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setImage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setImage",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPixelMap",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPixelMap",
                "return_type": "Promise<image",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getImage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getImage",
                "return_type": "Promise<image",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVideo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVideo",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCustomWallpaper",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCustomWallpaper",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAllWallpapers",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "wallpaperInfos",
                        "type": "Array"
                    },
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWallpaperByState",
                "return_type": "Promise<image",
                "parameters": [
                    {
                        "name": "wallpaperType",
                        "type": "WallpaperType"
                    },
                    {
                        "name": "foldState",
                        "type": "FoldState"
                    },
                    {
                        "name": "rotateState",
                        "type": "RotateState"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.curves": {
        "dependencies": [],
        "interfaces": {
            "ICurve": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "initCurve",
                "return_type": "ICurve",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "init",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stepsCurve",
                "return_type": "ICurve",
                "parameters": [
                    {
                        "name": "count",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "steps",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "count",
                        "type": "number"
                    },
                    {
                        "name": "end",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cubicBezierCurve",
                "return_type": "ICurve",
                "parameters": [
                    {
                        "name": "x1",
                        "type": "number"
                    },
                    {
                        "name": "y1",
                        "type": "number"
                    },
                    {
                        "name": "x2",
                        "type": "number"
                    },
                    {
                        "name": "y2",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cubicBezier",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "x1",
                        "type": "number"
                    },
                    {
                        "name": "y1",
                        "type": "number"
                    },
                    {
                        "name": "x2",
                        "type": "number"
                    },
                    {
                        "name": "y2",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "springCurve",
                "return_type": "ICurve",
                "parameters": [
                    {
                        "name": "velocity",
                        "type": "number"
                    },
                    {
                        "name": "mass",
                        "type": "number"
                    },
                    {
                        "name": "stiffness",
                        "type": "number"
                    },
                    {
                        "name": "damping",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "spring",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "velocity",
                        "type": "number"
                    },
                    {
                        "name": "mass",
                        "type": "number"
                    },
                    {
                        "name": "stiffness",
                        "type": "number"
                    },
                    {
                        "name": "damping",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "springMotion",
                "return_type": "ICurve",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "responsiveSpringMotion",
                "return_type": "ICurve",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "interpolatingSpring",
                "return_type": "ICurve",
                "parameters": [
                    {
                        "name": "velocity",
                        "type": "number"
                    },
                    {
                        "name": "mass",
                        "type": "number"
                    },
                    {
                        "name": "stiffness",
                        "type": "number"
                    },
                    {
                        "name": "damping",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.account.osAccount": {
        "dependencies": [
            {
                "module": "@ohos.account.distributedAccount",
                "imported_as": "type distributedAccount"
            }
        ],
        "interfaces": {
            "AccountManager": [],
            "OsAccountInfo": [],
            "OsAccountSwitchEventData": [],
            "CreateOsAccountOptions": [],
            "DomainAccountInfo": [],
            "AuthStatusInfo": [],
            "GetDomainAccessTokenOptions": [],
            "GetDomainAccountInfoOptions": [],
            "DomainPlugin": [],
            "DomainServerConfig": [],
            "GetAuthInfoOptions": [],
            "RemoteAuthOptions": [],
            "AuthOptions": [],
            "IInputData": [],
            "GetInputDataOptions": [],
            "IInputer": [],
            "IUserAuthCallback": [],
            "IIdmCallback": [],
            "GetPropertyRequest": [],
            "SetPropertyRequest": [],
            "ExecutorProperty": [],
            "AuthResult": [],
            "CredentialInfo": [],
            "RequestResult": [],
            "EnrolledCredInfo": [],
            "ConstraintSourceTypeInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAccountManager",
                "return_type": "AccountManager",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerInputer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "authType",
                        "type": "AuthType"
                    },
                    {
                        "name": "inputer",
                        "type": "IInputer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterInputer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "authType",
                        "type": "AuthType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerPlugin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "plugin",
                        "type": "DomainPlugin"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterPlugin",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "auth",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domainAccountInfo",
                        "type": "DomainAccountInfo"
                    },
                    {
                        "name": "credential",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "IUserAuthCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "authWithPopup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "IUserAuthCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "authWithPopup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "localId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "IUserAuthCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasAccount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domainAccountInfo",
                        "type": "DomainAccountInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasAccount",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "domainAccountInfo",
                        "type": "DomainAccountInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateAccountToken",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domainAccountInfo",
                        "type": "DomainAccountInfo"
                    },
                    {
                        "name": "token",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateAccountToken",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "domainAccountInfo",
                        "type": "DomainAccountInfo"
                    },
                    {
                        "name": "token",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateAccountInfo",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "oldAccountInfo",
                        "type": "DomainAccountInfo"
                    },
                    {
                        "name": "newAccountInfo",
                        "type": "DomainAccountInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccountInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "GetDomainAccountInfoOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccountInfo",
                "return_type": "Promise<DomainAccountInfo>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "GetDomainAccountInfoOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessToken",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "businessParams",
                        "type": "Record"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessToken",
                "return_type": "Promise<Uint8Array>",
                "parameters": [
                    {
                        "name": "businessParams",
                        "type": "Record"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAuthenticationExpired",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "domainAccountInfo",
                        "type": "DomainAccountInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addServerConfig",
                "return_type": "Promise<DomainServerConfig>",
                "parameters": [
                    {
                        "name": "parameters",
                        "type": "Record"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeServerConfig",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "configId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccountServerConfig",
                "return_type": "Promise<DomainServerConfig>",
                "parameters": [
                    {
                        "name": "domainAccountInfo",
                        "type": "DomainAccountInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "UserAuth",
                "extends": null
            },
            {
                "class": "instance",
                "extends": null
            },
            {
                "class": "PINAuth",
                "extends": null
            },
            {
                "class": "instance",
                "extends": null
            },
            {
                "class": "InputerManager",
                "extends": null
            },
            {
                "class": "DomainAccountManager",
                "extends": null
            },
            {
                "class": "DomainServerConfigManager",
                "extends": null
            },
            {
                "class": "UserIdentityManager",
                "extends": null
            },
            {
                "class": "instance",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.ChildProcessArgs": {
        "dependencies": [],
        "interfaces": {
            "ChildProcessArgs": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.multimedia.drm": {
        "dependencies": [],
        "interfaces": {
            "ProvisionRequest": [],
            "OptionsData": [],
            "MediaKeyRequest": [],
            "EventInfo": [],
            "StatisticKeyValue": [],
            "MediaKeyStatus": [],
            "KeysInfo": [],
            "MediaKeySystemInfo": [],
            "MediaKeySystemDescription": [],
            "MediaKeySystem": [],
            "MediaKeySession": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getMediaKeySystemUuid",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMediaKeySystems",
                "return_type": "MediaKeySystemDescription",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createMediaKeySystem",
                "return_type": "MediaKeySystem",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMediaKeySystemSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "mimeType",
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "type": "ContentProtectionLevel"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMediaKeySystemSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "mimeType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMediaKeySystemSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.insightIntent": {
        "dependencies": [],
        "interfaces": {
            "ExecuteResult": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.util.Vector": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Vector",
                "extends": null
            }
        ]
    },
    "@ohos.multimodalInput.mouseEvent": {
        "dependencies": [],
        "interfaces": {
            "AxisValue": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.ability.UIExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.AbilityConstant",
                "imported_as": "AbilityConstant"
            },
            {
                "module": "@ohos.app.ability.ExtensionAbility",
                "imported_as": "ExtensionAbility"
            },
            {
                "module": "@ohos.app.ability.UIExtensionContentSession",
                "imported_as": "type UIExtensionContentSession"
            },
            {
                "module": "@ohos.application.UIExtensionContext",
                "imported_as": "type UIExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "UIExtensionAbility",
                "extends": "ExtensionAbility"
            }
        ]
    },
    "@ohos.events.emitter": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "EventData": [],
            "InnerEvent": [],
            "Options": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "InnerEvent"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "InnerEvent"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "emit",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "InnerEvent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "emit",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "emit",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getListenerCount",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "eventId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.promptAction": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "ShowToastOptions": [],
            "Button": [],
            "ShowDialogSuccessResponse": [],
            "ShowDialogOptions": [],
            "BaseDialogOptions": [],
            "ActionMenuSuccessResponse": [],
            "ActionMenuOptions": [],
            "DismissDialogAction": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "showToast",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowToastOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openToast",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowToastOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeToast",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "toastId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showDialog",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowDialogOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showDialog",
                "return_type": "Promise<ShowDialogSuccessResponse>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowDialogOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openCustomDialog",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "CustomDialogOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeCustomDialog",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "dialogId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showActionMenu",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ActionMenuOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showActionMenu",
                "return_type": "Promise<ActionMenuSuccessResponse>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ActionMenuOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.base": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.hilog": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "debug",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domain",
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "info",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domain",
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "warn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domain",
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "error",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domain",
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fatal",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "domain",
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLoggable",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "domain",
                        "type": "number"
                    },
                    {
                        "name": "tag",
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "type": "LogLevel"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.adminManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "EnterpriseInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "enableAdmin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "enterpriseInfo",
                        "type": "EnterpriseInfo"
                    },
                    {
                        "name": "type",
                        "type": "AdminType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAdmin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "enterpriseInfo",
                        "type": "EnterpriseInfo"
                    },
                    {
                        "name": "type",
                        "type": "AdminType"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAdmin",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "enterpriseInfo",
                        "type": "EnterpriseInfo"
                    },
                    {
                        "name": "type",
                        "type": "AdminType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAdmin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAdmin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAdmin",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableSuperAdmin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "String"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableSuperAdmin",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "String"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAdminEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAdminEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAdminEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEnterpriseInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEnterpriseInfo",
                "return_type": "Promise<EnterpriseInfo>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setEnterpriseInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "enterpriseInfo",
                        "type": "EnterpriseInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setEnterpriseInfo",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "enterpriseInfo",
                        "type": "EnterpriseInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSuperAdmin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "String"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSuperAdmin",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "String"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeManagedEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "managedEvents",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeManagedEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "managedEvents",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeManagedEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "managedEvents",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeManagedEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "managedEvents",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "authorizeAdmin",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "authorizeAdmin",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSuperAdmin",
                "return_type": "Promise<Want>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeManagedEventSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "managedEvents",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeManagedEventSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "managedEvents",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDelegatedPolicies",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "policies",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDelegatedPolicies",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDelegatedBundleNames",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "policy",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.systemTime": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "time",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTime",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "time",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isNano",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentTime",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealActiveTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isNano",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealActiveTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealActiveTime",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isNano",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRealTime",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "date",
                        "type": "Date"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "date",
                        "type": "Date"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDate",
                "return_type": "Promise<Date>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTimezone",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timezone",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTimezone",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "timezone",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimezone",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTimezone",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.hiviewdfx.hiAppEvent": {
        "dependencies": [],
        "interfaces": {
            "ConfigOption": [],
            "AppEventInfo": [],
            "AppEventPackage": [],
            "TriggerCondition": [],
            "AppEventFilter": [],
            "AppEventGroup": [],
            "Watcher": [],
            "AppEventReportConfig": [],
            "Processor": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "configure",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "ConfigOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AppEventInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "write",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AppEventInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setEventParam",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "params",
                        "type": "Record"
                    },
                    {
                        "name": "domain",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addWatcher",
                "return_type": "AppEventPackageHolder",
                "parameters": [
                    {
                        "name": "watcher",
                        "type": "Watcher"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeWatcher",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "watcher",
                        "type": "Watcher"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearData",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setUserId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setUserProperty",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserProperty",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addProcessor",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "processor",
                        "type": "Processor"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeProcessor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "AppEventPackageHolder",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.errorManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.LoopObserver",
                "imported_as": "LoopObserver as _LoopObserver"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "ErrorObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "observerId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "timeout",
                        "type": "number"
                    },
                    {
                        "name": "observer",
                        "type": "LoopObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "UnhandledRejectionObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.resourceManager": {
        "dependencies": [
            {
                "module": "@ohos.global.rawFileDescriptor",
                "imported_as": "RawFileDescriptor as _RawFileDescriptor"
            },
            {
                "module": "@ohos.global.resource",
                "imported_as": "Resource as _Resource"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback as _AsyncCallback"
            },
            {
                "module": "@ohos.arkui.drawableDescriptor",
                "imported_as": "DrawableDescriptor"
            }
        ],
        "interfaces": {
            "ResourceManager": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getResourceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getResourceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getResourceManager",
                "return_type": "Promise<ResourceManager>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getResourceManager",
                "return_type": "Promise<ResourceManager>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemResourceManager",
                "return_type": "ResourceManager",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Configuration",
                "extends": null
            },
            {
                "class": "DeviceCapability",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            }
        ]
    },
    "@ohos.WallpaperExtensionAbility": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "WallpaperExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.router": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "RouterOptions": [],
            "RouterState": [],
            "EnableAlertOptions": [],
            "NamedRouterOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "push",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushUrl",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushUrl",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushUrl",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushUrl",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceUrl",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceUrl",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceUrl",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceUrl",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "back",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "back",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "index",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clear",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLength",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getState",
                "return_type": "RouterState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStateByIndex",
                "return_type": "RouterState",
                "parameters": [
                    {
                        "name": "index",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStateByUrl",
                "return_type": "Array<RouterState>",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAlertBeforeBackPage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "EnableAlertOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showAlertBeforeBackPage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "EnableAlertOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAlertBeforeBackPage",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hideAlertBeforeBackPage",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getParams",
                "return_type": "Object",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushNamedRoute",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushNamedRoute",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushNamedRoute",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pushNamedRoute",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceNamedRoute",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceNamedRoute",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceNamedRoute",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replaceNamedRoute",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NamedRouterOptions"
                    },
                    {
                        "name": "mode",
                        "type": "RouterMode"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimodalInput.infraredEmitter": {
        "dependencies": [],
        "interfaces": {
            "InfraredFrequency": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "transmitInfrared",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "infraredFrequency",
                        "type": "number"
                    },
                    {
                        "name": "pattern",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInfraredFrequencies",
                "return_type": "Array<InfraredFrequency>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.reminderAgentManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.notificationManager",
                "imported_as": "notification"
            },
            {
                "module": "@ohos.notification.notificationSlot",
                "imported_as": "NotificationSlot"
            },
            {
                "module": "@ohos.data.ValuesBucket",
                "imported_as": "ValuesBucket"
            }
        ],
        "interfaces": {
            "ActionButton": [],
            "WantAgent": [],
            "DataShareUpdate": [],
            "MaxScreenWantAgent": [],
            "ReminderRequest": [],
            "ReminderInfo": [],
            "LocalDateTime": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "publishReminder",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "reminderReq",
                        "type": "ReminderRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishReminder",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "reminderReq",
                        "type": "ReminderRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelReminder",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "reminderId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelReminder",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "reminderId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValidReminders",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValidReminders",
                "return_type": "Promise<Array<ReminderRequest>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAllReminders",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAllReminders",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addNotificationSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addNotificationSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeNotificationSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "notification"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeNotificationSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "notification"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addExcludeDate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "reminderId",
                        "type": "number"
                    },
                    {
                        "name": "date",
                        "type": "Date"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteExcludeDates",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "reminderId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getExcludeDates",
                "return_type": "Promise<Array<Date>>",
                "parameters": [
                    {
                        "name": "reminderId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllValidReminders",
                "return_type": "Promise<Array<ReminderInfo>>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.FenceExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "FenceExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "@ohos.util.HashMap": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "HashMap",
                "extends": null
            }
        ]
    },
    "@ohos.prompt": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "ShowToastOptions": [],
            "Button": [],
            "ShowDialogSuccessResponse": [],
            "ShowDialogOptions": [],
            "ActionMenuSuccessResponse": [],
            "ActionMenuOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "showToast",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowToastOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showDialog",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowDialogOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showDialog",
                "return_type": "Promise<ShowDialogSuccessResponse>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowDialogOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showActionMenu",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ActionMenuOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showActionMenu",
                "return_type": "Promise<ActionMenuSuccessResponse>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ActionMenuOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.UIContext": {
        "dependencies": [
            {
                "module": "@ohos.font",
                "imported_as": "font"
            },
            {
                "module": "@ohos.mediaquery",
                "imported_as": "mediaQuery"
            },
            {
                "module": "@ohos.arkui.inspector",
                "imported_as": "type inspector"
            },
            {
                "module": "@ohos.arkui.observer",
                "imported_as": "type observer"
            },
            {
                "module": "@ohos.promptAction",
                "imported_as": "promptAction"
            },
            {
                "module": "@ohos.router",
                "imported_as": "router"
            },
            {
                "module": "@ohos.arkui.componentUtils",
                "imported_as": "type componentUtils"
            },
            {
                "module": "@ohos.arkui.node",
                "imported_as": "ComponentContent"
            },
            {
                "module": "@ohos.arkui.node",
                "imported_as": "FrameNode"
            },
            {
                "module": "@ohos.measure",
                "imported_as": "MeasureOptions"
            },
            {
                "module": "@ohos.arkui.componentSnapshot",
                "imported_as": "type componentSnapshot"
            },
            {
                "module": "@ohos.arkui.dragController",
                "imported_as": "type dragController"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.app.ability.common",
                "imported_as": "type common"
            },
            {
                "module": "@ohos.multimodalInput.pointer",
                "imported_as": "type pointer"
            }
        ],
        "interfaces": {
            "PageInfo": [],
            "AtomicServiceBar": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "Font",
                "extends": null
            },
            {
                "class": "Font",
                "extends": null
            },
            {
                "class": "Font",
                "extends": null
            },
            {
                "class": "MediaQuery",
                "extends": null
            },
            {
                "class": "MediaQuery",
                "extends": null
            },
            {
                "class": "MediaQuery",
                "extends": null
            },
            {
                "class": "UIInspector",
                "extends": null
            },
            {
                "class": "UIInspector",
                "extends": null
            },
            {
                "class": "UIInspector",
                "extends": null
            },
            {
                "class": "Router",
                "extends": null
            },
            {
                "class": "Router",
                "extends": null
            },
            {
                "class": "Router",
                "extends": null
            },
            {
                "class": "Router",
                "extends": null
            },
            {
                "class": "PromptAction",
                "extends": null
            },
            {
                "class": "PromptAction",
                "extends": null
            },
            {
                "class": "PromptAction",
                "extends": null
            },
            {
                "class": "UIObserver",
                "extends": null
            },
            {
                "class": "ComponentUtils",
                "extends": null
            },
            {
                "class": "ComponentUtils",
                "extends": null
            },
            {
                "class": "ComponentUtils",
                "extends": null
            },
            {
                "class": "OverlayManager",
                "extends": null
            },
            {
                "class": "OverlayManager",
                "extends": null
            },
            {
                "class": "DynamicSyncScene",
                "extends": null
            },
            {
                "class": "SwiperDynamicSyncScene",
                "extends": "DynamicSyncScene"
            },
            {
                "class": "MarqueeDynamicSyncScene",
                "extends": "DynamicSyncScene"
            },
            {
                "class": "DragController",
                "extends": null
            },
            {
                "class": "DragController",
                "extends": null
            },
            {
                "class": "DragController",
                "extends": null
            },
            {
                "class": "MeasureUtils",
                "extends": null
            },
            {
                "class": "MeasureUtils",
                "extends": null
            },
            {
                "class": "FocusController",
                "extends": null
            },
            {
                "class": "FocusController",
                "extends": null
            },
            {
                "class": "CursorController",
                "extends": null
            },
            {
                "class": "CursorController",
                "extends": null
            },
            {
                "class": "ContextMenuController",
                "extends": null
            },
            {
                "class": "ContextMenuController",
                "extends": null
            },
            {
                "class": "FrameCallback",
                "extends": null
            },
            {
                "class": "ComponentSnapshot",
                "extends": null
            },
            {
                "class": "ComponentSnapshot",
                "extends": null
            },
            {
                "class": "UIContext",
                "extends": null
            },
            {
                "class": "UIContext",
                "extends": null
            },
            {
                "class": "UIContext",
                "extends": null
            }
        ]
    },
    "@ohos.telephony.sms": {
        "dependencies": [
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type Context"
            }
        ],
        "interfaces": {
            "MmsInformation": [],
            "MmsParams": [],
            "MmsConfig": [],
            "MmsSendReq": [],
            "MmsSendConf": [],
            "MmsNotificationInd": [],
            "MmsRespInd": [],
            "MmsRetrieveConf": [],
            "MmsAcknowledgeInd": [],
            "MmsDeliveryInd": [],
            "MmsReadOrigInd": [],
            "MmsReadRecInd": [],
            "MmsAttachment": [],
            "MmsAddress": [],
            "CBConfigOptions": [],
            "SimMessageOptions": [],
            "UpdateSimMessageOptions": [],
            "ShortMessage": [],
            "SimShortMessage": [],
            "SendMessageOptions": [],
            "ISendShortMessageCallback": [],
            "IDeliveryShortMessageCallback": [],
            "SmsSegmentsInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "splitMessage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "content",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "splitMessage",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "content",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createMessage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "pdu",
                        "type": "Array"
                    },
                    {
                        "name": "specification",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createMessage",
                "return_type": "Promise<ShortMessage>",
                "parameters": [
                    {
                        "name": "pdu",
                        "type": "Array"
                    },
                    {
                        "name": "specification",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendMessage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SendMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendShortMessage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SendMessageOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendShortMessage",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SendMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultSmsSlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultSmsSlotId",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultSmsSlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultSmsSlotId",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSmscAddr",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "smscAddr",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSmscAddr",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "smscAddr",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSmscAddr",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSmscAddr",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasSmsCapability",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSimMessage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SimMessageOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSimMessage",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SimMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "delSimMessage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "msgIndex",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "delSimMessage",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "msgIndex",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateSimMessage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "UpdateSimMessageOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateSimMessage",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "UpdateSimMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSimMessages",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSimMessages",
                "return_type": "Promise<Array<SimShortMessage>>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCBConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "CBConfigOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCBConfig",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "CBConfigOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSmsSegmentsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "force7bit",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSmsSegmentsInfo",
                "return_type": "Promise<SmsSegmentsInfo>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "force7bit",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isImsSmsSupported",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isImsSmsSupported",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getImsShortMessageFormat",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getImsShortMessageFormat",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "decodeMms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mmsFilePathName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "decodeMms",
                "return_type": "Promise<MmsInformation>",
                "parameters": [
                    {
                        "name": "mmsFilePathName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "encodeMms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mms",
                        "type": "MmsInformation"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "encodeMms",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "mms",
                        "type": "MmsInformation"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultSmsSimId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultSmsSimId",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendMms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "mmsParams",
                        "type": "MmsParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendMms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "mmsParams",
                        "type": "MmsParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "downloadMms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "mmsParams",
                        "type": "MmsParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "downloadMms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "mmsParams",
                        "type": "MmsParams"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            }
        ]
    },
    "@ohos.data.distributedData": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "KVManagerConfig": [
                "userInfo",
                "bundleName"
            ],
            "UserInfo": [],
            "Value": [],
            "Entry": [
                "key",
                "value"
            ],
            "ChangeNotification": [
                "insertEntries",
                "updateEntries",
                "deleteEntries",
                "deviceId"
            ],
            "Options": [],
            "KvStoreResultSet": [
                "offset",
                "position"
            ],
            "KVStore": [],
            "KVManager": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createKVManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "KVManagerConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createKVManager",
                "return_type": "Promise<KVManager>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "KVManagerConfig"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "Schema",
                "extends": null
            },
            {
                "class": "FieldNode",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "also",
                "extends": null
            },
            {
                "class": "Query",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.autoFillManager": {
        "dependencies": [
            {
                "module": "@ohos.application.AutoFillType",
                "imported_as": "AutoFillType"
            },
            {
                "module": "@ohos.application.AutoFillPopupConfig",
                "imported_as": "PopupPlacement"
            }
        ],
        "interfaces": {
            "AutoSaveCallback": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "requestAutoSave",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.dlpPermission": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.common",
                "imported_as": "type common"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "DLPPermissionInfo": [],
            "AccessedDLPFileInfo": [],
            "RetentionSandboxInfo": [],
            "DLPManagerResult": [],
            "DLPSandboxInfo": [],
            "DLPSandboxState": [],
            "AuthUser": [],
            "DLPProperty": [],
            "DLPFile": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isDLPFile",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDLPFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPPermissionInfo",
                "return_type": "Promise<DLPPermissionInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPPermissionInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOriginalFileName",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "fileName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPSuffix",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "listener",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isInSandbox",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isInSandbox",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPSupportedFileTypes",
                "return_type": "Promise<Array<string>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPSupportedFileTypes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRetentionState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "docUris",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRetentionState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "docUris",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelRetentionState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "docUris",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelRetentionState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "docUris",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRetentionSandboxList",
                "return_type": "Promise<Array<RetentionSandboxInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRetentionSandboxList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRetentionSandboxList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPFileAccessRecords",
                "return_type": "Promise<Array<AccessedDLPFileInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPFileAccessRecords",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDLPManagerForResult",
                "return_type": "Promise<DLPManagerResult>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "common"
                    },
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPGatheringPolicy",
                "return_type": "Promise<GatheringPolicyType>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDLPGatheringPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "installDLPSandbox",
                "return_type": "Promise<DLPSandboxInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "access",
                        "type": "DLPFileAccess"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "installDLPSandbox",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "access",
                        "type": "DLPFileAccess"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstallDLPSandbox",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "appIndex",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstallDLPSandbox",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "appIndex",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "listener",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateDLPFile",
                "return_type": "Promise<DLPFile>",
                "parameters": [
                    {
                        "name": "plaintextFd",
                        "type": "number"
                    },
                    {
                        "name": "ciphertextFd",
                        "type": "number"
                    },
                    {
                        "name": "property",
                        "type": "DLPProperty"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "generateDLPFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "plaintextFd",
                        "type": "number"
                    },
                    {
                        "name": "ciphertextFd",
                        "type": "number"
                    },
                    {
                        "name": "property",
                        "type": "DLPProperty"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openDLPFile",
                "return_type": "Promise<DLPFile>",
                "parameters": [
                    {
                        "name": "ciphertextFd",
                        "type": "number"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openDLPFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "ciphertextFd",
                        "type": "number"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSandboxAppConfig",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "configInfo",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cleanSandboxAppConfig",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSandboxAppConfig",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDLPFeatureProvided",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.cloudSyncManager": {
        "dependencies": [],
        "interfaces": {
            "ExtraData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "changeAppCloudSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "changeAppCloudSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableCloud",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "switches",
                        "type": "Record"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableCloud",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "switches",
                        "type": "Record"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCloud",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableCloud",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clean",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "appActions",
                        "type": "Record"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clean",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accountId",
                        "type": "string"
                    },
                    {
                        "name": "appActions",
                        "type": "Record"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "extraData",
                        "type": "ExtraData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDataChange",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "extraData",
                        "type": "ExtraData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.usbManager": {
        "dependencies": [],
        "interfaces": {
            "USBEndpoint": [],
            "USBInterface": [],
            "USBConfiguration": [],
            "USBDevice": [],
            "USBDevicePipe": [],
            "USBPortStatus": [],
            "USBPort": [],
            "USBControlParams": [],
            "USBDeviceRequestParams": [],
            "USBAccessory": [],
            "USBAccessoryHandle": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getDevices",
                "return_type": "Array<Readonly<USBDevice>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectDevice",
                "return_type": "Readonly<USBDevicePipe>",
                "parameters": [
                    {
                        "name": "device",
                        "type": "USBDevice"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasRight",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "deviceName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestRight",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "deviceName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeRight",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "deviceName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addRight",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "deviceName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "usbFunctionsFromString",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "usbFunctionsToString",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "FunctionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCurrentFunctions",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "FunctionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentFunctions",
                "return_type": "FunctionType",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPorts",
                "return_type": "Array<USBPort>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedModes",
                "return_type": "PortModeType",
                "parameters": [
                    {
                        "name": "portId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPortRoles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "portId",
                        "type": "number"
                    },
                    {
                        "name": "powerRole",
                        "type": "PowerRoleType"
                    },
                    {
                        "name": "dataRole",
                        "type": "DataRoleType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDeviceAccessRight",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "tokenId",
                        "type": "string"
                    },
                    {
                        "name": "deviceName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFunctionsFromString",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStringFromFunctions",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "FunctionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDeviceFunctions",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "FunctionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceFunctions",
                "return_type": "FunctionType",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPortList",
                "return_type": "Array<USBPort>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPortSupportModes",
                "return_type": "PortModeType",
                "parameters": [
                    {
                        "name": "portId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPortRoleTypes",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "portId",
                        "type": "number"
                    },
                    {
                        "name": "powerRole",
                        "type": "PowerRoleType"
                    },
                    {
                        "name": "dataRole",
                        "type": "DataRoleType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAccessoryRight",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "tokenId",
                        "type": "number"
                    },
                    {
                        "name": "accessory",
                        "type": "USBAccessory"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "claimInterface",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "iface",
                        "type": "USBInterface"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseInterface",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "iface",
                        "type": "USBInterface"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setConfiguration",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "config",
                        "type": "USBConfiguration"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setInterface",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "iface",
                        "type": "USBInterface"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRawDescriptor",
                "return_type": "Uint8Array",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFileDescriptor",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "controlTransfer",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "controlparam",
                        "type": "USBControlParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "usbControlTransfer",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "requestparam",
                        "type": "USBDeviceRequestParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bulkTransfer",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "endpoint",
                        "type": "USBEndpoint"
                    },
                    {
                        "name": "buffer",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closePipe",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasAccessoryRight",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "accessory",
                        "type": "USBAccessory"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestAccessoryRight",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "accessory",
                        "type": "USBAccessory"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAccessoryRight",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accessory",
                        "type": "USBAccessory"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessoryList",
                "return_type": "Array<Readonly<USBAccessory>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "openAccessory",
                "return_type": "USBAccessoryHandle",
                "parameters": [
                    {
                        "name": "accessory",
                        "type": "USBAccessory"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeAccessory",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "accessoryHandle",
                        "type": "USBAccessoryHandle"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.mediaquery": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "MediaQueryResult": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "matchMediaSync",
                "return_type": "MediaQueryListener",
                "parameters": [
                    {
                        "name": "condition",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.componentUtils": {
        "dependencies": [],
        "interfaces": {
            "ComponentInfo": [],
            "Size": [],
            "Offset": [],
            "TranslateResult": [],
            "ScaleResult": [],
            "RotateResult": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getRectangleById",
                "return_type": "ComponentInfo",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.dataUriUtils": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getId",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "attachId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "used",
                "extends": null
            }
        ]
    },
    "@ohos.bluetooth.pbap": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.baseProfile",
                "imported_as": "type baseProfile"
            },
            {
                "module": "@ohos.bluetooth.constant",
                "imported_as": "type constant"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createPbapServerProfile",
                "return_type": "PbapServerProfile",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.dateTimeManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setDateTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "time",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDateTime",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "time",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disallowModifyDateTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disallowModifyDateTime",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isModifyDateTimeDisallowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isModifyDateTimeDisallowed",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.security.cryptoFramework": {
        "dependencies": [],
        "interfaces": {
            "DataBlob": [],
            "ParamsSpec": [],
            "Key": [],
            "KeyPair": [],
            "Random": [],
            "AsyKeyGenerator": [],
            "SymKeyGenerator": [],
            "Mac": [],
            "Md": [],
            "Cipher": [],
            "Sign": [],
            "Verify": [],
            "KeyAgreement": [],
            "AsyKeySpec": [],
            "ECField": [],
            "Point": [],
            "AsyKeyGeneratorBySpec": [],
            "KdfSpec": [],
            "Kdf": [],
            "SM2CipherTextSpec": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createRandom",
                "return_type": "Random",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAsyKeyGenerator",
                "return_type": "AsyKeyGenerator",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSymKeyGenerator",
                "return_type": "SymKeyGenerator",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createMac",
                "return_type": "Mac",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createMd",
                "return_type": "Md",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCipher",
                "return_type": "Cipher",
                "parameters": [
                    {
                        "name": "transformation",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSign",
                "return_type": "Sign",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVerify",
                "return_type": "Verify",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createKeyAgreement",
                "return_type": "KeyAgreement",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "genECCCommonParamsSpec",
                "return_type": "ECCCommonParamsSpec",
                "parameters": [
                    {
                        "name": "curveName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "convertPoint",
                "return_type": "Point",
                "parameters": [
                    {
                        "name": "curveName",
                        "type": "string"
                    },
                    {
                        "name": "encodedPoint",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEncodedPoint",
                "return_type": "Uint8Array",
                "parameters": [
                    {
                        "name": "curveName",
                        "type": "string"
                    },
                    {
                        "name": "point",
                        "type": "Point"
                    },
                    {
                        "name": "format",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "genDHCommonParamsSpec",
                "return_type": "DHCommonParamsSpec",
                "parameters": [
                    {
                        "name": "pLen",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAsyKeyGeneratorBySpec",
                "return_type": "AsyKeyGeneratorBySpec",
                "parameters": [
                    {
                        "name": "asyKeySpec",
                        "type": "AsyKeySpec"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createKdf",
                "return_type": "Kdf",
                "parameters": [
                    {
                        "name": "algName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "genCipherTextBySpec",
                "return_type": "DataBlob",
                "parameters": [
                    {
                        "name": "spec",
                        "type": "SM2CipherTextSpec"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCipherTextSpec",
                "return_type": "SM2CipherTextSpec",
                "parameters": [
                    {
                        "name": "cipherText",
                        "type": "DataBlob"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "ECCKeyUtil",
                "extends": null
            },
            {
                "class": "DHKeyUtil",
                "extends": null
            },
            {
                "class": "SM2CryptoUtil",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.missionManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.MissionInfo",
                "imported_as": "MissionInfo as _MissionInfo"
            },
            {
                "module": "@ohos.application.MissionListener",
                "imported_as": "MissionListener as _MissionListener"
            },
            {
                "module": "@ohos.application.MissionSnapshot",
                "imported_as": "MissionSnapshot as _MissionSnapshot"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "listener",
                        "type": "MissionListener"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "listenerId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "listenerId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfo",
                "return_type": "Promise<MissionInfo>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "numMax",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfos",
                "return_type": "Promise<Array<MissionInfo>>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "numMax",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionSnapShot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionSnapShot",
                "return_type": "Promise<MissionSnapshot>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLowResolutionMissionSnapShot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLowResolutionMissionSnapShot",
                "return_type": "Promise<MissionSnapshot>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lockMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lockMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAllMissions",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAllMissions",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionToFront",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionToFront",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "StartOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionToFront",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionsToForeground",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionsToForeground",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionIds",
                        "type": "Array"
                    },
                    {
                        "name": "topMission",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionsToForeground",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionsToBackground",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionsToBackground",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "missionIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.wifi": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "WifiDeviceConfig": [
                "SSID",
                "bssid",
                "key",
                "isHiddenSsid",
                "type",
                "creatorUid",
                "disableReason",
                "netId",
                "randomMacType",
                "randomMacAddr",
                "ipType",
                "staticIp"
            ],
            "IpConfig": [
                "ipAddress",
                "gateway",
                "dnsServers",
                "domains"
            ],
            "WifiScanInfo": [
                "SSID",
                "bssid",
                "capabilities",
                "type",
                "rssi",
                "1",
                "frequency",
                "channelWidth",
                "timestamp"
            ],
            "WifiLinkedInfo": [
                "ssid",
                "bssid",
                "networkId",
                "rssi",
                "band",
                "linkSpeed",
                "frequency",
                "isHidden",
                "isRestricted",
                "chload",
                "snr",
                "macAddress",
                "ipAddress",
                "suppState",
                "connState"
            ],
            "IpInfo": [
                "ipAddress",
                "gateway",
                "netmask",
                "primaryDns",
                "secondDns",
                "serverIp",
                "leaseDuration"
            ],
            "HotspotConfig": [
                "ssid",
                "securityType",
                "band",
                "preSharedKey",
                "maxConn"
            ],
            "StationInfo": [
                "name",
                "macAddress",
                "ipAddress"
            ],
            "WifiP2pDevice": [
                "deviceName",
                "deviceAddress",
                "primaryDeviceType",
                "deviceStatus",
                "groupCapabilitys"
            ],
            "WifiP2PConfig": [
                "deviceAddress",
                "2"
            ],
            "WifiP2pGroupInfo": [
                "isP2pGo",
                "ownerInfo",
                "passphrase",
                "interface",
                "groupName",
                "networkId",
                "frequency",
                "clientDevices",
                "goIpAddress"
            ],
            "WifiP2pLinkedInfo": [
                "connectState",
                "isGroupOwner",
                "groupOwnerAddr"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "enableWifi",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableWifi",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWifiActive",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "scan",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScanInfos",
                "return_type": "Promise<Array<WifiScanInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScanInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDeviceConfig",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDeviceConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addUntrustedConfig",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addUntrustedConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeUntrustedConfig",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeUntrustedConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectToNetwork",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectToDevice",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnect",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSignalLevel",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "rssi",
                        "type": "number"
                    },
                    {
                        "name": "band",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLinkedInfo",
                "return_type": "Promise<WifiLinkedInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLinkedInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isConnected",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedFeatures",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isFeatureSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "featureId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceMacAddress",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIpInfo",
                "return_type": "IpInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCountryCode",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reassociate",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reconnect",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceConfigs",
                "return_type": "Array<WifiDeviceConfig>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateNetwork",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableNetwork",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "netId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllNetwork",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDevice",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableHotspot",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableHotspot",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHotspotDualBandSupported",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHotspotActive",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHotspotConfig",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "config",
                        "type": "HotspotConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHotspotConfig",
                "return_type": "HotspotConfig",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStations",
                "return_type": "Array<StationInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pLinkedInfo",
                "return_type": "Promise<WifiP2pLinkedInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pLinkedInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentGroup",
                "return_type": "Promise<WifiP2pGroupInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pPeerDevices",
                "return_type": "Promise<WifiP2pDevice",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pPeerDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGroup",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiP2PConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeGroup",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "p2pConnect",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiP2PConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "p2pCancelConnect",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDiscoverDevices",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDiscoverDevices",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deletePersistentGroup",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "netId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDeviceName",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "devName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.cipher": {
        "dependencies": [],
        "interfaces": {
            "CipherResponse": [],
            "CipherRsaOptions": [],
            "CipherAesOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "rsa",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "CipherRsaOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "aes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "CipherAesOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Cipher",
                "extends": null
            }
        ]
    },
    "@ohos.distributedHardware.hardwareManager": {
        "dependencies": [],
        "interfaces": {
            "HardwareDescriptor": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "pauseDistributedHardware",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "description",
                        "type": "HardwareDescriptor"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resumeDistributedHardware",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "description",
                        "type": "HardwareDescriptor"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDistributedHardware",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "description",
                        "type": "HardwareDescriptor"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.charger": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.util.Queue": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Queue",
                "extends": null
            }
        ]
    },
    "@ohos.net.mdns": {
        "dependencies": [],
        "interfaces": {
            "DiscoveryService": [],
            "LocalServiceInfo": [],
            "ServiceAttribute": [],
            "DiscoveryEventInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "addLocalService",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "serviceInfo",
                        "type": "LocalServiceInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addLocalService",
                "return_type": "Promise<LocalServiceInfo>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "serviceInfo",
                        "type": "LocalServiceInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeLocalService",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "serviceInfo",
                        "type": "LocalServiceInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeLocalService",
                "return_type": "Promise<LocalServiceInfo>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "serviceInfo",
                        "type": "LocalServiceInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createDiscoveryService",
                "return_type": "DiscoveryService",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "serviceType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resolveLocalService",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "serviceInfo",
                        "type": "LocalServiceInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resolveLocalService",
                "return_type": "Promise<LocalServiceInfo>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "serviceInfo",
                        "type": "LocalServiceInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.ConfigurationConstant": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.matrix4": {
        "dependencies": [],
        "interfaces": {
            "TranslateOption": [],
            "ScaleOption": [],
            "RotateOption": [],
            "Point": [],
            "PolyToPolyOptions": [],
            "Matrix4Transit": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "init",
                "return_type": "Matrix4Transit",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "identity",
                "return_type": "Matrix4Transit",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copy",
                "return_type": "Matrix4Transit",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "invert",
                "return_type": "Matrix4Transit",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "combine",
                "return_type": "Matrix4Transit",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Matrix4Transit"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "translate",
                "return_type": "Matrix4Transit",
                "parameters": [
                    {
                        "name": "options",
                        "type": "TranslateOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "scale",
                "return_type": "Matrix4Transit",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ScaleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rotate",
                "return_type": "Matrix4Transit",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RotateOption"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.ApplicationStateChangeCallback": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ApplicationStateChangeCallback",
                "extends": null
            }
        ]
    },
    "@ohos.file.volumeManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "Volume": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAllVolumes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllVolumes",
                "return_type": "Promise<Array<Volume>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mount",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unmount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unmount",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVolumeByUuid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVolumeByUuid",
                "return_type": "Promise<Volume>",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVolumeById",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVolumeById",
                "return_type": "Promise<Volume>",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVolumeDescription",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVolumeDescription",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "uuid",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "format",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    },
                    {
                        "name": "fsType",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "format",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "volumeId",
                        "type": "string"
                    },
                    {
                        "name": "fsType",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "partition",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "diskId",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "partition",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "diskId",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.AccessibilityExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.accessibility",
                "imported_as": "type accessibility"
            }
        ],
        "interfaces": {
            "AccessibilityEvent": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "AccessibilityExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.quickFixManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "HapModuleQuickFixInfo": [],
            "ApplicationQuickFixInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "applyQuickFix",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hapModuleQuickFixFiles",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "applyQuickFix",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "hapModuleQuickFixFiles",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "revokeQuickFix",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "revokeQuickFix",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationQuickFixInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationQuickFixInfo",
                "return_type": "Promise<ApplicationQuickFixInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.worker": {
        "dependencies": [],
        "interfaces": {
            "WorkerOptions": [],
            "Event": [],
            "PostMessageOptions": [],
            "EventListener": [],
            "WorkerEventListener": [],
            "EventTarget": [],
            "WorkerEventTarget": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "contains",
                "extends": null
            },
            {
                "class": "contains",
                "extends": null
            },
            {
                "class": "contains",
                "extends": null
            },
            {
                "class": "ThreadWorker",
                "extends": null
            },
            {
                "class": "contains",
                "extends": null
            },
            {
                "class": "contains",
                "extends": null
            },
            {
                "class": "RestrictedWorker",
                "extends": "ThreadWorker"
            },
            {
                "class": "contains",
                "extends": null
            },
            {
                "class": "Worker",
                "extends": null
            }
        ]
    },
    "@ohos.measure": {
        "dependencies": [],
        "interfaces": {
            "MeasureOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "measureText",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "options",
                        "type": "MeasureOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "measureTextSize",
                "return_type": "SizeOptions",
                "parameters": [
                    {
                        "name": "options",
                        "type": "MeasureOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "MeasureText",
                "extends": null
            }
        ]
    },
    "@ohos.uri": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createFromParts",
                "return_type": "URI",
                "parameters": [
                    {
                        "name": "scheme",
                        "type": "string"
                    },
                    {
                        "name": "ssp",
                        "type": "string"
                    },
                    {
                        "name": "fragment",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "URI",
                "extends": null
            }
        ]
    },
    "@system.app": {
        "dependencies": [],
        "interfaces": {
            "AppResponse": [],
            "ScreenOnVisibleOptions": [],
            "RequestFullWindowOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getInfo",
                "return_type": "AppResponse",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminate",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "screenOnVisible",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestFullWindow",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setImageCacheCount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setImageRawDataCacheSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setImageFileCacheSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "info",
                "extends": null
            },
            {
                "class": "info",
                "extends": null
            },
            {
                "class": "App",
                "extends": null
            }
        ]
    },
    "@ohos.bundle.overlay": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setOverlayEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setOverlayEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setOverlayEnabledByBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setOverlayEnabledByBundleName",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOverlayModuleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOverlayModuleInfo",
                "return_type": "Promise<OverlayModuleInfo>",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTargetOverlayModuleInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetModuleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTargetOverlayModuleInfos",
                "return_type": "Promise<Array<OverlayModuleInfo>>",
                "parameters": [
                    {
                        "name": "targetModuleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOverlayModuleInfoByBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOverlayModuleInfoByBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOverlayModuleInfoByBundleName",
                "return_type": "Promise<Array<OverlayModuleInfo>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTargetOverlayModuleInfosByBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTargetOverlayModuleInfosByBundleName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTargetOverlayModuleInfosByBundleName",
                "return_type": "Promise<Array<OverlayModuleInfo>>",
                "parameters": [
                    {
                        "name": "targetBundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.Want": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Want",
                "extends": null
            }
        ]
    },
    "@ohos.bundle.installer": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "BundleInstaller": [],
            "HashParam": [],
            "VerifyCodeParam": [],
            "PGOParam": [],
            "Parameters": [],
            "InstallParam": [],
            "UninstallParam": [],
            "CreateAppCloneParam": [],
            "DestroyAppCloneParam": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getBundleInstaller",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInstaller",
                "return_type": "Promise<BundleInstaller>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInstallerSync",
                "return_type": "BundleInstaller",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.UIExtensionContentSession": {
        "dependencies": [
            {
                "module": "@ohos.application.AbilityStartCallback",
                "imported_as": "type AbilityStartCallback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "type StartOptions"
            },
            {
                "module": "@ohos.uiExtensionHost",
                "imported_as": "type uiExtensionHost"
            },
            {
                "module": "@ohos.arkui.uiExtension",
                "imported_as": "type uiExtension"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "UIExtensionContentSession",
                "extends": null
            }
        ]
    },
    "@ohos.file.BackupExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "BackupExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "@ohos.app.ability.StartOptions": {
        "dependencies": [
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "StartOptions",
                "extends": null
            }
        ]
    },
    "@ohos.InputMethodExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "InputMethodExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "@ohos.userIAM.userAuth": {
        "dependencies": [],
        "interfaces": {
            "Authenticator": [],
            "IUserAuthCallback": [],
            "AuthResult": [],
            "AuthEvent": [],
            "AuthResultInfo": [],
            "TipInfo": [],
            "AuthInstance": [],
            "EnrolledState": [],
            "ReuseUnlockResult": [],
            "AuthParam": [],
            "WidgetParam": [],
            "UserAuthResult": [],
            "IAuthCallback": [],
            "UserAuthInstance": [],
            "UserAuthWidgetMgr": [],
            "IAuthWidgetCallback": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAuthenticator",
                "return_type": "Authenticator",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAvailableStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "authType",
                        "type": "UserAuthType"
                    },
                    {
                        "name": "authTrustLevel",
                        "type": "AuthTrustLevel"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getEnrolledState",
                "return_type": "EnrolledState",
                "parameters": [
                    {
                        "name": "authType",
                        "type": "UserAuthType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAuthInstance",
                "return_type": "AuthInstance",
                "parameters": [
                    {
                        "name": "challenge",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "authType",
                        "type": "UserAuthType"
                    },
                    {
                        "name": "authTrustLevel",
                        "type": "AuthTrustLevel"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserAuthInstance",
                "return_type": "UserAuthInstance",
                "parameters": [
                    {
                        "name": "authParam",
                        "type": "AuthParam"
                    },
                    {
                        "name": "widgetParam",
                        "type": "WidgetParam"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendNotice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "noticeType",
                        "type": "NoticeType"
                    },
                    {
                        "name": "eventData",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserAuthWidgetMgr",
                "return_type": "UserAuthWidgetMgr",
                "parameters": [
                    {
                        "name": "version",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "UserAuth",
                "extends": null
            },
            {
                "class": "instance",
                "extends": null
            }
        ]
    },
    "@ohos.intl": {
        "dependencies": [],
        "interfaces": {
            "LocaleOptions": [],
            "DateTimeOptions": [],
            "NumberOptions": [],
            "CollatorOptions": [],
            "PluralRulesOptions": [],
            "RelativeTimeFormatInputOptions": [],
            "RelativeTimeFormatResolvedOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "Locale",
                "extends": null
            },
            {
                "class": "DateTimeFormat",
                "extends": null
            },
            {
                "class": "NumberFormat",
                "extends": null
            },
            {
                "class": "Collator",
                "extends": null
            },
            {
                "class": "PluralRules",
                "extends": null
            },
            {
                "class": "RelativeTimeFormat",
                "extends": null
            }
        ]
    },
    "@ohos.bundle.launcherBundleManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundleManager.LauncherAbilityInfo",
                "imported_as": "LauncherAbilityInfo as _LauncherAbilityInfo"
            },
            {
                "module": "@ohos.bundleManager.ShortcutInfo",
                "imported_as": "ShortcutInfo as _ShortcutInfo"
            },
            {
                "module": "@ohos.bundleManager.ShortcutInfo",
                "imported_as": "ShortcutWant as _ShortcutWant"
            },
            {
                "module": "@ohos.bundleManager.ShortcutInfo",
                "imported_as": "ParameterItem as _ParameterItem"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getLauncherAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLauncherAbilityInfo",
                "return_type": "Promise<Array<LauncherAbilityInfo>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLauncherAbilityInfoSync",
                "return_type": "Array<LauncherAbilityInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllLauncherAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllLauncherAbilityInfo",
                "return_type": "Promise<Array<LauncherAbilityInfo>>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShortcutInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShortcutInfo",
                "return_type": "Promise<Array<ShortcutInfo>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShortcutInfoSync",
                "return_type": "Array<ShortcutInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShortcutInfoSync",
                "return_type": "Array<ShortcutInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startShortcut",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "shortcutInfo",
                        "type": "ShortcutInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.uiAppearance": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setDarkMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "DarkMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDarkMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "DarkMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDarkMode",
                "return_type": "DarkMode",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFontScale",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fontScale",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFontScale",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFontWeightScale",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "fontWeightScale",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFontWeightScale",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.StaticSubscriberExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "StaticSubscriberExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "@ohos.usb": {
        "dependencies": [],
        "interfaces": {
            "USBEndpoint": [],
            "USBInterface": [],
            "USBConfig": [],
            "USBDevice": [],
            "USBDevicePipe": [],
            "USBPortStatus": [],
            "USBPort": [],
            "USBControlParams": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getDevices",
                "return_type": "Array<Readonly<USBDevice>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectDevice",
                "return_type": "Readonly<USBDevicePipe>",
                "parameters": [
                    {
                        "name": "device",
                        "type": "USBDevice"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasRight",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "deviceName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestRight",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "deviceName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "usbFunctionsFromString",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "usbFunctionsToString",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "FunctionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCurrentFunctions",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "funcs",
                        "type": "FunctionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentFunctions",
                "return_type": "FunctionType",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPorts",
                "return_type": "Array<USBPort>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedModes",
                "return_type": "PortModeType",
                "parameters": [
                    {
                        "name": "portId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPortRoles",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "portId",
                        "type": "number"
                    },
                    {
                        "name": "powerRole",
                        "type": "PowerRoleType"
                    },
                    {
                        "name": "dataRole",
                        "type": "DataRoleType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "claimInterface",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "iface",
                        "type": "USBInterface"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseInterface",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "iface",
                        "type": "USBInterface"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setConfiguration",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "config",
                        "type": "USBConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setInterface",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "iface",
                        "type": "USBInterface"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRawDescriptor",
                "return_type": "Uint8Array",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFileDescriptor",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "controlTransfer",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "controlparam",
                        "type": "USBControlParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bulkTransfer",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    },
                    {
                        "name": "endpoint",
                        "type": "USBEndpoint"
                    },
                    {
                        "name": "buffer",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closePipe",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "pipe",
                        "type": "USBDevicePipe"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.secureElement": {
        "dependencies": [],
        "interfaces": {
            "SEService": [],
            "Reader": [],
            "Session": [],
            "Channel": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "newSEService",
                "return_type": "SEService",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createService",
                "return_type": "Promise<SEService>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.form.FormExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.form.formBindingData",
                "imported_as": "formBindingData"
            },
            {
                "module": "@ohos.app.form.formInfo",
                "imported_as": "formInfo"
            },
            {
                "module": "@ohos.application.FormExtensionContext",
                "imported_as": "FormExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "FormExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.WorkSchedulerExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.resourceschedule.workScheduler",
                "imported_as": "workScheduler"
            },
            {
                "module": "@ohos.application.WorkSchedulerExtensionContext",
                "imported_as": "_WorkSchedulerExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "WorkSchedulerExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.bundle.appControl": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "DisposedRule": [],
            "UninstallDisposedRule": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setDisposedStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "disposedWant",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDisposedStatus",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "disposedWant",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDisposedStatusSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "disposedWant",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisposedStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisposedStatus",
                "return_type": "Promise<Want>",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisposedStatusSync",
                "return_type": "Want",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteDisposedStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteDisposedStatus",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteDisposedStatusSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisposedRule",
                "return_type": "DisposedRule",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDisposedRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appId",
                        "type": "string"
                    },
                    {
                        "name": "rule",
                        "type": "DisposedRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setUninstallDisposedRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appIdentifier",
                        "type": "string"
                    },
                    {
                        "name": "rule",
                        "type": "UninstallDisposedRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUninstallDisposedRule",
                "return_type": "UninstallDisposedRule",
                "parameters": [
                    {
                        "name": "appIdentifier",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteUninstallDisposedRule",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appIdentifier",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.wantConstant": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.ability.FenceExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.FenceExtensionContext",
                "imported_as": "type FenceExtensionContext"
            },
            {
                "module": "@ohos.geoLocationManager",
                "imported_as": "geoLocationManager"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "FenceExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.multimodalInput.gestureEvent": {
        "dependencies": [],
        "interfaces": {
            "Pinch": [],
            "Rotate": [],
            "ThreeFingersSwipe": [],
            "FourFingersSwipe": [],
            "SwipeInward": [],
            "ThreeFingersTap": [],
            "TouchGestureEvent": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.form.formBindingData": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {
            "FormBindingData": [],
            "ProxyData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createFormBindingData",
                "return_type": "FormBindingData",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.graphics.hdrCapability": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.wifiManagerExt": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enableHotspot",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableHotspot",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedPowerMode",
                "return_type": "Promise<Array<PowerMode>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedPowerMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerMode",
                "return_type": "Promise<PowerMode>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPowerMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "PowerMode"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.print": {
        "dependencies": [
            {
                "module": "@ohos.application.Context",
                "imported_as": "type Context"
            }
        ],
        "interfaces": {
            "PrintTask": [],
            "PrintDocumentAdapter": [],
            "PrintAttributes": [],
            "PrintPageRange": [],
            "PrintMargin": [],
            "PrinterRange": [],
            "PreviewAttribute": [],
            "PrintResolution": [],
            "PrintPageSize": [],
            "PrinterCapability": [],
            "PrinterInfo": [],
            "PrintJob": [],
            "PrinterExtensionInfo": [],
            "PrinterInformation": [],
            "PrinterCapabilities": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "print",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "files",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "print",
                "return_type": "Promise<PrintTask>",
                "parameters": [
                    {
                        "name": "files",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "print",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "files",
                        "type": "Array"
                    },
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "print",
                "return_type": "Promise<PrintTask>",
                "parameters": [
                    {
                        "name": "files",
                        "type": "Array"
                    },
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "print",
                "return_type": "Promise<PrintTask>",
                "parameters": [
                    {
                        "name": "jobName",
                        "type": "string"
                    },
                    {
                        "name": "printAdapter",
                        "type": "PrintDocumentAdapter"
                    },
                    {
                        "name": "printAttributes",
                        "type": "PrintAttributes"
                    },
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAllPrinterExtensionInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAllPrinterExtensionInfos",
                "return_type": "Promise<Array<PrinterExtensionInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDiscoverPrinter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "extensionList",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDiscoverPrinter",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "extensionList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDiscoverPrinter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDiscoverPrinter",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectPrinter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectPrinter",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectPrinter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectPrinter",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryPrinterCapability",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryPrinterCapability",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startPrintJob",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "jobInfo",
                        "type": "PrintJob"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startPrintJob",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "jobInfo",
                        "type": "PrintJob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPrintJob",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPrintJob",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestPrintPreview",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "jobInfo",
                        "type": "PrintJob"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestPrintPreview",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "jobInfo",
                        "type": "PrintJob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addPrinters",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "printers",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addPrinters",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printers",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePrinters",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "printerIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePrinters",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePrinters",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "printers",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePrinters",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printers",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePrinterState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "PrinterState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePrinterState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "PrinterState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePrintJobState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "PrintJobState"
                    },
                    {
                        "name": "subState",
                        "type": "PrintJobSubState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePrintJobState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "PrintJobState"
                    },
                    {
                        "name": "subState",
                        "type": "PrintJobSubState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateExtensionInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateExtensionInfo",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAllPrintJobs",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAllPrintJobs",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryPrintJobList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryPrintJobList",
                "return_type": "Promise<Array<PrintJob>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryPrintJobById",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryPrintJobById",
                "return_type": "Promise<PrintJob>",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startGettingPrintFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    },
                    {
                        "name": "printAttributes",
                        "type": "PrintAttributes"
                    },
                    {
                        "name": "fd",
                        "type": "number"
                    },
                    {
                        "name": "onFileStateChanged",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyPrintService",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyPrintService",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "jobId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddedPrinters",
                "return_type": "Promise<Array<string>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrinterInfoById",
                "return_type": "Promise<PrinterInfo>",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyPrintServiceEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "event",
                        "type": "ApplicationEvent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addPrinterToDiscovery",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerInformation",
                        "type": "PrinterInformation"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updatePrinterInDiscovery",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerInformation",
                        "type": "PrinterInformation"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removePrinterFromDiscovery",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrinterInformationById",
                "return_type": "Promise<PrinterInformation>",
                "parameters": [
                    {
                        "name": "printerId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimedia.cameraPicker": {
        "dependencies": [
            {
                "module": "@ohos.application.Context",
                "imported_as": "type Context"
            },
            {
                "module": "@ohos.multimedia.camera",
                "imported_as": "type camera"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "pick",
                "return_type": "Promise<PickerResult>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "mediaTypes",
                        "type": "Array"
                    },
                    {
                        "name": "pickerProfile",
                        "type": "PickerProfile"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "PickerProfile",
                "extends": null
            },
            {
                "class": "PickerResult",
                "extends": null
            }
        ]
    },
    "@ohos.file.securityLabel": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setSecurityLabel",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "DataLevel"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSecurityLabel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "DataLevel"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSecurityLabelSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "DataLevel"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSecurityLabel",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSecurityLabel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSecurityLabelSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.InputMethodExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.InputMethodExtensionContext",
                "imported_as": "type InputMethodExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "InputMethodExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.app.ability.dialogRequest": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "WindowRect": [],
            "RequestInfo": [],
            "RequestResult": [],
            "RequestCallback": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getRequestInfo",
                "return_type": "RequestInfo",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRequestCallback",
                "return_type": "RequestCallback",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.systemCapability": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "querySystemCapabilities",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "querySystemCapabilities",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.net.ethernet": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            }
        ],
        "interfaces": {
            "InterfaceConfiguration": [],
            "InterfaceStateInfo": [],
            "MacAddressInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getIfaceConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "iface",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIfaceConfig",
                "return_type": "Promise<InterfaceConfiguration>",
                "parameters": [
                    {
                        "name": "iface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setIfaceConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "iface",
                        "type": "string"
                    },
                    {
                        "name": "ic",
                        "type": "InterfaceConfiguration"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setIfaceConfig",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "iface",
                        "type": "string"
                    },
                    {
                        "name": "ic",
                        "type": "InterfaceConfiguration"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isIfaceActive",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "iface",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isIfaceActive",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "iface",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllActiveIfaces",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllActiveIfaces",
                "return_type": "Promise<Array<string>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMacAddress",
                "return_type": "Promise<Array<MacAddressInfo>>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.fileAccess": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.application.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.file.fs",
                "imported_as": "Filter"
            }
        ],
        "interfaces": {
            "FileInfo": [],
            "FileIterator": [],
            "RootInfo": [],
            "RootIterator": [],
            "CopyResult": [],
            "NotifyMessage": [],
            "MoveResult": [],
            "FileAccessHelper": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getFileAccessAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFileAccessAbilityInfo",
                "return_type": "Promise<Array<Want>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createFileAccessHelper",
                "return_type": "FileAccessHelper",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createFileAccessHelper",
                "return_type": "FileAccessHelper",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "wants",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "permissions": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.pluginComponent": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "PluginComponentTemplate": [],
            "PushParameters": [],
            "PushParameterForStage": [],
            "RequestParameters": [],
            "RequestParameterForStage": [],
            "RequestCallbackParameters": [],
            "RequestEventResult": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "push",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "param",
                        "type": "PushParameters"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "request",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "param",
                        "type": "RequestParameters"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "push",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "param",
                        "type": "PushParameterForStage"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "request",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "param",
                        "type": "RequestParameterForStage"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "eventType",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "OnPushEventCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.abilityManager": {
        "dependencies": [
            {
                "module": "@ohos.ability.abilityResult",
                "imported_as": "AbilityResult"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            },
            {
                "module": "@ohos.application.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.application.AbilityRunningInfo",
                "imported_as": "AbilityRunningInfo as _AbilityRunningInfo"
            },
            {
                "module": "@ohos.application.ExtensionRunningInfo",
                "imported_as": "ExtensionRunningInfo as _ExtensionRunningInfo"
            },
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observer",
                        "type": "AbilityForegroundStateObserver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateConfiguration",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "Configuration"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateConfiguration",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "Configuration"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityRunningInfos",
                "return_type": "Promise<Array<AbilityRunningInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityRunningInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getExtensionRunningInfos",
                "return_type": "Promise<Array<ExtensionRunningInfo>>",
                "parameters": [
                    {
                        "name": "upperLimit",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getExtensionRunningInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "upperLimit",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTopAbility",
                "return_type": "Promise<ElementName>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTopAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireShareData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireShareData",
                "return_type": "Promise<Record<string",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifySaveAsResult",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "AbilityResult"
                    },
                    {
                        "name": "requestCode",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifySaveAsResult",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "AbilityResult"
                    },
                    {
                        "name": "requestCode",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getForegroundUIAbilities",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getForegroundUIAbilities",
                "return_type": "Promise<Array<AbilityStateData>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isEmbeddedOpenAllowed",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "appId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyDebugAssertResult",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "sessionId",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "UserStatus"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setResidentProcessEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.net.vpn": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            },
            {
                "module": "@ohos.application.UIAbilityContext",
                "imported_as": "type _AbilityContext"
            }
        ],
        "interfaces": {
            "VpnConnection": [],
            "VpnConfig": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createVpnConnection",
                "return_type": "VpnConnection",
                "parameters": [
                    {
                        "name": "context",
                        "type": "AbilityContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSysVpnConfig",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "SysVpnConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteSysVpnConfig",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "vpnId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSysVpnConfigList",
                "return_type": "Promise<Array<SysVpnConfig>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSysVpnConfig",
                "return_type": "Promise<SysVpnConfig>",
                "parameters": [
                    {
                        "name": "vpnId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getConnectedSysVpnConfig",
                "return_type": "Promise<SysVpnConfig>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.nfc.tag": {
        "dependencies": [
            {
                "module": "@ohos.tag.nfctech",
                "imported_as": "IsoDepTag as _IsoDepTag"
            },
            {
                "module": "@ohos.tag.nfctech",
                "imported_as": "NdefTag as _NdefTag"
            },
            {
                "module": "@ohos.tag.nfctech",
                "imported_as": "MifareClassicTag as _MifareClassicTag"
            },
            {
                "module": "@ohos.tag.nfctech",
                "imported_as": "MifareUltralightTag as _MifareUltralightTag"
            },
            {
                "module": "@ohos.tag.nfctech",
                "imported_as": "NdefFormatableTag as _NdefFormatableTag"
            },
            {
                "module": "@ohos.tag.nfctech",
                "imported_as": "NdefMessage as _NdefMessage"
            },
            {
                "module": "@ohos.tag.tagSession",
                "imported_as": "TagSession as _TagSession"
            },
            {
                "module": "@ohos.rpc",
                "imported_as": "type rpc"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "TagInfo": [],
            "NdefRecord": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getNfcATag",
                "return_type": "NfcATag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcA",
                "return_type": "NfcATag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcBTag",
                "return_type": "NfcBTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcB",
                "return_type": "NfcBTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcFTag",
                "return_type": "NfcFTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcF",
                "return_type": "NfcFTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcVTag",
                "return_type": "NfcVTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNfcV",
                "return_type": "NfcVTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIsoDep",
                "return_type": "IsoDepTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNdef",
                "return_type": "NdefTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMifareClassic",
                "return_type": "MifareClassicTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMifareUltralight",
                "return_type": "MifareUltralightTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNdefFormatable",
                "return_type": "NdefFormatableTag",
                "parameters": [
                    {
                        "name": "tagInfo",
                        "type": "TagInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTagInfo",
                "return_type": "TagInfo",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerForegroundDispatch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "discTech",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterForegroundDispatch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "discTech",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeUriRecord",
                "return_type": "NdefRecord",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeTextRecord",
                "return_type": "NdefRecord",
                "parameters": [
                    {
                        "name": "text",
                        "type": "string"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeMimeRecord",
                "return_type": "NdefRecord",
                "parameters": [
                    {
                        "name": "mimeType",
                        "type": "string"
                    },
                    {
                        "name": "mimeData",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeExternalRecord",
                "return_type": "NdefRecord",
                "parameters": [
                    {
                        "name": "domainName",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "externalData",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNdefMessage",
                "return_type": "NdefMessage",
                "parameters": [
                    {
                        "name": "data",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNdefMessage",
                "return_type": "NdefMessage",
                "parameters": [
                    {
                        "name": "ndefRecords",
                        "type": "NdefRecord"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "messageToBytes",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "ndefMessage",
                        "type": "NdefMessage"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            }
        ]
    },
    "@ohos.file.storageStatistics": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "BundleStats": [],
            "StorageStats": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getTotalSizeOfVolume",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "volumeUuid",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalSizeOfVolume",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "volumeUuid",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeSizeOfVolume",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "volumeUuid",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeSizeOfVolume",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "volumeUuid",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleStats",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "packageName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleStats",
                "return_type": "Promise<BundleStats>",
                "parameters": [
                    {
                        "name": "packageName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentBundleStats",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentBundleStats",
                "return_type": "Promise<BundleStats>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemSize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserStorageStats",
                "return_type": "Promise<StorageStats>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserStorageStats",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserStorageStats",
                "return_type": "Promise<StorageStats>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserStorageStats",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalSize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalSizeSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeSize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeSizeSync",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.graphics.colorSpaceManager": {
        "dependencies": [],
        "interfaces": {
            "ColorSpacePrimaries": [],
            "ColorSpaceManager": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "ColorSpaceManager",
                "parameters": [
                    {
                        "name": "colorSpaceName",
                        "type": "ColorSpace"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "ColorSpaceManager",
                "parameters": [
                    {
                        "name": "primaries",
                        "type": "ColorSpacePrimaries"
                    },
                    {
                        "name": "gamma",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.storage": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "Storage": [],
            "StorageObserver": [
                "key"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getStorageSync",
                "return_type": "Storage",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStorage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStorage",
                "return_type": "Promise<Storage>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteStorageSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteStorage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteStorage",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeStorageFromCacheSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeStorageFromCache",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeStorageFromCache",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bundle.bundleMonitor": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "BundleChangedInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "BundleChangedEvent"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "BundleChangedEvent"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.StaticSubscriberExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.commonEvent.commonEventData",
                "imported_as": "CommonEventData"
            },
            {
                "module": "@ohos.application.StaticSubscriberExtensionContext",
                "imported_as": "StaticSubscriberExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "StaticSubscriberExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.multimodalInput.shortKey": {
        "dependencies": [],
        "interfaces": {
            "FingerprintEvent": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setKeyDownDuration",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "businessKey",
                        "type": "string"
                    },
                    {
                        "name": "delay",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setKeyDownDuration",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "businessKey",
                        "type": "string"
                    },
                    {
                        "name": "delay",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.geolocation": {
        "dependencies": [],
        "interfaces": {
            "GeolocationResponse": [],
            "GetLocationOption": [],
            "GetLocationTypeResponse": [],
            "GetLocationTypeOption": [],
            "SubscribeLocationOption": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getLocation",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocationType",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeLocationOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedCoordTypes",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Geolocation",
                "extends": null
            }
        ]
    },
    "@ohos.batteryStatistics": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {
            "BatteryStatsInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getBatteryStats",
                "return_type": "Promise<Array<BatteryStatsInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBatteryStats",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppPowerValue",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppPowerPercent",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHardwareUnitPowerValue",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "type",
                        "type": "ConsumptionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHardwareUnitPowerPercent",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "type",
                        "type": "ConsumptionType"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.backup": {
        "dependencies": [],
        "interfaces": {
            "FileMeta": [],
            "FileData": [],
            "IncrementalBackupTime": [],
            "FileManifestData": [],
            "BackupParams": [],
            "BackupPriority": [],
            "GeneralCallbacks": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getLocalCapabilities",
                "return_type": "Promise<FileData>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalCapabilities",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalCapabilities",
                "return_type": "Promise<FileData>",
                "parameters": [
                    {
                        "name": "dataList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBackupInfo",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "bundleToBackup",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateTimer",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "timeout",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateSendRate",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "sendRate",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "SessionBackup",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "SessionRestore",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "IncrementalBackupSession",
                "extends": null
            }
        ]
    },
    "@ohos.bundle.innerBundleManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundle.launcherAbilityInfo",
                "imported_as": "LauncherAbilityInfo"
            },
            {
                "module": "@ohos.bundle.shortcutInfo",
                "imported_as": "ShortcutInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getLauncherAbilityInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLauncherAbilityInfos",
                "return_type": "Promise<Array<LauncherAbilityInfo>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleStatusCallback",
                        "type": "BundleStatusCallback"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "bundleStatusCallback",
                        "type": "BundleStatusCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllLauncherAbilityInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllLauncherAbilityInfos",
                "return_type": "Promise<Array<LauncherAbilityInfo>>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShortcutInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShortcutInfos",
                "return_type": "Promise<Array<ShortcutInfo>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.network": {
        "dependencies": [],
        "interfaces": {
            "NetworkResponse": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Network",
                "extends": null
            }
        ]
    },
    "@ohos.bluetooth.a2dp": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.baseProfile",
                "imported_as": "type baseProfile"
            }
        ],
        "interfaces": {
            "CodecInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createA2dpSrcProfile",
                "return_type": "A2dpSourceProfile",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.contact": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type Context"
            }
        ],
        "interfaces": {
            "ContactSelectionOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "addContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "contact",
                        "type": "Contact"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "contact",
                        "type": "Contact"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addContact",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "contact",
                        "type": "Contact"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addContact",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "contact",
                        "type": "Contact"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "selectContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "selectContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "selectContact",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "selectContacts",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "selectContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ContactSelectionOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "selectContacts",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ContactSelectionOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteContact",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteContact",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "Promise<Contact>",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContact",
                "return_type": "Promise<Contact>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContacts",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [
                    {
                        "name": "email",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByEmail",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "email",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryContactsByPhoneNumber",
                "return_type": "Promise<Array<Contact>>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryGroups",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryGroups",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryGroups",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryGroups",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryGroups",
                "return_type": "Promise<Array<Group>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryGroups",
                "return_type": "Promise<Array<Group>>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryHolders",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryHolders",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryHolders",
                "return_type": "Promise<Array<Holder>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryHolders",
                "return_type": "Promise<Array<Holder>>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryKey",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "holder",
                        "type": "Holder"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryKey",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryKey",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryMyCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryMyCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryMyCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryMyCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryMyCard",
                "return_type": "Promise<Contact>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryMyCard",
                "return_type": "Promise<Contact>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "contact",
                        "type": "Contact"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "contact",
                        "type": "Contact"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "contact",
                        "type": "Contact"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "contact",
                        "type": "Contact"
                    },
                    {
                        "name": "attrs",
                        "type": "ContactAttributes"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContact",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "contact",
                        "type": "Contact"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContact",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "contact",
                        "type": "Contact"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocalContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocalContact",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocalContact",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocalContact",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMyCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMyCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMyCard",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMyCard",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Contact",
                "extends": null
            },
            {
                "class": "ContactAttributes",
                "extends": null
            },
            {
                "class": "Email",
                "extends": null
            },
            {
                "class": "Event",
                "extends": null
            },
            {
                "class": "Group",
                "extends": null
            },
            {
                "class": "Holder",
                "extends": null
            },
            {
                "class": "ImAddress",
                "extends": null
            },
            {
                "class": "Name",
                "extends": null
            },
            {
                "class": "NickName",
                "extends": null
            },
            {
                "class": "Note",
                "extends": null
            },
            {
                "class": "Organization",
                "extends": null
            },
            {
                "class": "PhoneNumber",
                "extends": null
            },
            {
                "class": "Portrait",
                "extends": null
            },
            {
                "class": "PostalAddress",
                "extends": null
            },
            {
                "class": "Relation",
                "extends": null
            },
            {
                "class": "SipAddress",
                "extends": null
            },
            {
                "class": "Website",
                "extends": null
            }
        ]
    },
    "@ohos.bluetooth": {
        "dependencies": [],
        "interfaces": {
            "BaseProfile": [],
            "GattServer": [],
            "GattClientDevice": [],
            "GattService": [
                "serviceUuid",
                "isPrimary"
            ],
            "BLECharacteristic": [],
            "BLEDescriptor": [],
            "NotifyCharacteristic": [],
            "CharacteristicReadReq": [
                "deviceId",
                "transId",
                "offset",
                "characteristicUuid",
                "serviceUuid"
            ],
            "CharacteristicWriteReq": [
                "deviceId",
                "transId",
                "offset",
                "isPrep",
                "needRsp",
                "value",
                "characteristicUuid",
                "serviceUuid"
            ],
            "DescriptorReadReq": [
                "deviceId",
                "transId",
                "offset",
                "descriptorUuid",
                "characteristicUuid",
                "serviceUuid"
            ],
            "DescriptorWriteReq": [
                "deviceId",
                "transId",
                "offset",
                "isPrep",
                "needRsp",
                "value",
                "descriptorUuid",
                "characteristicUuid",
                "serviceUuid"
            ],
            "ServerResponse": [
                "deviceId",
                "transId",
                "status",
                "offset",
                "value"
            ],
            "BLEConnectChangedState": [
                "deviceId",
                "state"
            ],
            "ScanResult": [
                "deviceId",
                "rssi",
                "data"
            ],
            "AdvertiseSetting": [],
            "AdvertiseData": [
                "serviceUuids",
                "manufactureData",
                "serviceData"
            ],
            "ManufactureData": [
                "manufactureId",
                "manufactureValue"
            ],
            "ServiceData": [
                "serviceUuid",
                "serviceValue"
            ],
            "ScanFilter": [],
            "ScanOptions": [],
            "SppOption": [
                "uuid",
                "secure"
            ],
            "PinRequiredParam": [
                "deviceId",
                "pinCode"
            ],
            "DeviceClass": [
                "majorClass",
                "majorMinorClass",
                "classOfDevice"
            ],
            "BondStateParam": [
                "deviceId",
                "state"
            ],
            "StateChangeParam": [
                "deviceId",
                "state"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getState",
                "return_type": "BluetoothState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBtConnectionState",
                "return_type": "ProfileConnectionState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pairDevice",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelPairedDevice",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceName",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteDeviceClass",
                "return_type": "DeviceClass",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableBluetooth",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableBluetooth",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocalName",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPairedDevices",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileConnState",
                "return_type": "ProfileConnectionState",
                "parameters": [
                    {
                        "name": "profileId",
                        "type": "ProfileId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDevicePairingConfirmation",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "device",
                        "type": "string"
                    },
                    {
                        "name": "accept",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setLocalName",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBluetoothScanMode",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "ScanMode"
                    },
                    {
                        "name": "duration",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBluetoothScanMode",
                "return_type": "ScanMode",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBluetoothDiscovery",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBluetoothDiscovery",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppListen",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "option",
                        "type": "SppOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppAccept",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "serverSocket",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppConnect",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "device",
                        "type": "string"
                    },
                    {
                        "name": "option",
                        "type": "SppOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppCloseServerSocket",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "socket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppCloseClientSocket",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "socket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppWrite",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    },
                    {
                        "name": "data",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfile",
                "return_type": "A2dpSourceProfile",
                "parameters": [
                    {
                        "name": "profileId",
                        "type": "ProfileId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGattServer",
                "return_type": "GattServer",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGattClientDevice",
                "return_type": "GattClientDevice",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getConnectedBLEDevices",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBLEScan",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filters",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBLEScan",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@ohos.resourceschedule.deviceStandby": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "ExemptedAppInfo": [],
            "ResourceRequest": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getExemptedApps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "resourceTypes",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getExemptedApps",
                "return_type": "Promise<Array<ExemptedAppInfo>>",
                "parameters": [
                    {
                        "name": "resourceTypes",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestExemptionResource",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "ResourceRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseExemptionResource",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "ResourceRequest"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.thermal": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "subscribeThermalLevel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerThermalLevelCallback",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeThermalLevel",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterThermalLevelCallback",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getThermalLevel",
                "return_type": "ThermalLevel",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLevel",
                "return_type": "ThermalLevel",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.notification": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.notification.notificationActionButton",
                "imported_as": "NotificationActionButton"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationBasicContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationLongTextContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationMultiLineContent"
            },
            {
                "module": "@ohos.notification.notificationContent",
                "imported_as": "NotificationPictureContent"
            },
            {
                "module": "@ohos.notification.notificationFlags",
                "imported_as": "NotificationFlags"
            },
            {
                "module": "@ohos.notification.notificationFlags",
                "imported_as": "NotificationFlagStatus"
            },
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "NotificationRequest"
            },
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "DistributedOptions"
            },
            {
                "module": "@ohos.notification.notificationSlot",
                "imported_as": "NotificationSlot"
            },
            {
                "module": "@ohos.notification.notificationSorting",
                "imported_as": "NotificationSorting"
            },
            {
                "module": "@ohos.notification.notificationSubscribeInfo",
                "imported_as": "NotificationSubscribeInfo"
            },
            {
                "module": "@ohos.notification.notificationSubscriber",
                "imported_as": "NotificationSubscriber"
            },
            {
                "module": "@ohos.notification.notificationSubscriber",
                "imported_as": "SubscribeCallbackData"
            },
            {
                "module": "@ohos.notification.notificationSubscriber",
                "imported_as": "EnabledNotificationCallbackData"
            },
            {
                "module": "@ohos.notification.notificationTemplate",
                "imported_as": "NotificationTemplate"
            },
            {
                "module": "@ohos.notification.notificationUserInput",
                "imported_as": "NotificationUserInput"
            }
        ],
        "interfaces": {
            "BundleOption": [],
            "NotificationKey": [],
            "DoNotDisturbDate": [
                "type",
                "begin",
                "end"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "NotificationRequest"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "label",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAll",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SlotType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlots",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slots",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSlots",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slots",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlot",
                "return_type": "Promise<NotificationSlot>",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlots",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlots",
                "return_type": "Promise<Array<NotificationSlot>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "SlotType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllSlots",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllSlots",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    },
                    {
                        "name": "info",
                        "type": "NotificationSubscribeInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "NotificationSubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableNotification",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableNotification",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNotificationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "displayBadge",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "displayBadge",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBadgeDisplayed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBadgeDisplayed",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSlotByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSlotByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotsByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotsByBundle",
                "return_type": "Promise<Array<NotificationSlot>>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotNumByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSlotNumByBundle",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "notificationKey",
                        "type": "NotificationKey"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "notificationKey",
                        "type": "NotificationKey"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hashCode",
                        "type": "string"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "hashCode",
                        "type": "string"
                    },
                    {
                        "name": "reason",
                        "type": "RemoveReason"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAll",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllActiveNotifications",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllActiveNotifications",
                "return_type": "Promise<Array<NotificationRequest>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotificationCount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotificationCount",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotifications",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getActiveNotifications",
                "return_type": "Promise<Array<NotificationRequest>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "groupName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelGroup",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "groupName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeGroupByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "groupName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeGroupByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "groupName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDoNotDisturbDate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "date",
                        "type": "DoNotDisturbDate"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "Promise<DoNotDisturbDate>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDoNotDisturbDate",
                "return_type": "Promise<DoNotDisturbDate>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "supportDoNotDisturbMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "supportDoNotDisturbMode",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportTemplate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "templateName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupportTemplate",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "templateName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableNotification",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableNotification",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableDistributed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableDistributed",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableDistributedByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableDistributedByBundle",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabledByBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDistributedEnabledByBundle",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundle",
                        "type": "BundleOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceRemindType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceRemindType",
                "return_type": "Promise<DeviceRemindType>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.file": {
        "dependencies": [],
        "interfaces": {
            "FileResponse": [
                "uri",
                "length",
                "00",
                "follows"
            ],
            "FileMoveOption": [
                "requirements",
                "srcUri",
                "requirements",
                "dstUri",
                "uri",
                "data"
            ],
            "FileListResponse": [
                "fileList"
            ],
            "FileListOption": [
                "requirements",
                "uri",
                "data",
                "data"
            ],
            "FileCopyOption": [
                "requirements",
                "srcUri",
                "requirements",
                "dstUri",
                "uri",
                "data"
            ],
            "FileGetOption": [
                "requirements",
                "uri",
                "file",
                "data"
            ],
            "FileDeleteOption": [
                "requirements",
                "uri",
                "data"
            ],
            "FileWriteTextOption": [
                "requirements",
                "uri",
                "text",
                "data"
            ],
            "FileReadTextResponse": [
                "text"
            ],
            "FileReadTextOption": [
                "requirements",
                "uri",
                "data",
                "data"
            ],
            "FileWriteArrayBufferOption": [
                "requirements",
                "uri",
                "buffer",
                "data"
            ],
            "FileReadArrayBufferResponse": [
                "buffer"
            ],
            "FileReadArrayBufferOption": [
                "requirements",
                "uri",
                "data",
                "data"
            ],
            "FileAccessOption": [
                "requirements",
                "uri",
                "data"
            ],
            "FileMkdirOption": [
                "requirements",
                "uri",
                "data"
            ],
            "FileRmdirOption": [
                "requirements",
                "uri",
                "data"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "move",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileMoveOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "copy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileCopyOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "list",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileListOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileGetOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "delete",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileDeleteOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "writeText",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileWriteTextOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readText",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileReadTextOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "writeArrayBuffer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileWriteArrayBufferOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "readArrayBuffer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileReadArrayBufferOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "access",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileAccessOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "mkdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileMkdirOption"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rmdir",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FileRmdirOption"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "File",
                "extends": null
            }
        ]
    },
    "@ohos.nfc.cardEmulation": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "isSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "feature",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasHceCapability",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDefaultService",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "type",
                        "type": "CardType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPaymentServices",
                "return_type": "AbilityInfo",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "HceService",
                "extends": null
            }
        ]
    },
    "@ohos.data.unifiedDataChannel": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "insertData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "data",
                        "type": "UnifiedData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "insertData",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "data",
                        "type": "UnifiedData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "data",
                        "type": "UnifiedData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateData",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "data",
                        "type": "UnifiedData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryData",
                "return_type": "Promise<Array<UnifiedData>>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteData",
                "return_type": "Promise<Array<UnifiedData>>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "Options"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppShareOptions",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "intention",
                        "type": "Intention"
                    },
                    {
                        "name": "shareOptions",
                        "type": "ShareOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAppShareOptions",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "intention",
                        "type": "Intention"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "UnifiedDataProperties",
                "extends": null
            },
            {
                "class": "UnifiedData",
                "extends": null
            },
            {
                "class": "Summary",
                "extends": null
            },
            {
                "class": "UnifiedRecord",
                "extends": null
            },
            {
                "class": "Text",
                "extends": "UnifiedRecord"
            },
            {
                "class": "PlainText",
                "extends": "Text"
            },
            {
                "class": "Hyperlink",
                "extends": "Text"
            },
            {
                "class": "HTML",
                "extends": "Text"
            },
            {
                "class": "File",
                "extends": "UnifiedRecord"
            },
            {
                "class": "Image",
                "extends": "File"
            },
            {
                "class": "Video",
                "extends": "File"
            },
            {
                "class": "Audio",
                "extends": "File"
            },
            {
                "class": "Folder",
                "extends": "File"
            },
            {
                "class": "SystemDefinedRecord",
                "extends": "UnifiedRecord"
            },
            {
                "class": "SystemDefinedForm",
                "extends": "SystemDefinedRecord"
            },
            {
                "class": "SystemDefinedAppItem",
                "extends": "SystemDefinedRecord"
            },
            {
                "class": "SystemDefinedPixelMap",
                "extends": "SystemDefinedRecord"
            },
            {
                "class": "ApplicationDefinedRecord",
                "extends": "UnifiedRecord"
            }
        ]
    },
    "@ohos.enterprise.deviceSettings": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "PowerPolicy": [],
            "CertBlob": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setScreenOffTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "time",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScreenOffTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScreenOffTime",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "installUserCertificate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "certificate",
                        "type": "CertBlob"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "installUserCertificate",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "certificate",
                        "type": "CertBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstallUserCertificate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "certUri",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstallUserCertificate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "certUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPowerPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "powerScene",
                        "type": "PowerScene"
                    },
                    {
                        "name": "powerPolicy",
                        "type": "PowerPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerPolicy",
                "return_type": "PowerPolicy",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "powerScene",
                        "type": "PowerScene"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "item",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValue",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "item",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bundle.bundleResourceManager": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getBundleResourceInfo",
                "return_type": "BundleResourceInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleResourceInfo",
                "return_type": "BundleResourceInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLauncherAbilityResourceInfo",
                "return_type": "Array<LauncherAbilityResourceInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLauncherAbilityResourceInfo",
                "return_type": "Array<LauncherAbilityResourceInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleResourceInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "resourceFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleResourceInfo",
                "return_type": "Promise<Array<BundleResourceInfo>>",
                "parameters": [
                    {
                        "name": "resourceFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllLauncherAbilityResourceInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "resourceFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllLauncherAbilityResourceInfo",
                "return_type": "Promise<Array<LauncherAbilityResourceInfo>>",
                "parameters": [
                    {
                        "name": "resourceFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.util.HashSet": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "HashSet",
                "extends": null
            }
        ]
    },
    "@ohos.application.missionManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.application.MissionInfo",
                "imported_as": "MissionInfo"
            },
            {
                "module": "@ohos.application.MissionListener",
                "imported_as": "MissionListener"
            },
            {
                "module": "@ohos.application.MissionSnapshot",
                "imported_as": "MissionSnapshot"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "registerMissionListener",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "listener",
                        "type": "MissionListener"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterMissionListener",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "listenerId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterMissionListener",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "listenerId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfo",
                "return_type": "Promise<MissionInfo>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "numMax",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionInfos",
                "return_type": "Promise<Array<MissionInfo>>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "numMax",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionSnapShot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMissionSnapShot",
                "return_type": "Promise<MissionSnapshot>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lockMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lockMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAllMissions",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearAllMissions",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionToFront",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionToFront",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "StartOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "moveMissionToFront",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "missionId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.UserAuthExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIExtensionAbility",
                "imported_as": "UIExtensionAbility"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "UserAuthExtensionAbility",
                "extends": "UIExtensionAbility"
            }
        ]
    },
    "@ohos.telephony.call": {
        "dependencies": [
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type Context"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "type image"
            }
        ],
        "interfaces": {
            "AudioDevice": [],
            "AudioDeviceCallbackInfo": [],
            "CallTransferInfo": [],
            "CallAttributeOptions": [],
            "VoipCallAttribute": [],
            "CallRestrictionInfo": [],
            "CallEventOptions": [],
            "DialOptions": [],
            "DialCallOptions": [],
            "RejectMessageOptions": [],
            "CallTransferResult": [],
            "EmergencyNumberOptions": [],
            "NumberFormatOptions": [],
            "MmiCodeResults": [],
            "DisconnectedDetails": [],
            "ImsCallModeInfo": [],
            "CallSessionEvent": [],
            "PeerDimensionsDetail": [],
            "CameraCapabilities": [],
            "NumberMarkInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "dial",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "DialOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dial",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dial",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dialCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "DialCallOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dialCall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dialCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeCall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeCall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasCall",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasCallSync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallState",
                "return_type": "Promise<CallState>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallStateSync",
                "return_type": "CallState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "muteRinger",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "muteRinger",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasVoiceCapability",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isEmergencyPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "EmergencyNumberOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isEmergencyPhoneNumber",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isEmergencyPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "formatPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "NumberFormatOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "formatPhoneNumber",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "formatPhoneNumber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "formatPhoneNumberToE164",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "countryCode",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "formatPhoneNumberToE164",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "phoneNumber",
                        "type": "string"
                    },
                    {
                        "name": "countryCode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "answerCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "answerCall",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "answerCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "answerCall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "videoState",
                        "type": "VideoStateType"
                    },
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hangUpCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hangUpCall",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hangUpCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rejectCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "RejectMessageOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rejectCall",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rejectCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rejectCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rejectCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RejectMessageOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "holdCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "holdCall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unHoldCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unHoldCall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchCall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "combineConference",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "combineConference",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMainCallId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMainCallId",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSubCallIdList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSubCallIdList",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallIdListForConference",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallIdListForConference",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallWaitingStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallWaitingStatus",
                "return_type": "Promise<CallWaitingStatus>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallWaiting",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "activate",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallWaiting",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "activate",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDTMF",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "character",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDTMF",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "character",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDTMF",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDTMF",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "postDialProceed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "proceed",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "postDialProceed",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "proceed",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isInEmergencyCall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isInEmergencyCall",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNewCallAllowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNewCallAllowed",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "separateConference",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "separateConference",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallRestrictionStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "CallRestrictionType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallRestrictionStatus",
                "return_type": "Promise<RestrictionStatus>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "CallRestrictionType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallRestriction",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "info",
                        "type": "CallRestrictionInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallRestriction",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "info",
                        "type": "CallRestrictionInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallRestrictionPassword",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "oldPassword",
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallRestrictionPassword",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "oldPassword",
                        "type": "string"
                    },
                    {
                        "name": "newPassword",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallTransferInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "CallTransferType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCallTransferInfo",
                "return_type": "Promise<CallTransferResult>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "CallTransferType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallTransfer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "info",
                        "type": "CallTransferInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCallTransfer",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "info",
                        "type": "CallTransferInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRinging",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRinging",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMuted",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setMuted",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelMuted",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelMuted",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAudioDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "device",
                        "type": "AudioDevice"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAudioDevice",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "device",
                        "type": "AudioDevice"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "joinConference",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mainCallId",
                        "type": "number"
                    },
                    {
                        "name": "callNumberList",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "joinConference",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "mainCallId",
                        "type": "number"
                    },
                    {
                        "name": "callNumberList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "kickOutFromConference",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "kickOutFromConference",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateImsCallMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "ImsCallMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateImsCallMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "ImsCallMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelCallUpgrade",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "controlCamera",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "cameraId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPreviewSurface",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "surfaceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDisplaySurface",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "surfaceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDeviceDirection",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "deviceDirection",
                        "type": "DeviceDirection"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableImsSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableImsSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableImsSwitch",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableImsSwitch",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isImsSwitchEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isImsSwitchEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isImsSwitchEnabledSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeUnfinishedUssd",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "closeUnfinishedUssd",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVoNRState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "state",
                        "type": "VoNRState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setVoNRState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "state",
                        "type": "VoNRState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVoNRState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVoNRState",
                "return_type": "Promise<VoNRState>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canSetCallTransferTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canSetCallTransferTime",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "inputDialerSpecialCode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inputCode",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "inputDialerSpecialCode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "inputCode",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeMissedIncomingCallNotification",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeMissedIncomingCallNotification",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendCallUiEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "callId",
                        "type": "number"
                    },
                    {
                        "name": "eventName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "blocked",
                "extends": null
            }
        ]
    },
    "@ohos.animation.windowAnimationManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "RRect": [],
            "WindowAnimationTarget": [],
            "WindowAnimationFinishedCallback": [],
            "WindowAnimationController": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setController",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "controller",
                        "type": "WindowAnimationController"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "minimizeWindowWithAnimation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "windowTarget",
                        "type": "WindowAnimationTarget"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "minimizeWindowWithAnimation",
                "return_type": "Promise<WindowAnimationFinishedCallback>",
                "parameters": [
                    {
                        "name": "windowTarget",
                        "type": "WindowAnimationTarget"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.dragController": {
        "dependencies": [
            {
                "module": "@ohos.data.unifiedDataChannel",
                "imported_as": "type unifiedDataChannel"
            }
        ],
        "interfaces": {
            "DragAndDropInfo": [],
            "DragAction": [],
            "DragInfo": [],
            "AnimationOptions": [],
            "DragEventParam": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "executeDrag",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "custom",
                        "type": "CustomBuilder"
                    },
                    {
                        "name": "dragInfo",
                        "type": "DragInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "executeDrag",
                "return_type": "Promise<DragEventParam>",
                "parameters": [
                    {
                        "name": "custom",
                        "type": "CustomBuilder"
                    },
                    {
                        "name": "dragInfo",
                        "type": "DragInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createDragAction",
                "return_type": "DragAction",
                "parameters": [
                    {
                        "name": "customArray",
                        "type": "Array"
                    },
                    {
                        "name": "dragInfo",
                        "type": "DragInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDragPreview",
                "return_type": "DragPreview",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "DragPreview",
                "extends": null
            }
        ]
    },
    "@ohos.privacyManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.permissions",
                "imported_as": "Permissions"
            }
        ],
        "interfaces": {
            "ActiveChangeResponse": [],
            "PermissionUsedRequest": [],
            "PermissionUsedResponse": [],
            "BundleUsedRecord": [],
            "PermissionUsedRecord": [],
            "UsedRecordDetail": [],
            "PermissionUsedTypeInfo": [],
            "AddPermissionUsedRecordOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "addPermissionUsedRecord",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "tokenID",
                        "type": "number"
                    },
                    {
                        "name": "permissionName",
                        "type": "Permissions"
                    },
                    {
                        "name": "successCount",
                        "type": "number"
                    },
                    {
                        "name": "failCount",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addPermissionUsedRecord",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "tokenID",
                        "type": "number"
                    },
                    {
                        "name": "permissionName",
                        "type": "Permissions"
                    },
                    {
                        "name": "successCount",
                        "type": "number"
                    },
                    {
                        "name": "failCount",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionUsedRecord",
                "return_type": "Promise<PermissionUsedResponse>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "PermissionUsedRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionUsedRecord",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "PermissionUsedRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startUsingPermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "tokenID",
                        "type": "number"
                    },
                    {
                        "name": "permissionName",
                        "type": "Permissions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startUsingPermission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "tokenID",
                        "type": "number"
                    },
                    {
                        "name": "permissionName",
                        "type": "Permissions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopUsingPermission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "tokenID",
                        "type": "number"
                    },
                    {
                        "name": "permissionName",
                        "type": "Permissions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopUsingPermission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "tokenID",
                        "type": "number"
                    },
                    {
                        "name": "permissionName",
                        "type": "Permissions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "permissionList",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "permissionList",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionUsedTypeInfos",
                "return_type": "Promise<Array<PermissionUsedTypeInfo>>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.Prefetcher": {
        "dependencies": [],
        "interfaces": {
            "IPrefetcher": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "BasicPrefetcher",
                "extends": null
            }
        ]
    },
    "@ohos.bluetooth.hfp": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.baseProfile",
                "imported_as": "type baseProfile"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createHfpAgProfile",
                "return_type": "HandsFreeAudioGatewayProfile",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.accessibility.config": {
        "dependencies": [
            {
                "module": "@ohos.accessibility",
                "imported_as": "type accessibility"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enableAbility",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "capability",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "capability",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAbility",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.contextConstant": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.multimodalInput.inputConsumer": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "KeyOptions": [],
            "HotkeyOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyOptions",
                        "type": "KeyOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyOptions",
                        "type": "KeyOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setShieldStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "shieldMode",
                        "type": "ShieldMode"
                    },
                    {
                        "name": "isShield",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShieldStatus",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "shieldMode",
                        "type": "ShieldMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSystemHotkeys",
                "return_type": "Promise<Array<HotkeyOptions>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hotkeyOptions",
                        "type": "HotkeyOptions"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hotkeyOptions",
                        "type": "HotkeyOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.uniformDataStruct": {
        "dependencies": [],
        "interfaces": {
            "PlainText": [],
            "Hyperlink": [],
            "HTML": [],
            "OpenHarmonyAppItem": [],
            "ContentForm": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.form.formHost": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.form.formInfo",
                "imported_as": "formInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "addForm",
                "return_type": "Promise<formInfo",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "isReleaseCache",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "releaseForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestFormWithParams",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "castToNormalForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "castToNormalForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyVisibleForms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyVisibleForms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyInvisibleForms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyInvisibleForms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableFormsUpdate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableFormsUpdate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableFormsUpdate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableFormsUpdate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSystemReady",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSystemReady",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllFormsInfo",
                "return_type": "Promise<Array<formInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "Promise<Array<formInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "Promise<Array<formInfo",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "formInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteInvalidForms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteInvalidForms",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireFormState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireFormState",
                "return_type": "Promise<formInfo",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsVisible",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isVisible",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsVisible",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isVisible",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsEnableUpdate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isEnableUpdate",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsEnableUpdate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isEnableUpdate",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shareForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shareForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "deviceId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsPrivacyProtected",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isProtected",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyFormsPrivacyProtected",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "isProtected",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireFormData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireFormData",
                "return_type": "Promise<Record<string",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRouterProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "proxy",
                        "type": "Callback"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRouterProxy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "proxy",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearRouterProxy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearRouterProxy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPublishFormResult",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "result",
                        "type": "formInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFormsRecyclable",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFormsRecyclable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "recycleForms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "recoverForms",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "recoverForms",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateFormLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "type": "formInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.VpnExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.application.VpnExtensionContext",
                "imported_as": "type VpnExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "VpnExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.inputMethod": {
        "dependencies": [
            {
                "module": "@ohos.InputMethodSubtype",
                "imported_as": "InputMethodSubtype"
            }
        ],
        "interfaces": {
            "InputMethodSetting": [],
            "InputMethodController": [],
            "InputMethodProperty": [],
            "Range": [],
            "Movement": [],
            "InputAttribute": [],
            "FunctionKey": [],
            "CursorInfo": [],
            "TextConfig": [],
            "InputWindowInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getInputMethodSetting",
                "return_type": "InputMethodSetting",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInputMethodController",
                "return_type": "InputMethodController",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSetting",
                "return_type": "InputMethodSetting",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getController",
                "return_type": "InputMethodController",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultInputMethod",
                "return_type": "InputMethodProperty",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemInputMethodConfigAbility",
                "return_type": "ElementName",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchInputMethod",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "target",
                        "type": "InputMethodProperty"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchInputMethod",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "target",
                        "type": "InputMethodProperty"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentInputMethod",
                "return_type": "InputMethodProperty",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchCurrentInputMethodSubtype",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "target",
                        "type": "InputMethodSubtype"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchCurrentInputMethodSubtype",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "target",
                        "type": "InputMethodSubtype"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentInputMethodSubtype",
                "return_type": "InputMethodSubtype",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchCurrentInputMethodAndSubtype",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inputMethodProperty",
                        "type": "InputMethodProperty"
                    },
                    {
                        "name": "inputMethodSubtype",
                        "type": "InputMethodSubtype"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchCurrentInputMethodAndSubtype",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "inputMethodProperty",
                        "type": "InputMethodProperty"
                    },
                    {
                        "name": "inputMethodSubtype",
                        "type": "InputMethodSubtype"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchInputMethod",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.EmbeddedUIExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIExtensionAbility",
                "imported_as": "UIExtensionAbility"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "EmbeddedUIExtensionAbility",
                "extends": "UIExtensionAbility"
            }
        ]
    },
    "@ohos.enterprise.applicationManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "addDisallowedRunningBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedRunningBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedRunningBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedRunningBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedRunningBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedRunningBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedRunningBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedRunningBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedRunningBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedRunningBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedRunningBundles",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedRunningBundlesSync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAutoStartApps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "autoStartApps",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAutoStartApps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "autoStartApps",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAutoStartApps",
                "return_type": "Array<Want>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addKeepAliveApps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleNames",
                        "type": "Array"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeKeepAliveApps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleNames",
                        "type": "Array"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeepAliveApps",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.backgroundTaskManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.wantAgent",
                "imported_as": "WantAgent"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "Context"
            }
        ],
        "interfaces": {
            "DelaySuspendInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "cancelSuspendDelay",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemainingDelayTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemainingDelayTime",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestSuspendDelay",
                "return_type": "DelaySuspendInfo",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBackgroundRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bgMode",
                        "type": "BackgroundMode"
                    },
                    {
                        "name": "wantAgent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBackgroundRunning",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bgMode",
                        "type": "BackgroundMode"
                    },
                    {
                        "name": "wantAgent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBackgroundRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBackgroundRunning",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.common": {
        "dependencies": [
            {
                "module": "@ohos.ability.dataAbilityHelper",
                "imported_as": "PacMap as _PacMap"
            },
            {
                "module": "@ohos.ability.abilityResult",
                "imported_as": "AbilityResult as _AbilityResult"
            },
            {
                "module": "@ohos.application.AbilityStartCallback",
                "imported_as": "type _AbilityStartCallback"
            },
            {
                "module": "@ohos.ability.connectOptions",
                "imported_as": "ConnectOptions as _ConnectOptions"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "@system.router": {
        "dependencies": [],
        "interfaces": {
            "RouterOptions": [],
            "BackRouterOptions": [],
            "RouterState": [],
            "EnableAlertBeforeBackPageOptions": [],
            "DisableAlertBeforeBackPageOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "push",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "replace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RouterOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "back",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getParams",
                "return_type": "ParamsInterface",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clear",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLength",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getState",
                "return_type": "RouterState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAlertBeforeBackPage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "EnableAlertBeforeBackPageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableAlertBeforeBackPage",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Router",
                "extends": null
            }
        ]
    },
    "@ohos.arkui.node": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.identifier.oaid": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getOAID",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOAID",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetOAID",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.taskpool": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "isCanceled",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendData",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "args",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "execute",
                "return_type": "Promise<Object>",
                "parameters": [
                    {
                        "name": "func",
                        "type": "Function"
                    },
                    {
                        "name": "args",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "execute",
                "return_type": "Promise<Object>",
                "parameters": [
                    {
                        "name": "task",
                        "type": "Task"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "execute",
                "return_type": "Promise<Object",
                "parameters": [
                    {
                        "name": "group",
                        "type": "TaskGroup"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "executeDelayed",
                "return_type": "Promise<Object>",
                "parameters": [
                    {
                        "name": "delayTime",
                        "type": "number"
                    },
                    {
                        "name": "task",
                        "type": "Task"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "executePeriodically",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "period",
                        "type": "number"
                    },
                    {
                        "name": "task",
                        "type": "Task"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "task",
                        "type": "Task"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "group",
                        "type": "TaskGroup"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTaskPoolInfo",
                "return_type": "TaskPoolInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateTask",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "longTask",
                        "type": "LongTask"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isConcurrent",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "func",
                        "type": "Function"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "Task",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "TaskGroup",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "SequenceRunner",
                "extends": null
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "LongTask",
                "extends": "Task"
            },
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "GenericsTask",
                "extends": null
            },
            {
                "class": "TaskInfo",
                "extends": null
            },
            {
                "class": "ThreadInfo",
                "extends": null
            },
            {
                "class": "TaskPoolInfo",
                "extends": null
            }
        ]
    },
    "@ohos.file.statvfs": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getFreeSize",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeSizeSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalSize",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalSizeSync",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.telephony.vcard": {
        "dependencies": [
            {
                "module": "@ohos.data.dataSharePredicates",
                "imported_as": "type dataSharePredicates"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type Context"
            }
        ],
        "interfaces": {
            "VCardBuilderOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "importVCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "filePath",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importVCard",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "importVCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "filePath",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportVCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "predicates",
                        "type": "dataSharePredicates"
                    },
                    {
                        "name": "options",
                        "type": "VCardBuilderOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportVCard",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "predicates",
                        "type": "dataSharePredicates"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "exportVCard",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "predicates",
                        "type": "dataSharePredicates"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.net.webSocket": {
        "dependencies": [
            {
                "module": "@ohos.net.connection",
                "imported_as": "type connection"
            }
        ],
        "interfaces": {
            "WebSocketRequestOptions": [],
            "ClientCert": [],
            "WebSocketCloseOptions": [],
            "CloseResult": [],
            "WebSocket": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createWebSocket",
                "return_type": "WebSocket",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bundle.bundleManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundleManager.Metadata",
                "imported_as": "Metadata as _Metadata"
            },
            {
                "module": "@ohos.bundleManager.PermissionDef",
                "imported_as": "PermissionDef as _PermissionDef"
            },
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName as _ElementName"
            },
            {
                "module": "@ohos.bundleManager.SharedBundleInfo",
                "imported_as": "SharedBundleInfo as _SharedBundleInfo"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getBundleInfoForSelf",
                "return_type": "Promise<BundleInfo>",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfoForSelf",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfoForSelfSync",
                "return_type": "BundleInfo",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfo",
                "return_type": "Promise<BundleInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "appFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "appFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfo",
                "return_type": "Promise<ApplicationInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "appFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleInfo",
                "return_type": "Promise<Array<BundleInfo>>",
                "parameters": [
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "appFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllApplicationInfo",
                "return_type": "Promise<Array<ApplicationInfo>>",
                "parameters": [
                    {
                        "name": "appFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "abilityFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "abilityFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityInfo",
                "return_type": "Promise<Array<AbilityInfo>>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "abilityFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityInfo",
                "return_type": "Promise<Array<AbilityInfo>>",
                "parameters": [
                    {
                        "name": "wants",
                        "type": "Array"
                    },
                    {
                        "name": "abilityFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAbilityInfoSync",
                "return_type": "Array<AbilityInfo>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "abilityFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryExtensionAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "extensionAbilityType",
                        "type": "ExtensionAbilityType"
                    },
                    {
                        "name": "extensionAbilityFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryExtensionAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "extensionAbilityType",
                        "type": "ExtensionAbilityType"
                    },
                    {
                        "name": "extensionAbilityFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryExtensionAbilityInfo",
                "return_type": "Promise<Array<ExtensionAbilityInfo>>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "extensionAbilityType",
                        "type": "ExtensionAbilityType"
                    },
                    {
                        "name": "extensionAbilityFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryExtensionAbilityInfoSync",
                "return_type": "Array<ExtensionAbilityInfo>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "extensionAbilityType",
                        "type": "ExtensionAbilityType"
                    },
                    {
                        "name": "extensionAbilityFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryExtensionAbilityInfoSync",
                "return_type": "Array<ExtensionAbilityInfo>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "extensionAbilityType",
                        "type": "string"
                    },
                    {
                        "name": "extensionAbilityFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryExtensionAbilityInfoSync",
                "return_type": "Array<ExtensionAbilityInfo>",
                "parameters": [
                    {
                        "name": "extensionAbilityType",
                        "type": "string"
                    },
                    {
                        "name": "extensionAbilityFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleNameByUid",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleNameByUid",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleNameByUidSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleArchiveInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hapFilePath",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleArchiveInfo",
                "return_type": "Promise<BundleInfo>",
                "parameters": [
                    {
                        "name": "hapFilePath",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleArchiveInfoSync",
                "return_type": "BundleInfo",
                "parameters": [
                    {
                        "name": "hapFilePath",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cleanBundleCacheFiles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cleanBundleCacheFiles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "appIndex",
                        "type": "number"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setApplicationEnabledSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAbilityEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "appIndex",
                        "type": "number"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAbilityEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAbilityEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAbilityEnabledSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "isEnabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "appIndex",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isApplicationEnabledSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAbilityEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "appIndex",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAbilityEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAbilityEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAbilityEnabledSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "info",
                        "type": "AbilityInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLaunchWantForBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLaunchWantForBundle",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLaunchWantForBundle",
                "return_type": "Promise<Want>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLaunchWantForBundleSync",
                "return_type": "Want",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLaunchWant",
                "return_type": "Want",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileByAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    },
                    {
                        "name": "metadataName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileByAbility",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileByAbilitySync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileByExtensionAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "extensionAbilityName",
                        "type": "string"
                    },
                    {
                        "name": "metadataName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileByExtensionAbility",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "extensionAbilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getProfileByExtensionAbilitySync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "extensionAbilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionDef",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "permissionName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionDef",
                "return_type": "Promise<PermissionDef>",
                "parameters": [
                    {
                        "name": "permissionName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPermissionDefSync",
                "return_type": "PermissionDef",
                "parameters": [
                    {
                        "name": "permissionName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityLabel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityLabel",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityLabelSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "abilityName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfoSync",
                "return_type": "ApplicationInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "applicationFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApplicationInfoSync",
                "return_type": "ApplicationInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "applicationFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfoSync",
                "return_type": "BundleInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBundleInfoSync",
                "return_type": "BundleInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSharedBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSharedBundleInfo",
                "return_type": "Promise<Array<SharedBundleInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharedBundleInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSharedBundleInfo",
                "return_type": "Promise<Array<SharedBundleInfo>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppProvisionInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppProvisionInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppProvisionInfo",
                "return_type": "Promise<AppProvisionInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppProvisionInfoSync",
                "return_type": "AppProvisionInfo",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSpecifiedDistributionType",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAdditionalInfo",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getJsonProfile",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "profileType",
                        "type": "ProfileType"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getExtResource",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableDynamicIcon",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "moduleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableDynamicIcon",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDynamicIcon",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "verifyAbc",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "abcPaths",
                        "type": "Array"
                    },
                    {
                        "name": "deleteOriginalFiles",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "verifyAbc",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "abcPaths",
                        "type": "Array"
                    },
                    {
                        "name": "deleteOriginalFiles",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRecoverableApplicationInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRecoverableApplicationInfo",
                "return_type": "Promise<Array<RecoverableApplicationInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAdditionalInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "additionalInfo",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteAbc",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "abcPath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canOpenLink",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "link",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllPreinstalledApplicationInfo",
                "return_type": "Promise<Array<PreinstalledApplicationInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllBundleInfoByDeveloperId",
                "return_type": "Array<BundleInfo>",
                "parameters": [
                    {
                        "name": "developerId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeveloperIds",
                "return_type": "Array<String>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "switchUninstallState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppCloneBundleInfo",
                "return_type": "Promise<BundleInfo>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "appIndex",
                        "type": "number"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllAppCloneBundleInfo",
                "return_type": "Promise<Array<BundleInfo>>",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "bundleFlags",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppCloneIdentity",
                "return_type": "Promise<AppCloneIdentity>",
                "parameters": [
                    {
                        "name": "uid",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bundle.distributedBundleManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.bundleManager.RemoteAbilityInfo",
                "imported_as": "RemoteAbilityInfo as _RemoteAbilityInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "Promise<RemoteAbilityInfo>",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementNames",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "Promise<Array<RemoteAbilityInfo>>",
                "parameters": [
                    {
                        "name": "elementNames",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "Promise<RemoteAbilityInfo>",
                "parameters": [
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "elementNames",
                        "type": "Array"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemoteAbilityInfo",
                "return_type": "Promise<Array<RemoteAbilityInfo>>",
                "parameters": [
                    {
                        "name": "elementNames",
                        "type": "Array"
                    },
                    {
                        "name": "locale",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.businessAbilityRouter": {
        "dependencies": [],
        "interfaces": {
            "BusinessAbilityFilter": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "queryBusinessAbilityInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "BusinessAbilityFilter"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryBusinessAbilityInfo",
                "return_type": "Promise<Array<BusinessAbilityInfo>>",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "BusinessAbilityFilter"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.security.asset": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "add",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "attributes",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "attributes",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "attributes",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "update",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    },
                    {
                        "name": "attributesToUpdate",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "query",
                        "type": "AssetMap"
                    },
                    {
                        "name": "attributesToUpdate",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    },
                    {
                        "name": "attributesToUpdate",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "preQuery",
                "return_type": "Promise<Uint8Array>",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "preQueryAsUser",
                "return_type": "Promise<Uint8Array>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "preQuerySync",
                "return_type": "Uint8Array",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "query",
                "return_type": "Promise<Array<AssetMap>>",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAsUser",
                "return_type": "Promise<Array<AssetMap>>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "querySync",
                "return_type": "Array<AssetMap>",
                "parameters": [
                    {
                        "name": "query",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "postQuery",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "postQueryAsUser",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "handle",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "postQuerySync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "AssetMap"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimodalInput.inputEvent": {
        "dependencies": [],
        "interfaces": {
            "InputEvent": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.multimedia.audio": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "ErrorCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "AudioStreamInfo": [],
            "AudioRendererInfo": [],
            "AudioRendererFilter": [],
            "AudioCapturerFilter": [],
            "AudioRendererOptions": [],
            "InterruptEvent": [],
            "AudioManager": [],
            "InterruptResult": [],
            "DeviceBlockStatusInfo": [],
            "AudioRoutingManager": [],
            "AudioStreamManager": [],
            "AudioSessionStrategy": [],
            "AudioSessionDeactivatedEvent": [],
            "AudioSessionManager": [],
            "AudioVolumeManager": [],
            "AudioVolumeGroupManager": [],
            "AudioSpatialEnabledStateForDevice": [],
            "AudioSpatializationManager": [],
            "VolumeGroupInfo": [],
            "AudioRendererChangeInfo": [],
            "AudioCapturerChangeInfo": [],
            "AudioDeviceDescriptor": [],
            "VolumeEvent": [],
            "InterruptAction": [],
            "AudioInterrupt": [],
            "MicStateChangeEvent": [],
            "DeviceChangeAction": [],
            "AudioStreamDeviceChangeInfo": [],
            "AudioRenderer": [],
            "AudioCapturerInfo": [],
            "AudioCapturerOptions": [],
            "CaptureFilterOptions": [],
            "AudioPlaybackCaptureConfig": [],
            "AudioCapturer": [],
            "AsrProcessingController": [],
            "TonePlayer": [],
            "AudioSpatialDeviceState": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAudioManager",
                "return_type": "AudioManager",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAudioCapturer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AudioCapturerOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAudioCapturer",
                "return_type": "Promise<AudioCapturer>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AudioCapturerOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAudioRenderer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AudioRendererOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAudioRenderer",
                "return_type": "Promise<AudioRenderer>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AudioRendererOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createTonePlayer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AudioRendererInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createTonePlayer",
                "return_type": "Promise<TonePlayer>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AudioRendererInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAsrProcessingController",
                "return_type": "AsrProcessingController",
                "parameters": [
                    {
                        "name": "audioCapturer",
                        "type": "AudioCapturer"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.sensor": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "Sensor": [],
            "GeomagneticResponse": [],
            "LocationOptions": [],
            "CoordinatesOptions": [],
            "RotationMatrixResponse": [],
            "Options": [],
            "Response": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "once",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSingleSensor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSingleSensor",
                "return_type": "Promise<Sensor>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSingleSensorSync",
                "return_type": "Sensor",
                "parameters": [
                    {
                        "name": "type",
                        "type": "SensorId"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSensorList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSensorList",
                "return_type": "Promise<Array<Sensor>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSensorListSync",
                "return_type": "Array<Sensor>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGeomagneticField",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "locationOptions",
                        "type": "LocationOptions"
                    },
                    {
                        "name": "timeMillis",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGeomagneticField",
                "return_type": "Promise<GeomagneticResponse>",
                "parameters": [
                    {
                        "name": "locationOptions",
                        "type": "LocationOptions"
                    },
                    {
                        "name": "timeMillis",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGeomagneticInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "locationOptions",
                        "type": "LocationOptions"
                    },
                    {
                        "name": "timeMillis",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGeomagneticInfo",
                "return_type": "Promise<GeomagneticResponse>",
                "parameters": [
                    {
                        "name": "locationOptions",
                        "type": "LocationOptions"
                    },
                    {
                        "name": "timeMillis",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAltitude",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "seaPressure",
                        "type": "number"
                    },
                    {
                        "name": "currentPressure",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAltitude",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "seaPressure",
                        "type": "number"
                    },
                    {
                        "name": "currentPressure",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceAltitude",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "seaPressure",
                        "type": "number"
                    },
                    {
                        "name": "currentPressure",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceAltitude",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "seaPressure",
                        "type": "number"
                    },
                    {
                        "name": "currentPressure",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGeomagneticDip",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inclinationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getGeomagneticDip",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "inclinationMatrix",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInclination",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inclinationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInclination",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "inclinationMatrix",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAngleModify",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "currentRotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "preRotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAngleModify",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "currentRotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "preRotationMatrix",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAngleVariation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "currentRotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "preRotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAngleVariation",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "currentRotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "preRotationMatrix",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRotationMatrix",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRotationMatrix",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRotationMatrix",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRotationMatrix",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "transformCoordinateSystem",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inRotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "coordinates",
                        "type": "CoordinatesOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "transformCoordinateSystem",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "inRotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "coordinates",
                        "type": "CoordinatesOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "transformRotationMatrix",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "inRotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "coordinates",
                        "type": "CoordinatesOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "transformRotationMatrix",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "inRotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "coordinates",
                        "type": "CoordinatesOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createQuaternion",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createQuaternion",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getQuaternion",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getQuaternion",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "rotationVector",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDirection",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDirection",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "rotationMatrix",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOrientation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rotationMatrix",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOrientation",
                "return_type": "Promise<Array<number>>",
                "parameters": [
                    {
                        "name": "rotationMatrix",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRotationMatrix",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "gravity",
                        "type": "Array"
                    },
                    {
                        "name": "geomagnetic",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRotationMatrix",
                "return_type": "Promise<RotationMatrixResponse>",
                "parameters": [
                    {
                        "name": "gravity",
                        "type": "Array"
                    },
                    {
                        "name": "geomagnetic",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRotationMatrix",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "gravity",
                        "type": "Array"
                    },
                    {
                        "name": "geomagnetic",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRotationMatrix",
                "return_type": "Promise<RotationMatrixResponse>",
                "parameters": [
                    {
                        "name": "gravity",
                        "type": "Array"
                    },
                    {
                        "name": "geomagnetic",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.customization.customConfig": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getChannelId",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.UIServiceExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.ExtensionAbility",
                "imported_as": "ExtensionAbility"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.application.UIServiceExtensionContext",
                "imported_as": "type UIServiceExtensionContext"
            },
            {
                "module": "@ohos.application.UIServiceHostProxy",
                "imported_as": "type UIServiceHostProxy"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "UIServiceExtensionAbility",
                "extends": "ExtensionAbility"
            }
        ]
    },
    "@ohos.multimodalInput.intentionCode": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.application.BackupExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.file.BackupExtensionContext",
                "imported_as": "type BackupExtensionContext"
            }
        ],
        "interfaces": {
            "BundleVersion": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "BackupExtensionAbility",
                "extends": null
            }
        ]
    },
    "@system.battery": {
        "dependencies": [],
        "interfaces": {
            "BatteryResponse": [],
            "GetStatusOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getStatus",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Battery",
                "extends": null
            }
        ]
    },
    "@ohos.arkui.shape": {
        "dependencies": [],
        "interfaces": {
            "ShapeSize": [],
            "PathShapeOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "CommonShapeMethod",
                "extends": null
            },
            {
                "class": "BaseShape",
                "extends": null
            },
            {
                "class": "RectShape",
                "extends": "BaseShape"
            },
            {
                "class": "CircleShape",
                "extends": "BaseShape"
            },
            {
                "class": "EllipseShape",
                "extends": "BaseShape"
            },
            {
                "class": "PathShape",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@ohos.buffer": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "alloc",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "size",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "allocUninitializedFromPool",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "size",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "allocUninitialized",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "size",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "byteLength",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "string",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "concat",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "list",
                        "type": "Buffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "from",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "array",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "from",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "arrayBuffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "from",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "buffer",
                        "type": "Buffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "from",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "object",
                        "type": "Object"
                    },
                    {
                        "name": "offsetOrEncoding",
                        "type": "number"
                    },
                    {
                        "name": "length",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "from",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "string",
                        "type": "String"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBuffer",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "obj",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isEncoding",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "encoding",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "transcode",
                "return_type": "Buffer",
                "parameters": [
                    {
                        "name": "source",
                        "type": "Buffer"
                    },
                    {
                        "name": "fromEnc",
                        "type": "string"
                    },
                    {
                        "name": "toEnc",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "Buffer",
                "extends": null
            },
            {
                "class": "Blob",
                "extends": null
            }
        ]
    },
    "@ohos.resourceschedule.workScheduler": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "WorkInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "startWork",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "work",
                        "type": "WorkInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopWork",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "work",
                        "type": "WorkInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWorkStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "workId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWorkStatus",
                "return_type": "Promise<WorkInfo>",
                "parameters": [
                    {
                        "name": "workId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "obtainAllWorks",
                "return_type": "Array<WorkInfo>",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "obtainAllWorks",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "obtainAllWorks",
                "return_type": "Promise<Array<WorkInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopAndClearWorks",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLastWorkTimeOut",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "workId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLastWorkTimeOut",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "workId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLastWorkTimeOut",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "workId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.distributedMissionManager": {
        "dependencies": [],
        "interfaces": {
            "ContinueCallbackInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "startSyncRemoteMissions",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionParameter"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startSyncRemoteMissions",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionParameter"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopSyncRemoteMissions",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionDeviceInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopSyncRemoteMissions",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionDeviceInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerMissionListener",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionDeviceInfo"
                    },
                    {
                        "name": "options",
                        "type": "MissionCallback"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerMissionListener",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionDeviceInfo"
                    },
                    {
                        "name": "options",
                        "type": "MissionCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unRegisterMissionListener",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionDeviceInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unRegisterMissionListener",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "MissionDeviceInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "continueMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "ContinueDeviceInfo"
                    },
                    {
                        "name": "options",
                        "type": "ContinueCallback"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "continueMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "ContinueDeviceInfo"
                    },
                    {
                        "name": "options",
                        "type": "ContinueCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "continueMission",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "ContinueMissionInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "continueMission",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "ContinueMissionInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.effectKit": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            }
        ],
        "interfaces": {
            "Filter": [],
            "ColorPicker": [],
            "Color": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createEffect",
                "return_type": "Filter",
                "parameters": [
                    {
                        "name": "source",
                        "type": "image"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createColorPicker",
                "return_type": "Promise<ColorPicker>",
                "parameters": [
                    {
                        "name": "source",
                        "type": "image"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createColorPicker",
                "return_type": "Promise<ColorPicker>",
                "parameters": [
                    {
                        "name": "source",
                        "type": "image"
                    },
                    {
                        "name": "region",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createColorPicker",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "source",
                        "type": "image"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createColorPicker",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "source",
                        "type": "image"
                    },
                    {
                        "name": "region",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.font": {
        "dependencies": [],
        "interfaces": {
            "FontOptions": [],
            "FontInfo": [],
            "UIFontConfig": [],
            "UIFontGenericInfo": [],
            "UIFontAliasInfo": [],
            "UIFontAdjustInfo": [],
            "UIFontFallbackGroupInfo": [],
            "UIFontFallbackInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "registerFont",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "FontOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemFontList",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFontByName",
                "return_type": "FontInfo",
                "parameters": [
                    {
                        "name": "fontName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUIFontConfig",
                "return_type": "UIFontConfig",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.appRecovery": {
        "dependencies": [
            {
                "module": "@ohos.application.UIAbilityContext",
                "imported_as": "UIAbilityContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enableAppRecovery",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "restartApp",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setRestartWant",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "saveAppState",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "saveAppState",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.accessibility.GesturePoint": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "GesturePoint",
                "extends": null
            }
        ]
    },
    "@ohos.graphics.displaySync": {
        "dependencies": [],
        "interfaces": {
            "IntervalInfo": [],
            "DisplaySync": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "DisplaySync",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.WindowExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.rpc",
                "imported_as": "rpc"
            },
            {
                "module": "@ohos.application.WindowExtensionContext",
                "imported_as": "_WindowExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "WindowExtensionAbility",
                "extends": null
            }
        ]
    },
    "@ohos.util.ArrayList": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ArrayList",
                "extends": null
            }
        ]
    },
    "@ohos.graphics.common2D": {
        "dependencies": [],
        "interfaces": {
            "Color": [],
            "Rect": [],
            "Point": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.ability.errorCode": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.util.PlainArray": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PlainArray",
                "extends": null
            }
        ]
    },
    "@ohos.enterprise.deviceControl": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "resetFactory",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetFactory",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shutdown",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reboot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lockScreen",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "operateDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "operate",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetooth.map": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.baseProfile",
                "imported_as": "type baseProfile"
            },
            {
                "module": "@ohos.bluetooth.constant",
                "imported_as": "type constant"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createMapMseProfile",
                "return_type": "MapMseProfile",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.PiPWindow": {
        "dependencies": [
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "type BaseContext"
            },
            {
                "module": "@ohos.arkui.NodeController",
                "imported_as": "NodeController"
            },
            {
                "module": "@ohos.arkui.FrameNode",
                "imported_as": "typeNode"
            }
        ],
        "interfaces": {
            "PiPConfiguration": [],
            "ControlEventParam": [],
            "PiPController": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isPiPEnabled",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Promise<PiPController>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "PiPConfiguration"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Promise<PiPController>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "PiPConfiguration"
                    },
                    {
                        "name": "contentNode",
                        "type": "typeNode"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.ability.featureAbility": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.ability.startAbilityParameter",
                "imported_as": "StartAbilityParameter"
            },
            {
                "module": "@ohos.ability.abilityResult",
                "imported_as": "AbilityResult"
            },
            {
                "module": "@ohos.app.appVersionInfo",
                "imported_as": "AppVersionInfo as _AppVersionInfo"
            },
            {
                "module": "@ohos.app.context",
                "imported_as": "Context as _Context"
            },
            {
                "module": "@ohos.ability.dataAbilityHelper",
                "imported_as": "DataAbilityHelper"
            },
            {
                "module": "@ohos.ability.connectOptions",
                "imported_as": "ConnectOptions"
            },
            {
                "module": "@ohos.app.processInfo",
                "imported_as": "ProcessInfo as _ProcessInfo"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getWant",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWant",
                "return_type": "Promise<Want>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "StartAbilityParameter"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAbility",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "StartAbilityParameter"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getContext",
                "return_type": "Context",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAbilityForResult",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "StartAbilityParameter"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAbilityForResult",
                "return_type": "Promise<AbilityResult>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "StartAbilityParameter"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateSelfWithResult",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "AbilityResult"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateSelfWithResult",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "parameter",
                        "type": "AbilityResult"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateSelf",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "terminateSelf",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "acquireDataAbilityHelper",
                "return_type": "DataAbilityHelper",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasWindowFocus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasWindowFocus",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectAbility",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "request",
                        "type": "Want"
                    },
                    {
                        "name": "options",
                        "type": "ConnectOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectAbility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "connection",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnectAbility",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "connection",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWindow",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWindow",
                "return_type": "Promise<window",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.cloudSync": {
        "dependencies": [],
        "interfaces": {
            "SyncProgress": [],
            "DownloadProgress": [],
            "ChangeData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getFileSyncState",
                "return_type": "Promise<Array<FileSyncState>>",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFileSyncState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFileSyncState",
                "return_type": "FileSyncState",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerChange",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "recursion",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterChange",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "GallerySync",
                "extends": null
            },
            {
                "class": "Download",
                "extends": null
            },
            {
                "class": "FileSync",
                "extends": null
            },
            {
                "class": "CloudFileCache",
                "extends": null
            }
        ]
    },
    "@ohos.reminderAgent": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.notification",
                "imported_as": "notification"
            },
            {
                "module": "@ohos.notification.notificationSlot",
                "imported_as": "NotificationSlot"
            }
        ],
        "interfaces": {
            "ActionButton": [],
            "WantAgent": [],
            "MaxScreenWantAgent": [],
            "ReminderRequest": [],
            "LocalDateTime": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "publishReminder",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "reminderReq",
                        "type": "ReminderRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishReminder",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "reminderReq",
                        "type": "ReminderRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelReminder",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "reminderId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelReminder",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "reminderId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValidReminders",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValidReminders",
                "return_type": "Promise<Array<ReminderRequest>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAllReminders",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAllReminders",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addNotificationSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addNotificationSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slot",
                        "type": "NotificationSlot"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeNotificationSlot",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "notification"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeNotificationSlot",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotType",
                        "type": "notification"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.AbilityStage": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.AbilityConstant",
                "imported_as": "AbilityConstant"
            },
            {
                "module": "@ohos.application.AbilityStageContext",
                "imported_as": "AbilityStageContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "AbilityStage",
                "extends": null
            }
        ]
    },
    "@ohos.ai.intelligentVoice": {
        "dependencies": [],
        "interfaces": {
            "IntelligentVoiceManager": [],
            "WakeupManager": [],
            "UploadFile": [],
            "WakeupSourceFile": [],
            "EnrollIntelligentVoiceEngineDescriptor": [],
            "WakeupIntelligentVoiceEngineDescriptor": [],
            "EvaluationResult": [],
            "EnrollEngineConfig": [],
            "WakeupHapInfo": [],
            "EnrollCallbackInfo": [],
            "WakeupIntelligentVoiceEngineCallbackInfo": [],
            "EnrollIntelligentVoiceEngine": [],
            "WakeupIntelligentVoiceEngine": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getIntelligentVoiceManager",
                "return_type": "IntelligentVoiceManager",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWakeupManager",
                "return_type": "WakeupManager",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createEnrollIntelligentVoiceEngine",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "descriptor",
                        "type": "EnrollIntelligentVoiceEngineDescriptor"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createEnrollIntelligentVoiceEngine",
                "return_type": "Promise<EnrollIntelligentVoiceEngine>",
                "parameters": [
                    {
                        "name": "descriptor",
                        "type": "EnrollIntelligentVoiceEngineDescriptor"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWakeupIntelligentVoiceEngine",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "descriptor",
                        "type": "WakeupIntelligentVoiceEngineDescriptor"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWakeupIntelligentVoiceEngine",
                "return_type": "Promise<WakeupIntelligentVoiceEngine>",
                "parameters": [
                    {
                        "name": "descriptor",
                        "type": "WakeupIntelligentVoiceEngineDescriptor"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.ValuesBucket": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.abilityAccessCtrl": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.permissions",
                "imported_as": "Permissions"
            },
            {
                "module": "@ohos.application.Context",
                "imported_as": "type _Context"
            },
            {
                "module": "@ohos.security.PermissionRequestResult",
                "imported_as": "type _PermissionRequestResult"
            }
        ],
        "interfaces": {
            "AtManager": [],
            "PermissionStateChangeInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createAtManager",
                "return_type": "AtManager",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.graphics.drawing": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "type image"
            },
            {
                "module": "@ohos.graphics.common2D",
                "imported_as": "type common2D"
            }
        ],
        "interfaces": {
            "TextBlobRunBuffer": [],
            "FontMetrics": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "makeFromString",
                "return_type": "TextBlob",
                "parameters": [
                    {
                        "name": "text",
                        "type": "string"
                    },
                    {
                        "name": "font",
                        "type": "Font"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeFromPosText",
                "return_type": "TextBlob",
                "parameters": [
                    {
                        "name": "text",
                        "type": "string"
                    },
                    {
                        "name": "len",
                        "type": "number"
                    },
                    {
                        "name": "points",
                        "type": "common2D"
                    },
                    {
                        "name": "font",
                        "type": "Font"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeFromRunBuffer",
                "return_type": "TextBlob",
                "parameters": [
                    {
                        "name": "pos",
                        "type": "Array"
                    },
                    {
                        "name": "font",
                        "type": "Font"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "makeFromFile",
                "return_type": "Typeface",
                "parameters": [
                    {
                        "name": "filePath",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createImageLattice",
                "return_type": "Lattice",
                "parameters": [
                    {
                        "name": "xDivs",
                        "type": "Array"
                    },
                    {
                        "name": "yDivs",
                        "type": "Array"
                    },
                    {
                        "name": "fXCount",
                        "type": "number"
                    },
                    {
                        "name": "fYCount",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createBlurMaskFilter",
                "return_type": "MaskFilter",
                "parameters": [
                    {
                        "name": "blurType",
                        "type": "BlurType"
                    },
                    {
                        "name": "sigma",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createDashPathEffect",
                "return_type": "PathEffect",
                "parameters": [
                    {
                        "name": "intervals",
                        "type": "Array"
                    },
                    {
                        "name": "phase",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCornerPathEffect",
                "return_type": "PathEffect",
                "parameters": [
                    {
                        "name": "radius",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createColorShader",
                "return_type": "ShaderEffect",
                "parameters": [
                    {
                        "name": "color",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createLinearGradient",
                "return_type": "ShaderEffect",
                "parameters": [
                    {
                        "name": "startPt",
                        "type": "common2D"
                    },
                    {
                        "name": "endPt",
                        "type": "common2D"
                    },
                    {
                        "name": "colors",
                        "type": "Array"
                    },
                    {
                        "name": "mode",
                        "type": "TileMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRadialGradient",
                "return_type": "ShaderEffect",
                "parameters": [
                    {
                        "name": "centerPt",
                        "type": "common2D"
                    },
                    {
                        "name": "radius",
                        "type": "number"
                    },
                    {
                        "name": "colors",
                        "type": "Array"
                    },
                    {
                        "name": "mode",
                        "type": "TileMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSweepGradient",
                "return_type": "ShaderEffect",
                "parameters": [
                    {
                        "name": "centerPt",
                        "type": "common2D"
                    },
                    {
                        "name": "colors",
                        "type": "Array"
                    },
                    {
                        "name": "mode",
                        "type": "TileMode"
                    },
                    {
                        "name": "startAngle",
                        "type": "number"
                    },
                    {
                        "name": "endAngle",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createConicalGradient",
                "return_type": "ShaderEffect",
                "parameters": [
                    {
                        "name": "startPt",
                        "type": "common2D"
                    },
                    {
                        "name": "startRadius",
                        "type": "number"
                    },
                    {
                        "name": "endPt",
                        "type": "common2D"
                    },
                    {
                        "name": "endRadius",
                        "type": "number"
                    },
                    {
                        "name": "colors",
                        "type": "Array"
                    },
                    {
                        "name": "mode",
                        "type": "TileMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "ShadowLayer",
                "parameters": [
                    {
                        "name": "blurRadius",
                        "type": "number"
                    },
                    {
                        "name": "x",
                        "type": "number"
                    },
                    {
                        "name": "y",
                        "type": "number"
                    },
                    {
                        "name": "color",
                        "type": "common2D"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createBlendModeColorFilter",
                "return_type": "ColorFilter",
                "parameters": [
                    {
                        "name": "color",
                        "type": "common2D"
                    },
                    {
                        "name": "mode",
                        "type": "BlendMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createComposeColorFilter",
                "return_type": "ColorFilter",
                "parameters": [
                    {
                        "name": "outer",
                        "type": "ColorFilter"
                    },
                    {
                        "name": "inner",
                        "type": "ColorFilter"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createLinearToSRGBGamma",
                "return_type": "ColorFilter",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSRGBGammaToLinear",
                "return_type": "ColorFilter",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createLumaColorFilter",
                "return_type": "ColorFilter",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createMatrixColorFilter",
                "return_type": "ColorFilter",
                "parameters": [
                    {
                        "name": "matrix",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createBlurImageFilter",
                "return_type": "ImageFilter",
                "parameters": [
                    {
                        "name": "sigmaX",
                        "type": "number"
                    },
                    {
                        "name": "sigmaY",
                        "type": "number"
                    },
                    {
                        "name": "tileMode",
                        "type": "TileMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createFromColorFilter",
                "return_type": "ImageFilter",
                "parameters": [
                    {
                        "name": "colorFilter",
                        "type": "ColorFilter"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "RoundRect",
                "extends": null
            },
            {
                "class": "Path",
                "extends": null
            },
            {
                "class": "SamplingOptions",
                "extends": null
            },
            {
                "class": "Canvas",
                "extends": null
            },
            {
                "class": "TextBlob",
                "extends": null
            },
            {
                "class": "TextBlob",
                "extends": null
            },
            {
                "class": "specifies",
                "extends": null
            },
            {
                "class": "Typeface",
                "extends": null
            },
            {
                "class": "Font",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "Lattice",
                "extends": null
            },
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "MaskFilter",
                "extends": null
            },
            {
                "class": "PathEffect",
                "extends": null
            },
            {
                "class": "ShaderEffect",
                "extends": null
            },
            {
                "class": "ShadowLayer",
                "extends": null
            },
            {
                "class": "ColorFilter",
                "extends": null
            },
            {
                "class": "ImageFilter",
                "extends": null
            },
            {
                "class": "Pen",
                "extends": null
            },
            {
                "class": "Brush",
                "extends": null
            },
            {
                "class": "Matrix",
                "extends": null
            },
            {
                "class": "Region",
                "extends": null
            }
        ]
    },
    "@ohos.bluetooth.hid": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.baseProfile",
                "imported_as": "type baseProfile"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createHidHostProfile",
                "return_type": "HidHostProfile",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.pasteboard": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.data.unifiedDataChannel",
                "imported_as": "unifiedDataChannel"
            }
        ],
        "interfaces": {
            "PasteDataProperty": [],
            "PasteDataRecord": [],
            "PasteData": [],
            "SystemPasteboard": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createHtmlData",
                "return_type": "PasteData",
                "parameters": [
                    {
                        "name": "htmlText",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWantData",
                "return_type": "PasteData",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPlainTextData",
                "return_type": "PasteData",
                "parameters": [
                    {
                        "name": "text",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createUriData",
                "return_type": "PasteData",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createData",
                "return_type": "PasteData",
                "parameters": [
                    {
                        "name": "mimeType",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "ValueType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createData",
                "return_type": "PasteData",
                "parameters": [
                    {
                        "name": "data",
                        "type": "Record"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createHtmlTextRecord",
                "return_type": "PasteDataRecord",
                "parameters": [
                    {
                        "name": "htmlText",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWantRecord",
                "return_type": "PasteDataRecord",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createPlainTextRecord",
                "return_type": "PasteDataRecord",
                "parameters": [
                    {
                        "name": "text",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createUriRecord",
                "return_type": "PasteDataRecord",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRecord",
                "return_type": "PasteDataRecord",
                "parameters": [
                    {
                        "name": "mimeType",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "ValueType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSystemPasteboard",
                "return_type": "SystemPasteboard",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.distributedHardware.deviceManager": {
        "dependencies": [],
        "interfaces": {
            "DeviceInfo": [
                "deviceId",
                "deviceName",
                "deviceType",
                "networkId",
                "range",
                "authForm"
            ],
            "SubscribeInfo": [
                "subscribeId",
                "mode",
                "medium",
                "freq",
                "isSameAccount",
                "isWakeRemote",
                "capability"
            ],
            "PublishInfo": [
                "publishId",
                "mode",
                "freq",
                "ranging"
            ],
            "AuthParam": [
                "authType"
            ],
            "AuthInfo": [
                "authType",
                "token"
            ],
            "DeviceManager": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createDeviceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.runningLock": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "isRunningLockTypeSupported",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "RunningLockType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRunningLockTypeSupported",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "RunningLockType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "type",
                        "type": "RunningLockType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRunningLock",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "RunningLockType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createRunningLock",
                "return_type": "Promise<RunningLock>",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "RunningLockType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "RunningLockType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Promise<RunningLock>",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "RunningLockType"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "RunningLock",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "@ohos.multimodalInput.keyEvent": {
        "dependencies": [],
        "interfaces": {
            "Key": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.wifiManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "WifiProxyConfig": [],
            "WifiEapConfig": [],
            "WifiDeviceConfig": [],
            "WifiWapiConfig": [],
            "IpConfig": [],
            "WifiInfoElem": [],
            "WifiScanInfo": [],
            "WifiLinkedInfo": [],
            "IpInfo": [],
            "Ipv6Info": [],
            "HotspotConfig": [],
            "StationInfo": [],
            "WifiP2pDevice": [],
            "WifiP2PConfig": [],
            "WifiP2pGroupInfo": [],
            "WifiP2pLinkedInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "enableWifi",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableWifi",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableSemiWifi",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isWifiActive",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "scan",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startScan",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScanResults",
                "return_type": "Promise<Array<WifiScanInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWifiDetailState",
                "return_type": "WifiDetailState",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScanResults",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScanResultsSync",
                "return_type": "Array<WifiScanInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScanInfoList",
                "return_type": "Array<WifiScanInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setScanAlwaysAllowed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isScanAlwaysAllowed",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScanAlwaysAllowed",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDeviceConfig",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDeviceConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addCandidateConfig",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addCandidateConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeCandidateConfig",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeCandidateConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCandidateConfigs",
                "return_type": "Array<WifiDeviceConfig>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectToCandidateConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectToNetwork",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "connectToDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disconnect",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSignalLevel",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "rssi",
                        "type": "number"
                    },
                    {
                        "name": "band",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLinkedInfo",
                "return_type": "Promise<WifiLinkedInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLinkedInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isConnected",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedFeatures",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isFeatureSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "featureId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceMacAddress",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIpInfo",
                "return_type": "IpInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIpv6Info",
                "return_type": "Ipv6Info",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCountryCode",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reassociate",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reconnect",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceConfigs",
                "return_type": "Array<WifiDeviceConfig>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateNetwork",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableNetwork",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllNetwork",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBandTypeSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "bandType",
                        "type": "WifiBandType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get5GChannelList",
                "return_type": "Array<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisconnectedReason",
                "return_type": "DisconnectedReason",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startPortalCertification",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMeteredHotspot",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableHiLinkHandshake",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isHiLinkEnable",
                        "type": "boolean"
                    },
                    {
                        "name": "bssid",
                        "type": "string"
                    },
                    {
                        "name": "config",
                        "type": "WifiDeviceConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "factoryReset",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableHotspot",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableHotspot",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHotspotDualBandSupported",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHotspotActive",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHotspotConfig",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "HotspotConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHotspotConfig",
                "return_type": "HotspotConfig",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStations",
                "return_type": "Array<StationInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getHotspotBlockList",
                "return_type": "Array<StationInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pLinkedInfo",
                "return_type": "Promise<WifiP2pLinkedInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pLinkedInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentGroup",
                "return_type": "Promise<WifiP2pGroupInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pPeerDevices",
                "return_type": "Promise<WifiP2pDevice",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pPeerDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pLocalDevice",
                "return_type": "Promise<WifiP2pDevice>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pLocalDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiP2PConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeGroup",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "p2pConnect",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "WifiP2PConfig"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "p2pCancelConnect",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDiscoverDevices",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopDiscoverDevices",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deletePersistentGroup",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "netId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pGroups",
                "return_type": "Promise<Array<WifiP2pGroupInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getP2pGroups",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDeviceName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "devName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bssid",
                "return_type": "the",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.bluetoothManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.bluetooth.constant",
                "imported_as": "type constant"
            },
            {
                "module": "@ohos.bluetooth.access",
                "imported_as": "type access"
            }
        ],
        "interfaces": {
            "BluetoothInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getBluetoothInfo",
                "return_type": "BluetoothInfo",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setBluetoothDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isBluetoothDisabled",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAllowedBluetoothDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "deviceIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllowedBluetoothDevices",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "deviceIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllowedBluetoothDevices",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.resourceschedule.backgroundTaskManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.wantAgent",
                "imported_as": "WantAgent"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.notificationManager",
                "imported_as": "type notificationManager"
            }
        ],
        "interfaces": {
            "DelaySuspendInfo": [],
            "ContinuousTaskNotification": [],
            "EfficiencyResourcesRequest": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "cancelSuspendDelay",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemainingDelayTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRemainingDelayTime",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestSuspendDelay",
                "return_type": "DelaySuspendInfo",
                "parameters": [
                    {
                        "name": "reason",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBackgroundRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bgMode",
                        "type": "BackgroundMode"
                    },
                    {
                        "name": "wantAgent",
                        "type": "WantAgent"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBackgroundRunning",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bgMode",
                        "type": "BackgroundMode"
                    },
                    {
                        "name": "wantAgent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startBackgroundRunning",
                "return_type": "Promise<ContinuousTaskNotification>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bgModes",
                        "type": "string"
                    },
                    {
                        "name": "wantAgent",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateBackgroundRunning",
                "return_type": "Promise<ContinuousTaskNotification>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "bgModes",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBackgroundRunning",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stopBackgroundRunning",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "applyEfficiencyResources",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "EfficiencyResourcesRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetAllEfficiencyResources",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.file.fileExtensionInfo": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.ability.ChildProcessOptions": {
        "dependencies": [],
        "interfaces": {
            "ChildProcessOptions": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.ability.ExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Ability",
                "imported_as": "Ability"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "ExtensionAbility",
                "extends": "Ability"
            }
        ]
    },
    "@ohos.driver.deviceManager": {
        "dependencies": [
            {
                "module": "@ohos.rpc",
                "imported_as": "type rpc"
            }
        ],
        "interfaces": {
            "Device": [],
            "RemoteDeviceDriver": [],
            "USBInterfaceDesc": [],
            "DeviceInfo": [],
            "DriverInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "queryDevices",
                "return_type": "Array<Readonly<Device>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bindDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "onDisconnect",
                        "type": "AsyncCallback"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    },
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "remote",
                        "type": "rpc"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bindDeviceDriver",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "onDisconnect",
                        "type": "AsyncCallback"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bindDevice",
                "return_type": "Promise<",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "onDisconnect",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "bindDeviceDriver",
                "return_type": "Promise<RemoteDeviceDriver>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "onDisconnect",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unbindDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unbindDevice",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryDeviceInfo",
                "return_type": "Array<Readonly<DeviceInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryDriverInfo",
                "return_type": "Array<Readonly<DriverInfo>>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "code",
                "extends": null
            },
            {
                "class": "code",
                "extends": null
            }
        ]
    },
    "@ohos.application.abilityDelegatorRegistry": {
        "dependencies": [
            {
                "module": "@ohos.application.AbilityDelegator",
                "imported_as": "AbilityDelegator"
            },
            {
                "module": "@ohos.application.abilityDelegatorArgs",
                "imported_as": "AbilityDelegatorArgs"
            },
            {
                "module": "@ohos.application.AbilityMonitor",
                "imported_as": "AbilityMonitor"
            },
            {
                "module": "@ohos.application.shellCmdResult",
                "imported_as": "ShellCmdResult"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getAbilityDelegator",
                "return_type": "AbilityDelegator",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getArguments",
                "return_type": "AbilityDelegatorArgs",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.request": {
        "dependencies": [],
        "interfaces": {
            "UploadResponse": [
                "code",
                "data",
                "headers"
            ],
            "DownloadResponse": [
                "token"
            ],
            "OnDownloadCompleteResponse": [
                "uri"
            ],
            "RequestFile": [
                "uri"
            ],
            "RequestData": [
                "name",
                "value"
            ],
            "UploadRequestOptions": [
                "url",
                "files",
                "available",
                "data",
                "data"
            ],
            "DownloadRequestOptions": [
                "url",
                "data",
                "data"
            ],
            "OnDownloadCompleteOptions": [
                "token",
                "data",
                "data"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "upload",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "UploadRequestOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "download",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "DownloadRequestOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "onDownloadComplete",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "OnDownloadCompleteOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Request",
                "extends": null
            }
        ]
    },
    "@ohos.accessibility": {
        "dependencies": [],
        "interfaces": {
            "CaptionsManager": [],
            "CaptionsStyle": [],
            "AccessibilityAbilityInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isOpenAccessibility",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOpenAccessibility",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOpenAccessibilitySync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOpenTouchGuide",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOpenTouchGuide",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isOpenTouchGuideSync",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityLists",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "abilityType",
                        "type": "AbilityType"
                    },
                    {
                        "name": "stateType",
                        "type": "AbilityState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAbilityLists",
                "return_type": "Promise<Array<AccessibilityAbilityInfo>>",
                "parameters": [
                    {
                        "name": "abilityType",
                        "type": "AbilityType"
                    },
                    {
                        "name": "stateType",
                        "type": "AbilityState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessibilityExtensionList",
                "return_type": "Promise<Array<AccessibilityAbilityInfo>>",
                "parameters": [
                    {
                        "name": "abilityType",
                        "type": "AbilityType"
                    },
                    {
                        "name": "stateType",
                        "type": "AbilityState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessibilityExtensionList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "abilityType",
                        "type": "AbilityType"
                    },
                    {
                        "name": "stateType",
                        "type": "AbilityState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAccessibilityExtensionListSync",
                "return_type": "Array<AccessibilityAbilityInfo>",
                "parameters": [
                    {
                        "name": "abilityType",
                        "type": "AbilityType"
                    },
                    {
                        "name": "stateType",
                        "type": "AbilityState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "EventInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "event",
                        "type": "EventInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendAccessibilityEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "EventInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendAccessibilityEvent",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "event",
                        "type": "EventInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCaptionsManager",
                "return_type": "CaptionsManager",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "EventInfo",
                "extends": null
            }
        ]
    },
    "@ohos.geolocation": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.wantAgent",
                "imported_as": "WantAgent"
            }
        ],
        "interfaces": {
            "SatelliteStatusInfo": [
                "satellitesNumber",
                "satelliteIds",
                "carrierToNoiseDensitys",
                "altitudes",
                "azimuths",
                "carrierFrequencies"
            ],
            "CachedGnssLocationsRequest": [
                "reportingPeriodSec",
                "wakeUpCacheQueueFull"
            ],
            "GeofenceRequest": [
                "priority",
                "scenario",
                "geofence"
            ],
            "Geofence": [
                "latitude",
                "longitude",
                "radius",
                "expiration"
            ],
            "ReverseGeoCodeRequest": [
                "latitude",
                "longitude"
            ],
            "GeoCodeRequest": [
                "description"
            ],
            "GeoAddress": [],
            "LocationRequest": [],
            "CurrentLocationRequest": [],
            "Location": [
                "latitude",
                "longitude",
                "altitude",
                "accuracy",
                "speed",
                "timeStamp",
                "direction",
                "timeSinceBoot"
            ],
            "LocationCommand": [
                "scenario",
                "command"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "LocationRequest"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "CachedGnssLocationsRequest"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeofenceRequest"
                    },
                    {
                        "name": "want",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeofenceRequest"
                    },
                    {
                        "name": "want",
                        "type": "WantAgent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "CurrentLocationRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentLocation",
                "return_type": "Promise<Location>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLastLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLastLocation",
                "return_type": "Promise<Location>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocationEnabled",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestEnableLocation",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "ReverseGeoCodeRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocation",
                "return_type": "Promise<Array<GeoAddress>>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "ReverseGeoCodeRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocationName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeoCodeRequest"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAddressesFromLocationName",
                "return_type": "Promise<Array<GeoAddress>>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "GeoCodeRequest"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isGeoServiceAvailable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isGeoServiceAvailable",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCachedGnssLocationsSize",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCachedGnssLocationsSize",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "flushCachedGnssLocations",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "flushCachedGnssLocations",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendCommand",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "command",
                        "type": "LocationCommand"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendCommand",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "command",
                        "type": "LocationCommand"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.locationManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setLocationPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "policy",
                        "type": "LocationPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLocationPolicy",
                "return_type": "LocationPolicy",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.window": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "BaseContext"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.rpc",
                "imported_as": "rpc"
            },
            {
                "module": "@ohos.app.ability.dialogRequest",
                "imported_as": "dialogRequest"
            },
            {
                "module": "@ohos.arkui.UIContext",
                "imported_as": "UIContext"
            },
            {
                "module": "@ohos.app.ability.ConfigurationConstant",
                "imported_as": "ConfigurationConstant"
            }
        ],
        "interfaces": {
            "SystemBarProperties": [],
            "SystemBarStyle": [],
            "SystemBarRegionTint": [],
            "SystemBarTintState": [],
            "Rect": [],
            "AvoidArea": [],
            "Size": [],
            "WindowInfo": [],
            "WindowProperties": [],
            "DecorButtonStyle": [],
            "ScaleOptions": [],
            "RotateOptions": [],
            "TranslateOptions": [],
            "TransitionContext": [],
            "TransitionController": [],
            "Configuration": [],
            "WindowLimits": [],
            "TitleButtonRect": [],
            "RectChangeOptions": [],
            "AvoidAreaOptions": [],
            "MoveConfiguration": [],
            "Window": [],
            "SubWindowOptions": [],
            "WindowStage": [],
            "SystemWindowOptions": [],
            "ExtensionWindowConfig": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createWindow",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "config",
                        "type": "Configuration"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createWindow",
                "return_type": "Promise<Window>",
                "parameters": [
                    {
                        "name": "config",
                        "type": "Configuration"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "WindowType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Promise<Window>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "WindowType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "Promise<Window>",
                "parameters": [
                    {
                        "name": "ctx",
                        "type": "BaseContext"
                    },
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "WindowType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "ctx",
                        "type": "BaseContext"
                    },
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "type": "WindowType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "find",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "find",
                "return_type": "Promise<Window>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "findWindow",
                "return_type": "Window",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTopWindow",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTopWindow",
                "return_type": "Promise<Window>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTopWindow",
                "return_type": "Promise<Window>",
                "parameters": [
                    {
                        "name": "ctx",
                        "type": "BaseContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTopWindow",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "ctx",
                        "type": "BaseContext"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLastWindow",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "ctx",
                        "type": "BaseContext"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLastWindow",
                "return_type": "Promise<Window>",
                "parameters": [
                    {
                        "name": "ctx",
                        "type": "BaseContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "minimizeAll",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "minimizeAll",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "toggleShownStateForAllAppWindows",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "toggleShownStateForAllAppWindows",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWindowLayoutMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "WindowLayoutMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWindowLayoutMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "WindowLayoutMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGestureNavigationEnabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setGestureNavigationEnabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWaterMarkImage",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "pixelMap",
                        "type": "image"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWaterMarkImage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "pixelMap",
                        "type": "image"
                    },
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shiftAppWindowFocus",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "sourceWindowId",
                        "type": "number"
                    },
                    {
                        "name": "targetWindowId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getVisibleWindowInfo",
                "return_type": "Promise<Array<WindowInfo>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSnapshot",
                "return_type": "Promise<image",
                "parameters": [
                    {
                        "name": "windowId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getWindowsByCoordinate",
                "return_type": "Promise<Array<Window>>",
                "parameters": [
                    {
                        "name": "displayId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimodalInput.inputDevice": {
        "dependencies": [],
        "interfaces": {
            "DeviceListener": [],
            "AxisRange": [],
            "InputDeviceData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "listener",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceIds",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceIds",
                "return_type": "Promise<Array<number>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDevice",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDevice",
                "return_type": "Promise<InputDeviceData>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceList",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceList",
                "return_type": "Promise<Array<number>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceInfo",
                "return_type": "Promise<InputDeviceData>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceInfoSync",
                "return_type": "InputDeviceData",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "supportKeys",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "keys",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "supportKeys",
                "return_type": "Promise<Array<boolean>>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "keys",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "supportKeysSync",
                "return_type": "Array<boolean>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "keys",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardType",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardType",
                "return_type": "Promise<KeyboardType>",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardTypeSync",
                "return_type": "KeyboardType",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setKeyboardRepeatDelay",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "delay",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setKeyboardRepeatDelay",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "delay",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardRepeatDelay",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardRepeatDelay",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setKeyboardRepeatRate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rate",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setKeyboardRepeatRate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "rate",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardRepeatRate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getKeyboardRepeatRate",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIntervalSinceLastInput",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetooth.socket": {
        "dependencies": [],
        "interfaces": {
            "SppOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "sppListen",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "SppOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppAccept",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "serverSocket",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppConnect",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "SppOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppCloseServerSocket",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "socket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppCloseClientSocket",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "socket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sppWrite",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    },
                    {
                        "name": "data",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "clientSocket",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.Configuration": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.ConfigurationConstant",
                "imported_as": "ConfigurationConstant"
            }
        ],
        "interfaces": {
            "Configuration": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.util.Deque": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Deque",
                "extends": null
            }
        ]
    },
    "@ohos.settings": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.ability.dataAbilityHelper",
                "imported_as": "DataAbilityHelper"
            },
            {
                "module": "@ohos.application.Context",
                "imported_as": "Context"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getURI",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getURI",
                "return_type": "Promise<object>",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "dataAbilityHelper",
                        "type": "DataAbilityHelper"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValue",
                "return_type": "Promise<object>",
                "parameters": [
                    {
                        "name": "dataAbilityHelper",
                        "type": "DataAbilityHelper"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValue",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValue",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "dataAbilityHelper",
                        "type": "DataAbilityHelper"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "object"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "dataAbilityHelper",
                        "type": "DataAbilityHelper"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValue",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAirplaneMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "enableAirplaneMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "enable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canShowFloating",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canShowFloating",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUriSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValueSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "dataAbilityHelper",
                        "type": "DataAbilityHelper"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "defValue",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValueSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "defValue",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getValueSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "defValue",
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValueSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "dataAbilityHelper",
                        "type": "DataAbilityHelper"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValueSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setValueSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerKeyObserver",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "type": "string"
                    },
                    {
                        "name": "observer",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterKeyObserver",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.prompt": {
        "dependencies": [],
        "interfaces": {
            "ShowToastOptions": [],
            "Button": [],
            "ShowDialogSuccessResponse": [],
            "ShowDialogOptions": [],
            "ShowActionMenuOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "showToast",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowToastOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showDialog",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowDialogOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "showActionMenu",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ShowActionMenuOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Prompt",
                "extends": null
            }
        ]
    },
    "@ohos.enterprise.restrictions": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setPrinterDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPrinterDisabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isPrinterDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isPrinterDisabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHdcDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setHdcDisabled",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHdcDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isHdcDisabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableMicrophone",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disable",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isMicrophoneDisabled",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFingerprintAuthDisabled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "disabled",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isFingerprintAuthDisabled",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDisallowedPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "feature",
                        "type": "string"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedPolicy",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "feature",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDisallowedPolicyForAccount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "feature",
                        "type": "string"
                    },
                    {
                        "name": "disallow",
                        "type": "boolean"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedPolicyForAccount",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "feature",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedListForAccount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "feature",
                        "type": "string"
                    },
                    {
                        "name": "list",
                        "type": "Array"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedListForAccount",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "feature",
                        "type": "string"
                    },
                    {
                        "name": "list",
                        "type": "Array"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedListForAccount",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "feature",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.inspector": {
        "dependencies": [],
        "interfaces": {
            "ComponentObserver": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createComponentObserver",
                "return_type": "ComponentObserver",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.bundleManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "InstallParam": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "addAllowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAllowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAllowedInstallBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addAllowedInstallBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllowedInstallBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllowedInstallBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllowedInstallBundles",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllowedInstallBundlesSync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedInstallBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedInstallBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedInstallBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedInstallBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedInstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedInstallBundles",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedInstallBundlesSync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedUninstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedUninstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedUninstallBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addDisallowedUninstallBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedUninstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedUninstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedUninstallBundles",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeDisallowedUninstallBundlesSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "appIds",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedUninstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedUninstallBundles",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedUninstallBundles",
                "return_type": "Promise<Array<string>>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisallowedUninstallBundlesSync",
                "return_type": "Array<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "isKeepData",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstall",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "isKeepData",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstall",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "install",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "hapFilePaths",
                        "type": "Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "install",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "hapFilePaths",
                        "type": "Array"
                    },
                    {
                        "name": "installParam",
                        "type": "InstallParam"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "install",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "hapFilePaths",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.childProcessManager": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "startChildProcess",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "srcEntry",
                        "type": "string"
                    },
                    {
                        "name": "startMode",
                        "type": "StartMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startChildProcess",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "srcEntry",
                        "type": "string"
                    },
                    {
                        "name": "startMode",
                        "type": "StartMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startArkChildProcess",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "srcEntry",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "ChildProcessArgs"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startNativeChildProcess",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "entryPoint",
                        "type": "string"
                    },
                    {
                        "name": "args",
                        "type": "ChildProcessArgs"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.package": {
        "dependencies": [],
        "interfaces": {
            "CheckPackageHasInstalledResponse": [],
            "CheckPackageHasInstalledOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "hasInstalled",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "CheckPackageHasInstalledOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Package",
                "extends": null
            }
        ]
    },
    "@ohos.userIAM.faceAuth": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "FaceAuthManager",
                "extends": null
            },
            {
                "class": "instance",
                "extends": null
            }
        ]
    },
    "@ohos.multimodalInput.inputMonitor": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.multimodalInput.mouseEvent",
                "imported_as": "MouseEvent"
            },
            {
                "module": "@ohos.display",
                "imported_as": "type display"
            }
        ],
        "interfaces": {
            "TouchEventReceiver": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "TouchEventReceiver"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "rect",
                        "type": "display"
                    },
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    },
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    },
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    },
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    },
                    {
                        "name": "receiver",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "fingers",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.ai.mindSporeLite": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "Model": [],
            "TrainCfg": [],
            "Context": [],
            "CpuDevice": [],
            "Extension": [],
            "NNRTDeviceDescription": [],
            "NNRTDevice": [],
            "MSTensor": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "loadModelFromFile",
                "return_type": "Promise<Model>",
                "parameters": [
                    {
                        "name": "model",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "model",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromFile",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "model",
                        "type": "string"
                    },
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromBuffer",
                "return_type": "Promise<Model>",
                "parameters": [
                    {
                        "name": "model",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromBuffer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "model",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromBuffer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "model",
                        "type": "ArrayBuffer"
                    },
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromFd",
                "return_type": "Promise<Model>",
                "parameters": [
                    {
                        "name": "model",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromFd",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "model",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadModelFromFd",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "model",
                        "type": "number"
                    },
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadTrainModelFromFile",
                "return_type": "Promise<Model>",
                "parameters": [
                    {
                        "name": "model",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadTrainModelFromBuffer",
                "return_type": "Promise<Model>",
                "parameters": [
                    {
                        "name": "model",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadTrainModelFromFd",
                "return_type": "Promise<Model>",
                "parameters": [
                    {
                        "name": "model",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllNNRTDeviceDescriptions",
                "return_type": "NNRTDeviceDescription",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.deviceAttest": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "AttestResultInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getAttestStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAttestStatus",
                "return_type": "Promise<AttestResultInfo>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAttestStatusSync",
                "return_type": "AttestResultInfo",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bundle.shortcutManager": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ShortcutInfo",
                "imported_as": "ShortcutInfo as _ShortcutInfo"
            },
            {
                "module": "@ohos.bundleManager.ShortcutInfo",
                "imported_as": "ShortcutWant as _ShortcutWant"
            },
            {
                "module": "@ohos.bundleManager.ShortcutInfo",
                "imported_as": "ParameterItem as _ParameterItem"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "addDesktopShortcutInfo",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "shortcutInfo",
                        "type": "ShortcutInfo"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteDesktopShortcutInfo",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "shortcutInfo",
                        "type": "ShortcutInfo"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllDesktopShortcutInfo",
                "return_type": "Promise<Array<ShortcutInfo>>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.url": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "parseURL",
                "return_type": "URL",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "URLSearchParams",
                "extends": null
            },
            {
                "class": "URLParams",
                "extends": null
            },
            {
                "class": "URL",
                "extends": null
            }
        ]
    },
    "@ohos.resourceschedule.systemload": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getLevel",
                "return_type": "Promise<SystemLoadLevel>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.statfs": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getFreeBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFreeBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalBytes",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getTotalBytes",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "path",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.appstartup.StartupConfig": {
        "dependencies": [
            {
                "module": "@ohos.app.appstartup.StartupListener",
                "imported_as": "StartupListener"
            }
        ],
        "interfaces": {
            "StartupConfig": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.app.ability.ShareExtensionAbility": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIExtensionAbility",
                "imported_as": "UIExtensionAbility"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "ShareExtensionAbility",
                "extends": "UIExtensionAbility"
            }
        ]
    },
    "@ohos.xml": {
        "dependencies": [],
        "interfaces": {
            "ParseInfo": [],
            "ParseOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "XmlSerializer",
                "extends": null
            },
            {
                "class": "XmlPullParser",
                "extends": null
            }
        ]
    },
    "@ohos.bundle.appDomainVerify": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "queryAssociatedDomains",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "bundleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "queryAssociatedBundleNames",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "domain",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.form.formObserver": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.app.form.formInfo",
                "imported_as": "formInfo"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostBundleName",
                        "type": "string"
                    },
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostBundleName",
                        "type": "string"
                    },
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostBundleName",
                        "type": "string"
                    },
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostBundleName",
                        "type": "string"
                    },
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfos",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    },
                    {
                        "name": "isUnusedIncluded",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfos",
                "return_type": "Promise<Array<formInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfos",
                "return_type": "Promise<Array<formInfo",
                "parameters": [
                    {
                        "name": "isUnusedIncluded",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfosByFilter",
                "return_type": "Promise<Array<formInfo",
                "parameters": [
                    {
                        "name": "formProviderFilter",
                        "type": "formInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfosByFilter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formProviderFilter",
                        "type": "formInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfoById",
                "return_type": "Promise<formInfo",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfoById",
                "return_type": "Promise<formInfo",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "isUnusedIncluded",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfoById",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRunningFormInfoById",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "isUnusedIncluded",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostBundleName",
                        "type": "string"
                    },
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostBundleName",
                        "type": "string"
                    },
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "hostBundleName",
                        "type": "string"
                    },
                    {
                        "name": "observerCallback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.cloudExtension": {
        "dependencies": [
            {
                "module": "@ohos.rpc",
                "imported_as": "type rpc"
            },
            {
                "module": "@ohos.data.cloudData",
                "imported_as": "type cloudData"
            },
            {
                "module": "@ohos.data.relationalStore",
                "imported_as": "type relationalStore"
            }
        ],
        "interfaces": {
            "CloudInfo": [],
            "ServiceInfo": [],
            "AppBriefInfo": [],
            "Field": [],
            "Table": [],
            "Database": [],
            "AppSchema": [],
            "CloudData": [],
            "SubscribeInfo": [],
            "SubscribeId": [],
            "ExtensionValue": [],
            "LockInfo": [],
            "CloudDB": [],
            "AssetLoader": [],
            "ShareCenter": [],
            "CloudService": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createShareServiceStub",
                "return_type": "Promise<rpc",
                "parameters": [
                    {
                        "name": "instance",
                        "type": "ShareCenter"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCloudServiceStub",
                "return_type": "Promise<rpc",
                "parameters": [
                    {
                        "name": "instance",
                        "type": "CloudService"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createCloudDBStub",
                "return_type": "Promise<rpc",
                "parameters": [
                    {
                        "name": "instance",
                        "type": "CloudDB"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAssetLoaderStub",
                "return_type": "Promise<rpc",
                "parameters": [
                    {
                        "name": "instance",
                        "type": "AssetLoader"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.graphics.uiEffect": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "Filter": [],
            "VisualEffect": [],
            "BrightnessBlender": [],
            "BrightnessBlenderParam": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createFilter",
                "return_type": "Filter",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createEffect",
                "return_type": "VisualEffect",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createBrightnessBlender",
                "return_type": "BrightnessBlender",
                "parameters": [
                    {
                        "name": "param",
                        "type": "BrightnessBlenderParam"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.fetch": {
        "dependencies": [],
        "interfaces": {
            "FetchResponse": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "Fetch",
                "extends": null
            }
        ]
    },
    "@ohos.cooperate": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "CooperateMessage": [],
            "MouseLocation": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "prepare",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "prepare",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "prepareCooperate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "prepareCooperate",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unprepare",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unprepare",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unprepareCooperate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unprepareCooperate",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "activate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetNetworkId",
                        "type": "string"
                    },
                    {
                        "name": "inputDeviceId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "activate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "targetNetworkId",
                        "type": "string"
                    },
                    {
                        "name": "inputDeviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "activateCooperate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "targetNetworkId",
                        "type": "string"
                    },
                    {
                        "name": "inputDeviceId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "activateCooperate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "targetNetworkId",
                        "type": "string"
                    },
                    {
                        "name": "inputDeviceId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deactivate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isUnchained",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deactivate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "isUnchained",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deactivateCooperate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "isUnchained",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deactivateCooperate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "isUnchained",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCrossingSwitchState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCrossingSwitchState",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCooperateSwitchState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCooperateSwitchState",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    },
                    {
                        "name": "networkId",
                        "type": "string"
                    },
                    {
                        "name": "msg",
                        "type": "CooperateMsg"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "networkId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@system.device": {
        "dependencies": [],
        "interfaces": {
            "DeviceResponse": [],
            "GetDeviceOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getInfo",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Device",
                "extends": null
            }
        ]
    },
    "@ohos.commonEvent": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.commonEvent.commonEventData",
                "imported_as": "CommonEventData"
            },
            {
                "module": "@ohos.commonEvent.commonEventSubscriber",
                "imported_as": "CommonEventSubscriber"
            },
            {
                "module": "@ohos.commonEvent.commonEventSubscribeInfo",
                "imported_as": "CommonEventSubscribeInfo"
            },
            {
                "module": "@ohos.commonEvent.commonEventPublishData",
                "imported_as": "CommonEventPublishData"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "options",
                        "type": "CommonEventPublishData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishAsUser",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "publishAsUser",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "CommonEventPublishData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSubscriber",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscribeInfo",
                        "type": "CommonEventSubscribeInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSubscriber",
                "return_type": "Promise<CommonEventSubscriber>",
                "parameters": [
                    {
                        "name": "subscribeInfo",
                        "type": "CommonEventSubscribeInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "CommonEventSubscriber"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribe",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "CommonEventSubscriber"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.form.formProvider": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.form.formBindingData",
                "imported_as": "formBindingData"
            },
            {
                "module": "@ohos.app.form.formInfo",
                "imported_as": "formInfo"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setFormNextRefreshTime",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "minute",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFormNextRefreshTime",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "minute",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "formBindingData",
                        "type": "formBindingData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateForm",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "formId",
                        "type": "string"
                    },
                    {
                        "name": "formBindingData",
                        "type": "formBindingData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "filter",
                        "type": "formInfo"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFormsInfo",
                "return_type": "Promise<Array<formInfo",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestPublishForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "formBindingData",
                        "type": "formBindingData"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestPublishForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestPublishForm",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRequestPublishFormSupported",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRequestPublishFormSupported",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.appstartup.startupManager": {
        "dependencies": [
            {
                "module": "@ohos.app.appstartup.StartupConfig",
                "imported_as": "StartupConfig"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "run",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "startupTasks",
                        "type": "Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeAllStartupTaskResults",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStartupTaskResult",
                "return_type": "Object",
                "parameters": [
                    {
                        "name": "startupTask",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isStartupTaskInitialized",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "startupTask",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeStartupTaskResult",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "startupTask",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.net.socket": {
        "dependencies": [
            {
                "module": "@ohos.security.cert",
                "imported_as": "type cert"
            }
        ],
        "interfaces": {
            "UDPSendOptions": [],
            "ExtraOptionsBase": [],
            "SocketStateBase": [],
            "SocketRemoteInfo": [],
            "LocalSocketMessageInfo": [],
            "LocalAddress": [],
            "LocalConnectOptions": [],
            "LocalSendOptions": [],
            "UDPSocket": [],
            "LocalSocket": [],
            "LocalSocketConnection": [],
            "LocalSocketServer": [],
            "TCPConnectOptions": [],
            "TCPSendOptions": [],
            "TCPSocket": [],
            "TLSSocket": [],
            "TLSSecureOptions": [],
            "TLSConnectOptions": [],
            "TCPSocketConnection": [],
            "TCPSocketServer": [],
            "TLSSocketConnection": [],
            "SocketMessageInfo": [],
            "TLSSocketServer": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "constructUDPSocketInstance",
                "return_type": "UDPSocket",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructMulticastSocketInstance",
                "return_type": "MulticastSocket",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructTCPSocketInstance",
                "return_type": "TCPSocket",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructTLSSocketInstance",
                "return_type": "TLSSocket",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructTLSSocketInstance",
                "return_type": "TLSSocket",
                "parameters": [
                    {
                        "name": "tcpSocket",
                        "type": "TCPSocket"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructTCPSocketServerInstance",
                "return_type": "TCPSocketServer",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructTLSSocketServerInstance",
                "return_type": "TLSSocketServer",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructLocalSocketInstance",
                "return_type": "LocalSocket",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "constructLocalSocketServerInstance",
                "return_type": "LocalSocketServer",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimodalInput.inputEventClient": {
        "dependencies": [
            {
                "module": "@ohos.multimodalInput.mouseEvent",
                "imported_as": "MouseEvent"
            },
            {
                "module": "@ohos.multimodalInput.touchEvent",
                "imported_as": "TouchEvent"
            }
        ],
        "interfaces": {
            "KeyEvent": [],
            "MouseEventData": [],
            "TouchEventData": [],
            "KeyEventData": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "injectKeyEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyEvent",
                        "type": "KeyEventData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "injectEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "KeyEvent",
                        "type": "KeyEvent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "injectMouseEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mouseEvent",
                        "type": "MouseEventData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "injectTouchEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "touchEvent",
                        "type": "TouchEventData"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "permitInjection",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "result",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.animator": {
        "dependencies": [],
        "interfaces": {
            "AnimatorOptions": [],
            "AnimatorResult": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createAnimator",
                "return_type": "AnimatorResult",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AnimatorOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "create",
                "return_type": "AnimatorResult",
                "parameters": [
                    {
                        "name": "options",
                        "type": "AnimatorOptions"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Animator",
                "extends": null
            }
        ]
    },
    "@ohos.screenLock": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "SystemEvent": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "isScreenLocked",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isScreenLocked",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isLocked",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSecureMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isSecureMode",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockScreen",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlockScreen",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlock",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unlock",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lock",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lock",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "onSystemEvent",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendScreenLockEvent",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "event",
                        "type": "String"
                    },
                    {
                        "name": "parameter",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendScreenLockEvent",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "event",
                        "type": "String"
                    },
                    {
                        "name": "parameter",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestStrongAuth",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "reasonFlag",
                        "type": "StrongAuthReasonFlags"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getStrongAuth",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setScreenLockDisabled",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "disable",
                        "type": "boolean"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isScreenLockDisabled",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setScreenLockAuthState",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "state",
                        "type": "AuthState"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "authToken",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getScreenLockAuthState",
                "return_type": "AuthState",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.form.formAgent": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "requestPublishForm",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestPublishForm",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "want",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bluetooth.pan": {
        "dependencies": [
            {
                "module": "@ohos.bluetooth.baseProfile",
                "imported_as": "type baseProfile"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createPanProfile",
                "return_type": "PanProfile",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.application.formError": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.wifiext": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "enableHotspot",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "disableHotspot",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedPowerModel",
                "return_type": "Promise<Array<PowerModel>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSupportedPowerModel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerModel",
                "return_type": "Promise<PowerModel>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPowerModel",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPowerModel",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "model",
                        "type": "PowerModel"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.bundle.defaultAppManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundleManager.BundleInfo",
                "imported_as": "BundleInfo"
            },
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "isDefaultApplication",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDefaultApplication",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isDefaultApplicationSync",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultApplication",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultApplication",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultApplication",
                "return_type": "Promise<BundleInfo>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultApplicationSync",
                "return_type": "BundleInfo",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultApplication",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultApplication",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultApplication",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setDefaultApplicationSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "elementName",
                        "type": "ElementName"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetDefaultApplication",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetDefaultApplication",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetDefaultApplication",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resetDefaultApplicationSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "type",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.appstartup.StartupConfigEntry": {
        "dependencies": [
            {
                "module": "@ohos.app.appstartup.StartupConfig",
                "imported_as": "StartupConfig"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "StartupConfigEntry",
                "extends": null
            }
        ]
    },
    "@ohos.telephony.radio": {
        "dependencies": [],
        "interfaces": {
            "NetworkRadioTech": [],
            "SignalInformation": [],
            "NetworkState": [],
            "CellInformation": [],
            "CdmaCellInformation": [],
            "GsmCellInformation": [],
            "LteCellInformation": [],
            "NrCellInformation": [],
            "TdscdmaCellInformation": [],
            "WcdmaCellInformation": [],
            "NetworkSearchResult": [],
            "NetworkInformation": [],
            "NetworkSelectionModeOptions": [],
            "ImsRegInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getRadioTech",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRadioTech",
                "return_type": "Promise<NetworkRadioTech>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkState",
                "return_type": "Promise<NetworkState>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendUpdateCellLocationRequest",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendUpdateCellLocationRequest",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendUpdateCellLocationRequest",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellInformation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellInformation",
                "return_type": "Promise<Array<CellInformation>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCellInformation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkSelectionMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkSelectionMode",
                "return_type": "Promise<NetworkSelectionMode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkSelectionMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NetworkSelectionModeOptions"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkSelectionMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "options",
                        "type": "NetworkSelectionModeOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkSearchInformation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkSearchInformation",
                "return_type": "Promise<NetworkSearchResult>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getISOCountryCodeForNetwork",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getISOCountryCodeForNetwork",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getISOCountryCodeForNetworkSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNrOptionMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNrOptionMode",
                "return_type": "Promise<NrOptionMode>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNrOptionMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIMEI",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIMEI",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIMEI",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMEID",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMEID",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getMEID",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUniqueDeviceId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUniqueDeviceId",
                "return_type": "Promise<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUniqueDeviceId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrimarySlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrimarySlotId",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPrimarySlotId",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPrimarySlotId",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSignalInformation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSignalInformation",
                "return_type": "Promise<Array<SignalInformation>>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSignalInformationSync",
                "return_type": "Array<SignalInformation>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNrSupported",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNrSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNRSupported",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isNRSupported",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRadioOn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRadioOn",
                "return_type": "Promise<boolean>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isRadioOn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "turnOnRadio",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "turnOnRadio",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "turnOnRadio",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "turnOffRadio",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "turnOffRadio",
                "return_type": "Promise<void>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "turnOffRadio",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOperatorName",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOperatorName",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getOperatorNameSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPreferredNetwork",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "networkMode",
                        "type": "PreferredNetworkMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPreferredNetwork",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "networkMode",
                        "type": "PreferredNetworkMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferredNetwork",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPreferredNetwork",
                "return_type": "Promise<PreferredNetworkMode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getImsRegInfo",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "imsType",
                        "type": "ImsServiceType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getImsRegInfo",
                "return_type": "Promise<ImsRegInfo>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "imsType",
                        "type": "ImsServiceType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "imsType",
                        "type": "ImsServiceType"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "imsType",
                        "type": "ImsServiceType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBasebandVersion",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getBasebandVersion",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNROptionMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "NROptionMode"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNROptionMode",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "mode",
                        "type": "NROptionMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNROptionMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNROptionMode",
                "return_type": "Promise<NROptionMode>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkCapability",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "NetworkCapabilityType"
                    },
                    {
                        "name": "state",
                        "type": "NetworkCapabilityState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setNetworkCapability",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "NetworkCapabilityType"
                    },
                    {
                        "name": "state",
                        "type": "NetworkCapabilityState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkCapability",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "NetworkCapabilityType"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetworkCapability",
                "return_type": "Promise<NetworkCapabilityState>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    },
                    {
                        "name": "type",
                        "type": "NetworkCapabilityType"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "factoryReset",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getIMEISV",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "slotId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "objects",
                "extends": null
            },
            {
                "class": "uses",
                "extends": null
            },
            {
                "class": "whose",
                "extends": null
            },
            {
                "class": "objects",
                "extends": null
            },
            {
                "class": "objects",
                "extends": null
            }
        ]
    },
    "@ohos.bytrace": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "startTrace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "taskId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finishTrace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "taskId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "traceByValue",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.appstartup.StartupListener": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "StartupListener",
                "extends": null
            }
        ]
    },
    "@ohos.ability.dataUriUtils": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getId",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "attachId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateId",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "uri",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "used",
                "extends": null
            }
        ]
    },
    "@ohos.data.rdb": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.data.rdb.resultSet",
                "imported_as": "ResultSet as _ResultSet"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "Context"
            }
        ],
        "interfaces": {
            "RdbStore": [],
            "StoreConfig": [
                "name"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getRdbStore",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "config",
                        "type": "StoreConfig"
                    },
                    {
                        "name": "version",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getRdbStore",
                "return_type": "Promise<RdbStore>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "config",
                        "type": "StoreConfig"
                    },
                    {
                        "name": "version",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteRdbStore",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteRdbStore",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "context",
                        "type": "Context"
                    },
                    {
                        "name": "name",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "provides",
                "extends": null
            },
            {
                "class": "RdbPredicates",
                "extends": null
            }
        ]
    },
    "@ohos.convertxml": {
        "dependencies": [],
        "interfaces": {
            "ConvertOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ConvertXML",
                "extends": null
            }
        ]
    },
    "@ohos.util.LightWeightSet": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "LightWeightSet",
                "extends": null
            }
        ]
    },
    "@ohos.security.certManager": {
        "dependencies": [],
        "interfaces": {
            "CertInfo": [],
            "CertAbstract": [],
            "Credential": [],
            "CredentialAbstract": [],
            "CMResult": [],
            "CMSignatureSpec": [],
            "CMHandle": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "installPrivateCertificate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keystore",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "keystorePwd",
                        "type": "string"
                    },
                    {
                        "name": "certAlias",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "installPrivateCertificate",
                "return_type": "Promise<CMResult>",
                "parameters": [
                    {
                        "name": "keystore",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "keystorePwd",
                        "type": "string"
                    },
                    {
                        "name": "certAlias",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstallPrivateCertificate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyUri",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstallPrivateCertificate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "keyUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllAppPrivateCertificates",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllAppPrivateCertificates",
                "return_type": "Promise<CMResult>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrivateCertificate",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "keyUri",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrivateCertificate",
                "return_type": "Promise<CMResult>",
                "parameters": [
                    {
                        "name": "keyUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "init",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "authUri",
                        "type": "string"
                    },
                    {
                        "name": "spec",
                        "type": "CMSignatureSpec"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "init",
                "return_type": "Promise<CMHandle>",
                "parameters": [
                    {
                        "name": "authUri",
                        "type": "string"
                    },
                    {
                        "name": "spec",
                        "type": "CMSignatureSpec"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "update",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "data",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "update",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "data",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finish",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "signature",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finish",
                "return_type": "Promise<CMResult>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "abort",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "Uint8Array"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "abort",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "handle",
                        "type": "Uint8Array"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPublicCertificate",
                "return_type": "Promise<CMResult>",
                "parameters": [
                    {
                        "name": "keyUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isAuthorizedApp",
                "return_type": "Promise<boolean>",
                "parameters": [
                    {
                        "name": "keyUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllUserTrustedCertificates",
                "return_type": "Promise<CMResult>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getUserTrustedCertificate",
                "return_type": "Promise<CMResult>",
                "parameters": [
                    {
                        "name": "certUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllSystemAppCertificates",
                "return_type": "Promise<CMResult>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrivateCertificates",
                "return_type": "Promise<CMResult>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.app.ability.dialogSession": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "DialogAbilityInfo": [],
            "DialogSessionInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getDialogSessionInfo",
                "return_type": "DialogSessionInfo",
                "parameters": [
                    {
                        "name": "dialogSessionId",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendDialogResult",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "dialogSessionId",
                        "type": "string"
                    },
                    {
                        "name": "targetWant",
                        "type": "Want"
                    },
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendDialogResult",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "dialogSessionId",
                        "type": "string"
                    },
                    {
                        "name": "targetWant",
                        "type": "Want"
                    },
                    {
                        "name": "isAllowed",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.arkui.modifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@ohos.util.json": {
        "dependencies": [],
        "interfaces": {
            "ParseOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "parse",
                "return_type": "Object",
                "parameters": [
                    {
                        "name": "text",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "stringify",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "value",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "has",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "obj",
                        "type": "object"
                    },
                    {
                        "name": "property",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "remove",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "obj",
                        "type": "object"
                    },
                    {
                        "name": "property",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.multimedia.media": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "ErrorCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "type image"
            },
            {
                "module": "@ohos.multimedia.drm",
                "imported_as": "type drm"
            }
        ],
        "interfaces": {
            "AVMetadataExtractor": [],
            "AVMetadata": [],
            "AVImageGenerator": [],
            "PixelMapParams": [],
            "AVPlayer": [],
            "PlaybackInfo": [
                "key"
            ],
            "MediaSource": [],
            "PlaybackStrategy": [],
            "AVFileDescriptor": [],
            "AVDataSrcDescriptor": [],
            "SubtitleInfo": [],
            "AudioPlayer": [],
            "AVRecorder": [],
            "Location": [],
            "WatermarkConfig": [],
            "AudioRecorderConfig": [],
            "AudioRecorder": [],
            "VideoRecorder": [],
            "VideoPlayer": [],
            "VideoRecorderProfile": [],
            "VideoRecorderConfig": [],
            "EncoderInfo": [],
            "Range": [],
            "AVRecorderProfile": [],
            "AVRecorderConfig": [],
            "MediaDescription": [
                "key"
            ],
            "AVScreenCaptureRecordConfig": [],
            "AVScreenCaptureRecorder": [],
            "AVTranscoderConfig": [],
            "AVTranscoder": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "createAVPlayer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVPlayer",
                "return_type": "Promise<AVPlayer>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVRecorder",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVRecorder",
                "return_type": "Promise<AVRecorder>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAudioPlayer",
                "return_type": "AudioPlayer",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAudioRecorder",
                "return_type": "AudioRecorder",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createMediaSourceWithUrl",
                "return_type": "MediaSource",
                "parameters": [
                    {
                        "name": "url",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVideoPlayer",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVideoPlayer",
                "return_type": "Promise<VideoPlayer>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVideoRecorder",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createVideoRecorder",
                "return_type": "Promise<VideoRecorder>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSoundPool",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "maxStreams",
                        "type": "number"
                    },
                    {
                        "name": "audioRenderInfo",
                        "type": "audio"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createSoundPool",
                "return_type": "Promise<SoundPool>",
                "parameters": [
                    {
                        "name": "maxStreams",
                        "type": "number"
                    },
                    {
                        "name": "audioRenderInfo",
                        "type": "audio"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVScreenCaptureRecorder",
                "return_type": "Promise<AVScreenCaptureRecorder>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "reportAVScreenCaptureUserChoice",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "sessionId",
                        "type": "number"
                    },
                    {
                        "name": "choice",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVTranscoder",
                "return_type": "Promise<AVTranscoder>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVMetadataExtractor",
                "return_type": "Promise<AVMetadataExtractor>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVMetadataExtractor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVImageGenerator",
                "return_type": "Promise<AVImageGenerator>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createAVImageGenerator",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "in",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "startTimeMs",
                        "type": "number"
                    },
                    {
                        "name": "endTimeMs",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.enterprise.securityManager": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "type image"
            }
        ],
        "interfaces": {
            "DeviceEncryptionStatus": [],
            "CertBlob": [],
            "PasswordPolicy": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getSecurityPatchTag",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceEncryptionStatus",
                "return_type": "DeviceEncryptionStatus",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getSecurityStatus",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "item",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "installUserCertificate",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "certificate",
                        "type": "CertBlob"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "uninstallUserCertificate",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "certUri",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setPasswordPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "policy",
                        "type": "PasswordPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPasswordPolicy",
                "return_type": "PasswordPolicy",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPasswordPolicy",
                "return_type": "PasswordPolicy",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppClipboardPolicy",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "tokenId",
                        "type": "number"
                    },
                    {
                        "name": "policy",
                        "type": "ClipboardPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAppClipboardPolicy",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setWatermarkImage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "source",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelWatermarkImage",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "admin",
                        "type": "Want"
                    },
                    {
                        "name": "bundleName",
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.data.commonType": {
        "dependencies": [],
        "interfaces": {
            "Asset": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.util.TreeSet": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TreeSet",
                "extends": null
            }
        ]
    },
    "@ohos.data.dataAbility": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.data.rdb",
                "imported_as": "rdb"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createRdbPredicates",
                "return_type": "rdb",
                "parameters": [
                    {
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "name": "dataAbilityPredicates",
                        "type": "DataAbilityPredicates"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "DataAbilityPredicates",
                "extends": null
            }
        ]
    },
    "@ohos.multimodalInput.touchEvent": {
        "dependencies": [],
        "interfaces": {
            "Touch": []
        },
        "methods": [],
        "inheritance": []
    },
    "@ohos.file.picker": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.application.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.@kit.ArkUI",
                "imported_as": "window"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PhotoSelectOptions",
                "extends": null
            },
            {
                "class": "PhotoSelectResult",
                "extends": null
            },
            {
                "class": "PhotoSaveOptions",
                "extends": null
            },
            {
                "class": "PhotoViewPicker",
                "extends": null
            },
            {
                "class": "DocumentSelectOptions",
                "extends": null
            },
            {
                "class": "DocumentSaveOptions",
                "extends": null
            },
            {
                "class": "DocumentViewPicker",
                "extends": null
            },
            {
                "class": "AudioSelectOptions",
                "extends": null
            },
            {
                "class": "AudioSaveOptions",
                "extends": null
            },
            {
                "class": "AudioViewPicker",
                "extends": null
            }
        ]
    },
    "@ohos.display": {
        "dependencies": [
            {
                "module": "@ohos.graphics.colorSpaceManager",
                "imported_as": "type colorSpaceManager"
            },
            {
                "module": "@ohos.graphics.hdrCapability",
                "imported_as": "type hdrCapability"
            }
        ],
        "interfaces": {
            "FoldCreaseRegion": [],
            "Rect": [],
            "WaterfallDisplayAreaRects": [],
            "CutoutInfo": [],
            "DisplayPhysicalResolution": [],
            "Display": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getDefaultDisplay",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultDisplay",
                "return_type": "Promise<Display>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDefaultDisplaySync",
                "return_type": "Display",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getPrimaryDisplaySync",
                "return_type": "Display",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDisplayByIdSync",
                "return_type": "Display",
                "parameters": [
                    {
                        "name": "displayId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllDisplay",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllDisplay",
                "return_type": "Promise<Array<Display>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllDisplays",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllDisplays",
                "return_type": "Promise<Array<Display>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getAllDisplayPhysicalResolution",
                "return_type": "Promise<Array<DisplayPhysicalResolution>>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "hasPrivateWindow",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "displayId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isFoldable",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFoldStatus",
                "return_type": "FoldStatus",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "isCaptured",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getFoldDisplayMode",
                "return_type": "FoldDisplayMode",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFoldDisplayMode",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "mode",
                        "type": "FoldDisplayMode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getCurrentFoldCreaseRegion",
                "return_type": "FoldCreaseRegion",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setFoldStatusLocked",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "locked",
                        "type": "boolean"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.net.netFirewall": {
        "dependencies": [],
        "interfaces": {
            "NetFirewallPolicy": [],
            "NetFirewallIpParams": [
                "1"
            ],
            "NetFirewallPortParams": [],
            "NetFirewallDomainParams": [],
            "NetFirewallDnsParams": [],
            "NetFirewallRule": [],
            "InterceptedRecord": [],
            "RequestParam": [],
            "FirewallRulePage": [],
            "InterceptedRecordPage": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "setNetFirewallPolicy",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "policy",
                        "type": "NetFirewallPolicy"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetFirewallPolicy",
                "return_type": "Promise<NetFirewallPolicy>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addNetFirewallRule",
                "return_type": "Promise<number>",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "NetFirewallRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateNetFirewallRule",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "rule",
                        "type": "NetFirewallRule"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeNetFirewallRule",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "ruleId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetFirewallRules",
                "return_type": "Promise<FirewallRulePage>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "requestParam",
                        "type": "RequestParam"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getNetFirewallRule",
                "return_type": "Promise<NetFirewallRule>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "ruleId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInterceptedRecords",
                "return_type": "Promise<InterceptedRecordPage>",
                "parameters": [
                    {
                        "name": "userId",
                        "type": "number"
                    },
                    {
                        "name": "requestParam",
                        "type": "RequestParam"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.systemParameterEnhance": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getSync",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "def",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setSync",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@ohos.continuation.continuationManager": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "on",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "Callback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "off",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "register",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "register",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ContinuationExtraParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "register",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregister",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregister",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateConnectStatus",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "DeviceConnectState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateConnectStatus",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "DeviceConnectState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDeviceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDeviceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "ContinuationExtraParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startDeviceManager",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerContinuation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerContinuation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ContinuationExtraParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "registerContinuation",
                "return_type": "Promise<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterContinuation",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterContinuation",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContinuationState",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "DeviceConnectState"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "updateContinuationState",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "type": "DeviceConnectState"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startContinuationDeviceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startContinuationDeviceManager",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    },
                    {
                        "name": "options",
                        "type": "ContinuationExtraParams"
                    },
                    {
                        "name": "callback",
                        "type": "AsyncCallback"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startContinuationDeviceManager",
                "return_type": "Promise<void>",
                "parameters": [
                    {
                        "name": "token",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "app.context": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundle.applicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.processInfo",
                "imported_as": "ProcessInfo"
            },
            {
                "module": "@ohos.bundle.elementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.application.BaseContext",
                "imported_as": "BaseContext"
            },
            {
                "module": "@ohos.bundle.hapModuleInfo",
                "imported_as": "HapModuleInfo"
            },
            {
                "module": "@ohos.appVersionInfo",
                "imported_as": "AppVersionInfo"
            },
            {
                "module": "@ohos.bundle.abilityInfo",
                "imported_as": "AbilityInfo"
            },
            {
                "module": "@ohos.bundle",
                "imported_as": "bundle"
            }
        ],
        "interfaces": {
            "PermissionRequestResult": [],
            "PermissionOptions": []
        },
        "methods": [],
        "inheritance": []
    },
    "app.processInfo": {
        "dependencies": [],
        "interfaces": {
            "ProcessInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "app.appVersionInfo": {
        "dependencies": [],
        "interfaces": {
            "AppVersionInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ErrorObserver": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ErrorObserver",
                "extends": null
            }
        ]
    },
    "application.MissionListener": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            }
        ],
        "interfaces": {
            "MissionListener": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.AutoFillType": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "application.shellCmdResult": {
        "dependencies": [],
        "interfaces": {
            "ShellCmdResult": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ContinueMissionInfo": {
        "dependencies": [],
        "interfaces": {
            "ContinueMissionInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.MissionInfo": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "MissionInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.AbilityStageMonitor": {
        "dependencies": [],
        "interfaces": {
            "AbilityStageMonitor": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.BusinessAbilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.app.businessAbilityRouter",
                "imported_as": "type businessAbilityRouter"
            }
        ],
        "interfaces": {
            "BusinessAbilityInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ContinueDeviceInfo": {
        "dependencies": [],
        "interfaces": {
            "ContinueDeviceInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.RunningMultiInstanceInfo": {
        "dependencies": [],
        "interfaces": {
            "RunningMultiInstanceInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.AbilityFirstFrameStateData": {
        "dependencies": [],
        "interfaces": {
            "AbilityFirstFrameStateData": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.RunningAppClone": {
        "dependencies": [],
        "interfaces": {
            "RunningAppClone": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.AbilityDelegator": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.app.ability.UIAbility",
                "imported_as": "UIAbility"
            },
            {
                "module": "@ohos.app.ability.AbilityStage",
                "imported_as": "AbilityStage"
            },
            {
                "module": "@ohos.AbilityMonitor",
                "imported_as": "AbilityMonitor"
            },
            {
                "module": "@ohos.AbilityStageMonitor",
                "imported_as": "AbilityStageMonitor"
            },
            {
                "module": "@ohos.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.shellCmdResult",
                "imported_as": "ShellCmdResult"
            }
        ],
        "interfaces": {
            "AbilityDelegator": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.AppForegroundStateObserver": {
        "dependencies": [
            {
                "module": "@ohos.application.AppStateData",
                "imported_as": "type AppStateData"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AppForegroundStateObserver",
                "extends": null
            }
        ]
    },
    "application.FormExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "FormExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.AccessibilityExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.accessibility",
                "imported_as": "type accessibility"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {
            "AccessibilityElement": [],
            "ElementAttributeValues": [],
            "Rect": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "AccessibilityExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.AutoStartupInfo": {
        "dependencies": [],
        "interfaces": {
            "AutoStartupInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.UIServiceExtensionConnectCallback": {
        "dependencies": [],
        "interfaces": {
            "UIServiceExtensionConnectCallback": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.AbilityStartCallback": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AbilityStartCallback",
                "extends": null
            }
        ]
    },
    "application.ExtensionRunningInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundle"
            }
        ],
        "interfaces": {
            "ExtensionRunningInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.ContinuableInfo": {
        "dependencies": [],
        "interfaces": {
            "ContinuableInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.abilityDelegatorArgs": {
        "dependencies": [],
        "interfaces": {
            "AbilityDelegatorArgs": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "names",
                "extends": null
            },
            {
                "class": "names",
                "extends": null
            },
            {
                "class": "names",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "application.AppStateData": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AppStateData",
                "extends": null
            }
        ]
    },
    "application.UIServiceExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "type StartOptions"
            },
            {
                "module": "@ohos.AbilityStartCallback",
                "imported_as": "type AbilityStartCallback"
            },
            {
                "module": "@ohos.ability.connectOptions",
                "imported_as": "ConnectOptions"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "UIServiceExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.WindowExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.application.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "WindowExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.AbilityStageContext": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.HapModuleInfo",
                "imported_as": "HapModuleInfo"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            },
            {
                "module": "@ohos.Context",
                "imported_as": "Context"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AbilityStageContext",
                "extends": "Context"
            }
        ]
    },
    "application.RunningMultiAppInfo": {
        "dependencies": [
            {
                "module": "@ohos.application.MultiAppMode",
                "imported_as": "MultiAppMode"
            },
            {
                "module": "@ohos.application.RunningAppClone",
                "imported_as": "RunningAppClone"
            },
            {
                "module": "@ohos.application.RunningMultiInstanceInfo",
                "imported_as": "RunningMultiInstanceInfo"
            }
        ],
        "interfaces": {
            "RunningMultiAppInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.CustomData": {
        "dependencies": [],
        "interfaces": {
            "CustomData": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.HapModuleInfo",
                "imported_as": "HapModuleInfo"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            },
            {
                "module": "@ohos.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.bundleManager.ExtensionAbilityInfo",
                "imported_as": "ExtensionAbilityInfo"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ExtensionContext",
                "extends": "Context"
            }
        ]
    },
    "application.AutoFillRequest": {
        "dependencies": [
            {
                "module": "@ohos.application.CustomData",
                "imported_as": "type CustomData"
            },
            {
                "module": "@ohos.application.AutoFillPopupConfig",
                "imported_as": "type AutoFillPopupConfig"
            },
            {
                "module": "@ohos.application.ViewData",
                "imported_as": "type ViewData"
            }
        ],
        "interfaces": {
            "FillRequest": [],
            "SaveRequest": [],
            "UpdateRequest": [],
            "FillResponse": [],
            "FillRequestCallback": [],
            "SaveRequestCallback": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ViewData": {
        "dependencies": [
            {
                "module": "@ohos.application.PageNodeInfo",
                "imported_as": "type PageNodeInfo"
            },
            {
                "module": "@ohos.application.AutoFillRect",
                "imported_as": "type AutoFillRect"
            }
        ],
        "interfaces": {
            "ViewData": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ContinueCallback": {
        "dependencies": [],
        "interfaces": {
            "ContinueCallback": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.MissionDeviceInfo": {
        "dependencies": [],
        "interfaces": {
            "MissionDeviceInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ProcessInformation": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.appManager",
                "imported_as": "type appManager"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            }
        ],
        "interfaces": {
            "ProcessInformation": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.MediaControlExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.UIExtensionContext",
                "imported_as": "UIExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "MediaControlExtensionContext",
                "extends": "UIExtensionContext"
            }
        ]
    },
    "application.PhotoEditorExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PhotoEditorExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.ServiceExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.ability.connectOptions",
                "imported_as": "ConnectOptions"
            },
            {
                "module": "@ohos.app.ability.UIAbility",
                "imported_as": "Caller"
            },
            {
                "module": "@ohos.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            },
            {
                "module": "@ohos.app.ability.OpenLinkOptions",
                "imported_as": "OpenLinkOptions"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ServiceExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.DriverExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "DriverExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.MissionParameter": {
        "dependencies": [],
        "interfaces": {
            "MissionParameter": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ApplicationStateObserver": {
        "dependencies": [
            {
                "module": "@ohos.application.AppStateData",
                "imported_as": "AppStateData"
            },
            {
                "module": "@ohos.application.AbilityStateData",
                "imported_as": "AbilityStateData"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ApplicationStateObserver",
                "extends": null
            }
        ]
    },
    "application.AutoFillExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.application.CustomData",
                "imported_as": "type CustomData"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AutoFillExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.MultiAppMode": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "application.AbilityRunningInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.app.ability.abilityManager",
                "imported_as": "abilityManager"
            }
        ],
        "interfaces": {
            "AbilityRunningInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.EmbeddableUIAbilityContext": {
        "dependencies": [
            {
                "module": "@ohos.application.UIAbilityContext",
                "imported_as": "UIAbilityContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "EmbeddableUIAbilityContext",
                "extends": "UIAbilityContext"
            }
        ]
    },
    "application.AutoStartupCallback": {
        "dependencies": [],
        "interfaces": {
            "AutoStartupCallback": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.PageNodeInfo": {
        "dependencies": [
            {
                "module": "@ohos.application.AutoFillRect",
                "imported_as": "type AutoFillRect"
            }
        ],
        "interfaces": {
            "PageNodeInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.AbilityMonitor": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.UIAbility",
                "imported_as": "UIAbility"
            }
        ],
        "interfaces": {
            "AbilityMonitor": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.MissionSnapshot": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            }
        ],
        "interfaces": {
            "MissionSnapshot": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ProcessData": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ProcessData",
                "extends": null
            }
        ]
    },
    "application.UIServiceHostProxy": {
        "dependencies": [],
        "interfaces": {
            "UIServiceHostProxy": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.ApplicationContext": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.app.ability.AbilityLifecycleCallback",
                "imported_as": "AbilityLifecycleCallback"
            },
            {
                "module": "@ohos.app.ability.EnvironmentCallback",
                "imported_as": "EnvironmentCallback"
            },
            {
                "module": "@ohos.app.ability.ApplicationStateChangeCallback",
                "imported_as": "type ApplicationStateChangeCallback"
            },
            {
                "module": "@ohos.ProcessInformation",
                "imported_as": "ProcessInformation"
            },
            {
                "module": "@ohos.app.ability.ConfigurationConstant",
                "imported_as": "type ConfigurationConstant"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ApplicationContext",
                "extends": "Context"
            }
        ]
    },
    "application.LoopObserver": {
        "dependencies": [],
        "interfaces": {
            "LoopObserver": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.MissionCallbacks": {
        "dependencies": [],
        "interfaces": {
            "MissionCallback": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.VpnExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "VpnExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.UIAbilityContext": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.AbilityInfo",
                "imported_as": "AbilityInfo"
            },
            {
                "module": "@ohos.ability.abilityResult",
                "imported_as": "AbilityResult"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.ability.connectOptions",
                "imported_as": "ConnectOptions"
            },
            {
                "module": "@ohos.bundleManager.HapModuleInfo",
                "imported_as": "HapModuleInfo"
            },
            {
                "module": "@ohos.Context",
                "imported_as": "Context"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            },
            {
                "module": "@ohos.app.ability.OpenLinkOptions",
                "imported_as": "OpenLinkOptions"
            },
            {
                "module": "@ohos.app.ability.Configuration",
                "imported_as": "Configuration"
            },
            {
                "module": "@ohos.app.ability.UIAbility",
                "imported_as": "Caller"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.app.ability.dialogRequest",
                "imported_as": "dialogRequest"
            },
            {
                "module": "@ohos.app.ability.AbilityConstant",
                "imported_as": "AbilityConstant"
            },
            {
                "module": "@ohos.AbilityStartCallback",
                "imported_as": "type AbilityStartCallback"
            },
            {
                "module": "@ohos.window",
                "imported_as": "window"
            },
            {
                "module": "@ohos.app.ability.AtomicServiceOptions",
                "imported_as": "type AtomicServiceOptions"
            },
            {
                "module": "@ohos.UIServiceProxy",
                "imported_as": "type UIServiceProxy"
            },
            {
                "module": "@ohos.UIServiceExtensionConnectCallback",
                "imported_as": "type UIServiceExtensionConnectCallback"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "UIAbilityContext",
                "extends": "Context"
            }
        ]
    },
    "application.AutoFillRect": {
        "dependencies": [],
        "interfaces": {
            "AutoFillRect": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.AbilityStateData": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AbilityStateData",
                "extends": null
            }
        ]
    },
    "application.AbilityForegroundStateObserver": {
        "dependencies": [
            {
                "module": "@ohos.application.AbilityStateData",
                "imported_as": "AbilityStateData"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AbilityForegroundStateObserver",
                "extends": null
            }
        ]
    },
    "application.Context": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ApplicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.resourceManager",
                "imported_as": "resmgr"
            },
            {
                "module": "@ohos.BaseContext",
                "imported_as": "BaseContext"
            },
            {
                "module": "@ohos.EventHub",
                "imported_as": "EventHub"
            },
            {
                "module": "@ohos.ApplicationContext",
                "imported_as": "ApplicationContext"
            },
            {
                "module": "@ohos.app.ability.contextConstant",
                "imported_as": "contextConstant"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Context",
                "extends": "BaseContext"
            }
        ]
    },
    "application.ProcessRunningInfo": {
        "dependencies": [],
        "interfaces": {
            "ProcessRunningInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            }
        ]
    },
    "application.UIExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "type StartOptions"
            },
            {
                "module": "@ohos.app.ability.AtomicServiceOptions",
                "imported_as": "type AtomicServiceOptions"
            },
            {
                "module": "@ohos.app.ability.OpenLinkOptions",
                "imported_as": "OpenLinkOptions"
            },
            {
                "module": "@ohos.UIServiceProxy",
                "imported_as": "type UIServiceProxy"
            },
            {
                "module": "@ohos.UIServiceExtensionConnectCallback",
                "imported_as": "type UIServiceExtensionConnectCallback"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "UIExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "application.BaseContext": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "BaseContext",
                "extends": null
            }
        ]
    },
    "application.AutoFillPopupConfig": {
        "dependencies": [],
        "interfaces": {
            "AutoFillPopupConfig": [],
            "PopupSize": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.UIServiceProxy": {
        "dependencies": [],
        "interfaces": {
            "UIServiceProxy": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.EventHub": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "BusinessError"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "EventHub",
                "extends": null
            }
        ]
    },
    "application.AbilityFirstFrameStateObserver": {
        "dependencies": [
            {
                "module": "@ohos.application.AbilityFirstFrameStateData",
                "imported_as": "AbilityFirstFrameStateData"
            }
        ],
        "interfaces": {
            "AbilityFirstFrameStateObserver": []
        },
        "methods": [],
        "inheritance": []
    },
    "application.WorkSchedulerExtensionContext": {
        "dependencies": [
            {
                "module": "@ohos.application.ExtensionContext",
                "imported_as": "ExtensionContext"
            },
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "type Want"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "WorkSchedulerExtensionContext",
                "extends": "ExtensionContext"
            }
        ]
    },
    "global.resource": {
        "dependencies": [],
        "interfaces": {
            "Resource": []
        },
        "methods": [],
        "inheritance": []
    },
    "global.rawFileDescriptor": {
        "dependencies": [],
        "interfaces": {
            "RawFileDescriptor": []
        },
        "methods": [],
        "inheritance": []
    },
    "continuation.continuationExtraParams": {
        "dependencies": [
            {
                "module": "@ohos.continuation.continuationManager",
                "imported_as": "continuationManager"
            }
        ],
        "interfaces": {
            "ContinuationExtraParams": []
        },
        "methods": [],
        "inheritance": []
    },
    "continuation.continuationResult": {
        "dependencies": [],
        "interfaces": {
            "ContinuationResult": []
        },
        "methods": [],
        "inheritance": []
    },
    "@internal.component.ets.row_split": {
        "dependencies": [],
        "interfaces": {
            "RowSplitInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RowSplitAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.form_component": {
        "dependencies": [],
        "interfaces": {
            "FormInfo": [],
            "FormComponentInterface": [
                "id",
                "name",
                "bundle",
                "ability",
                "module"
            ],
            "FormCallbackInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "FormComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.alphabet_indexer": {
        "dependencies": [],
        "interfaces": {
            "AlphabetIndexerOptions": [],
            "AlphabetIndexerInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "AlphabetIndexerAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.security_component": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SecurityComponentMethod",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.action_sheet": {
        "dependencies": [],
        "interfaces": {
            "SheetInfo": [],
            "DismissDialogAction": [],
            "ActionSheetButtonOptions": [],
            "ActionSheetOffset": [],
            "ActionSheetOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ActionSheet",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.menu": {
        "dependencies": [],
        "interfaces": {
            "MenuInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "MenuAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.text_input": {
        "dependencies": [],
        "interfaces": {
            "UnderlineColor": [],
            "SubmitEvent": [],
            "TextInputOptions": [],
            "TextInputInterface": [],
            "PasswordIcon": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TextInputController",
                "extends": "TextContentControllerBase"
            },
            {
                "class": "TextInputAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.refresh": {
        "dependencies": [],
        "interfaces": {
            "RefreshOptions": [],
            "RefreshInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RefreshAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.isolated_component": {
        "dependencies": [],
        "interfaces": {
            "IsolatedOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "IsolatedComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.image_span": {
        "dependencies": [],
        "interfaces": {
            "ImageSpanInterface": [],
            "ImageLoadResult": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ImageSpanAttribute",
                "extends": "BaseSpan"
            }
        ]
    },
    "@internal.component.ets.paste_button": {
        "dependencies": [],
        "interfaces": {
            "PasteButtonOptions": [],
            "PasteButtonInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PasteButtonAttribute",
                "extends": "SecurityComponentMethod"
            }
        ]
    },
    "@internal.component.ets.effect_component": {
        "dependencies": [],
        "interfaces": {
            "EffectComponentInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "EffectComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.checkbox": {
        "dependencies": [],
        "interfaces": {
            "CheckboxOptions": [],
            "CheckboxInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "CheckboxAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.rect": {
        "dependencies": [],
        "interfaces": {
            "RectOptions": [],
            "RoundedRectOptions": [],
            "RectInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RectAttribute",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@internal.component.ets.select": {
        "dependencies": [],
        "interfaces": {
            "SelectOption": [],
            "SelectInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SelectAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.focus": {
        "dependencies": [],
        "interfaces": {
            "FocusBoxStyle": []
        },
        "methods": [],
        "inheritance": []
    },
    "@internal.component.ets.text_timer": {
        "dependencies": [],
        "interfaces": {
            "TextTimerOptions": [],
            "TextTimerInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TextTimerController",
                "extends": null
            },
            {
                "class": "TextTimerAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.container_span": {
        "dependencies": [],
        "interfaces": {
            "ContainerSpanInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ContainerSpanAttribute",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.list_item": {
        "dependencies": [],
        "interfaces": {
            "SwipeActionItem": [],
            "SwipeActionOptions": [],
            "ListItemOptions": [],
            "ListItemInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ListItemAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.nav_destination": {
        "dependencies": [],
        "interfaces": {
            "NavDestinationCommonTitle": [],
            "NavDestinationCustomTitle": [],
            "NavDestinationInterface": [],
            "RouteMapConfig": [],
            "NavDestinationContext": [],
            "NestedScrollInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "NavDestinationAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.circle": {
        "dependencies": [],
        "interfaces": {
            "CircleOptions": [],
            "CircleInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "CircleAttribute",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@internal.component.ets.canvas": {
        "dependencies": [],
        "interfaces": {
            "CanvasPattern": [],
            "TextMetrics": [],
            "Size": [],
            "CanvasInterface": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "size",
                "return_type": "Size",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canvas",
                "return_type": "DrawingCanvas",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "CanvasGradient",
                "extends": null
            },
            {
                "class": "CanvasPath",
                "extends": null
            },
            {
                "class": "Path2D",
                "extends": "CanvasPath"
            },
            {
                "class": "ImageBitmap",
                "extends": null
            },
            {
                "class": "ImageData",
                "extends": null
            },
            {
                "class": "RenderingContextSettings",
                "extends": null
            },
            {
                "class": "CanvasRenderer",
                "extends": "CanvasPath"
            },
            {
                "class": "CanvasRenderingContext2D",
                "extends": "CanvasRenderer"
            },
            {
                "class": "OffscreenCanvasRenderingContext2D",
                "extends": "CanvasRenderer"
            },
            {
                "class": "OffscreenCanvas",
                "extends": null
            },
            {
                "class": "DrawingRenderingContext",
                "extends": null
            },
            {
                "class": "CanvasAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.sidebar": {
        "dependencies": [],
        "interfaces": {
            "ButtonIconOptions": [],
            "ButtonStyle": [],
            "SideBarContainerInterface": [],
            "DividerStyle": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SideBarContainerAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.animator": {
        "dependencies": [],
        "interfaces": {
            "AnimatorInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SpringProp",
                "extends": null
            },
            {
                "class": "SpringMotion",
                "extends": null
            },
            {
                "class": "FrictionMotion",
                "extends": null
            },
            {
                "class": "ScrollMotion",
                "extends": null
            },
            {
                "class": "AnimatorAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.location_button": {
        "dependencies": [],
        "interfaces": {
            "LocationButtonOptions": [],
            "LocationButtonInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "LocationButtonAttribute",
                "extends": "SecurityComponentMethod"
            }
        ]
    },
    "@internal.component.ets.stack": {
        "dependencies": [],
        "interfaces": {
            "StackOptions": [],
            "StackInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "StackAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.toggle": {
        "dependencies": [],
        "interfaces": {
            "SwitchStyle": [],
            "ToggleOptions": [],
            "ToggleInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ToggleAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.calendar": {
        "dependencies": [],
        "interfaces": {
            "CalendarDay": [],
            "MonthData": [],
            "CurrentDayStyle": [],
            "NonCurrentDayStyle": [],
            "TodayStyle": [],
            "WeekStyle": [],
            "WorkStateStyle": [],
            "CalendarSelectedDate": [],
            "CalendarRequestedData": [],
            "CalendarInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "CalendarController",
                "extends": null
            },
            {
                "class": "CalendarAttribute",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.water_flow": {
        "dependencies": [],
        "interfaces": {
            "WaterFlowOptions": [],
            "WaterFlowInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SectionOptions",
                "extends": null
            },
            {
                "class": "WaterFlowSections",
                "extends": null
            },
            {
                "class": "WaterFlowAttribute",
                "extends": "ScrollableCommonMethod"
            }
        ]
    },
    "@internal.component.ets.common_ts_ets_api": {
        "dependencies": [],
        "interfaces": {
            "IPropertySubscriber": [],
            "EnvPropsOptions": [],
            "PersistPropsOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "Link",
                "return_type": "any",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Prop",
                "return_type": "any",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Has",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "has",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Delete",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "delete",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Keys",
                "return_type": "IterableIterator<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "keys",
                "return_type": "IterableIterator<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "staticClear",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Clear",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clear",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "IsMutable",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Size",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "size",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "get",
                "return_type": "T",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "set",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "newValue",
                        "type": "T"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyHasChanged",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "newValue",
                        "type": "T"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyPropertyRead",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "aboutToBeDeleted",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "notifyPropertyHasChanged",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "propName",
                        "type": "string"
                    },
                    {
                        "name": "newValue",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "addOwningProperty",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriber",
                        "type": "IPropertySubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeOwningProperty",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "property",
                        "type": "IPropertySubscriber"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "removeOwningPropertyById",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "subscriberId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "EnvProps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "defaultValue",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "envProps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "props",
                        "type": "EnvPropsOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Keys",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "keys",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "DeleteProp",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "deleteProp",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "PersistProps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "key",
                        "type": "string"
                    },
                    {
                        "name": "defaultValue",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "persistProps",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "props",
                        "type": "PersistPropsOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "Keys",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "keys",
                "return_type": "Array<string>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "GetShared",
                "return_type": "LocalStorage",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getShared",
                "return_type": "LocalStorage",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "AppStorage",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SyncedPropertyTwoWay",
                "extends": null
            },
            {
                "class": "SyncedPropertyOneWay",
                "extends": null
            },
            {
                "class": "SubscribaleAbstract",
                "extends": null
            },
            {
                "class": "Environment",
                "extends": null
            },
            {
                "class": "PersistentStorage",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "LocalStorage",
                "extends": null
            },
            {
                "class": "SubscribedPropertyAbstract",
                "extends": null
            },
            {
                "class": "SubscribedPropertyAbstract",
                "extends": null
            },
            {
                "class": "SubscribedPropertyAbstract",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            },
            {
                "class": "SubscribedAbstractProperty",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.repeat": {
        "dependencies": [],
        "interfaces": {
            "VirtualScrollOptions": [],
            "TemplateOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RepeatAttribute",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.gesture": {
        "dependencies": [],
        "interfaces": {
            "GestureInfo": [],
            "FingerInfo": [],
            "TapGestureParameters": [],
            "GestureGroupInterface": [],
            "TapGestureHandlerOptions": [],
            "LongPressGestureHandlerOptions": [],
            "PanGestureHandlerOptions": [],
            "SwipeGestureHandlerOptions": [],
            "PinchGestureHandlerOptions": [],
            "RotationGestureHandlerOptions": [],
            "GestureGroupGestureHandlerOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PanGestureOptions",
                "extends": null
            },
            {
                "class": "GestureHandler",
                "extends": null
            },
            {
                "class": "TapGestureHandler",
                "extends": "GestureHandler"
            },
            {
                "class": "LongPressGestureHandler",
                "extends": "GestureHandler"
            },
            {
                "class": "PanGestureHandler",
                "extends": "GestureHandler"
            },
            {
                "class": "SwipeGestureHandler",
                "extends": "GestureHandler"
            },
            {
                "class": "PinchGestureHandler",
                "extends": "GestureHandler"
            },
            {
                "class": "RotationGestureHandler",
                "extends": "GestureHandler"
            },
            {
                "class": "GestureGroupHandler",
                "extends": "GestureHandler"
            },
            {
                "class": "ScrollableTargetInfo",
                "extends": "EventTargetInfo"
            },
            {
                "class": "EventTargetInfo",
                "extends": null
            },
            {
                "class": "GestureRecognizer",
                "extends": null
            },
            {
                "class": "PanRecognizer",
                "extends": "GestureRecognizer"
            }
        ]
    },
    "@internal.component.ets.panel": {
        "dependencies": [],
        "interfaces": {
            "PanelInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PanelAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.matrix2d": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "Matrix2D",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.root_scene": {
        "dependencies": [],
        "interfaces": {
            "RootSceneSession": [],
            "RootSceneInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RootSceneAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.xcomponent": {
        "dependencies": [],
        "interfaces": {
            "SurfaceRect": [],
            "SurfaceRotationOptions": [],
            "XComponentOptions": [],
            "XComponentInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "XComponentController",
                "extends": null
            },
            {
                "class": "XComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.list_item_group": {
        "dependencies": [],
        "interfaces": {
            "ListItemGroupOptions": [],
            "ListItemGroupInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ListItemGroupAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.gridItem": {
        "dependencies": [],
        "interfaces": {
            "GridItemOptions": [],
            "GridItemInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "GridItemAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.span": {
        "dependencies": [],
        "interfaces": {
            "TextBackgroundStyle": [],
            "SpanInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "BaseSpan",
                "extends": null
            },
            {
                "class": "SpanAttribute",
                "extends": "BaseSpan"
            }
        ]
    },
    "@internal.component.ets.pattern_lock": {
        "dependencies": [],
        "interfaces": {
            "CircleStyleOptions": [],
            "PatternLockInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PatternLockController",
                "extends": null
            },
            {
                "class": "PatternLockAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.image_animator": {
        "dependencies": [],
        "interfaces": {
            "ImageAnimatorInterface": [],
            "ImageFrameInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ImageAnimatorAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.plugin_component": {
        "dependencies": [],
        "interfaces": {
            "PluginComponentTemplate": [],
            "PluginComponentOptions": [],
            "PluginErrorData": [],
            "PluginComponentInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PluginComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.progress": {
        "dependencies": [],
        "interfaces": {
            "CommonProgressStyleOptions": [],
            "ScanEffectOptions": [],
            "ProgressStyleMap": [],
            "ProgressInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ProgressAttribute",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.data_panel": {
        "dependencies": [],
        "interfaces": {
            "ColorStop": [],
            "DataPanelOptions": [],
            "DataPanelInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "LinearGradient",
                "extends": null
            },
            {
                "class": "DataPanelAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.tab_content": {
        "dependencies": [],
        "interfaces": {
            "IndicatorStyle": [],
            "BoardStyle": [],
            "LabelStyle": [],
            "TabBarIconStyle": [],
            "TabBarOptions": [],
            "TabContentInterface": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "of",
                "return_type": "SubTabBarStyle",
                "parameters": [
                    {
                        "name": "content",
                        "type": "ResourceStr"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "of",
                "return_type": "SubTabBarStyle",
                "parameters": [
                    {
                        "name": "content",
                        "type": "ResourceStr"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "of",
                "return_type": "BottomTabBarStyle",
                "parameters": [
                    {
                        "name": "icon",
                        "type": "ResourceStr"
                    },
                    {
                        "name": "text",
                        "type": "ResourceStr"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "TabBarSymbol",
                "extends": null
            },
            {
                "class": "SubTabBarStyle",
                "extends": null
            },
            {
                "class": "BottomTabBarStyle",
                "extends": null
            },
            {
                "class": "TabContentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.media_cached_image": {
        "dependencies": [],
        "interfaces": {
            "ASTCResource": [],
            "MediaCachedImageInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "MediaCachedImageAttribute",
                "extends": "ImageAttribute"
            }
        ]
    },
    "@internal.component.ets.alert_dialog": {
        "dependencies": [],
        "interfaces": {
            "AlertDialogButtonBaseOptions": [],
            "TextStyle": [],
            "AlertDialogParam": [],
            "DismissDialogAction": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "AlertDialog",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.text_clock": {
        "dependencies": [],
        "interfaces": {
            "TextClockOptions": [],
            "TextClockInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TextClockController",
                "extends": null
            },
            {
                "class": "TextClockAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.row": {
        "dependencies": [],
        "interfaces": {
            "RowOptions": [],
            "RowInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RowAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.node_container": {
        "dependencies": [],
        "interfaces": {
            "NodeContainerInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "NodeContainerAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.form_link": {
        "dependencies": [],
        "interfaces": {
            "FormLinkOptions": [],
            "FormLinkInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "FormLinkAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.ability_component": {
        "dependencies": [],
        "interfaces": {
            "AbilityComponentInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "AbilityComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.navigator": {
        "dependencies": [],
        "interfaces": {
            "NavigatorInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "NavigatorAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.state_management": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "of",
                "extends": null
            },
            {
                "class": "Storage",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.grid_col": {
        "dependencies": [],
        "interfaces": {
            "GridColColumnOption": [],
            "GridColOptions": [],
            "GridColInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "GridColAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.rating": {
        "dependencies": [],
        "interfaces": {
            "RatingOptions": [],
            "StarStyleOptions": [],
            "RatingInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RatingAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.units": {
        "dependencies": [],
        "interfaces": {
            "LocalizedPadding": [],
            "LocalizedEdgeWidths": [],
            "LocalizedBorderRadiuses": [],
            "LocalizedEdgeColors": [],
            "Font": [],
            "Area": [],
            "Position": [],
            "LocalizedPosition": [],
            "Edges": [],
            "LocalizedEdges": [],
            "Bias": [],
            "ConstraintSizeOptions": [],
            "SizeOptions": [],
            "BorderOptions": [],
            "OutlineOptions": [],
            "MarkStyle": [],
            "TouchPoint": [],
            "DividerStyleOptions": [],
            "ChainWeightOptions": [],
            "AccessibilityOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ColorFilter",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.badge": {
        "dependencies": [],
        "interfaces": {
            "BadgeStyle": [],
            "BadgeParam": [],
            "BadgeInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "BadgeAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.flow_item": {
        "dependencies": [],
        "interfaces": {
            "FlowItemInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "FlowItemAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.scroll": {
        "dependencies": [],
        "interfaces": {
            "OffsetResult": [],
            "ScrollEdgeOptions": [],
            "ScrollToIndexOptions": [],
            "ScrollAnimationOptions": [],
            "OffsetOptions": [],
            "ScrollOptions": [],
            "ScrollPageOptions": [],
            "ScrollSnapOptions": [],
            "ScrollInterface": [],
            "OnScrollFrameBeginHandlerResult": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "Scroller",
                "extends": null
            },
            {
                "class": "ScrollAttribute",
                "extends": "ScrollableCommonMethod"
            }
        ]
    },
    "@internal.component.ets.remote_window": {
        "dependencies": [],
        "interfaces": {
            "RRect": [],
            "WindowAnimationTarget": [],
            "RemoteWindowInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RemoteWindowAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.menu_item_group": {
        "dependencies": [],
        "interfaces": {
            "MenuItemGroupOptions": [],
            "MenuItemGroupInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "MenuItemGroupAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.lazy_for_each": {
        "dependencies": [],
        "interfaces": {
            "DataAddOperation": [],
            "DataDeleteOperation": [],
            "DataChangeOperation": [],
            "MoveIndex": [],
            "ExchangeIndex": [],
            "ExchangeKey": [],
            "DataMoveOperation": [],
            "DataExchangeOperation": [],
            "DataReloadOperation": [],
            "DataChangeListener": [],
            "IDataSource": [],
            "LazyForEachInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "LazyForEachAttribute",
                "extends": "DynamicNode"
            }
        ]
    },
    "@internal.component.ets.page_transition": {
        "dependencies": [],
        "interfaces": {
            "PageTransitionOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "CommonTransition",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.nav_router": {
        "dependencies": [],
        "interfaces": {
            "RouteInfo": [],
            "NavRouterInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "NavRouterAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.text": {
        "dependencies": [],
        "interfaces": {
            "TextOverflowOptions": [],
            "TextInterface": [],
            "TextOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TextAttribute",
                "extends": "CommonMethod"
            },
            {
                "class": "TextController",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.grid": {
        "dependencies": [],
        "interfaces": {
            "GridLayoutOptions": [],
            "GridInterface": [],
            "ComputedBarAttribute": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "GridAttribute",
                "extends": "ScrollableCommonMethod"
            }
        ]
    },
    "@internal.component.ets.context_menu": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ContextMenu",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.line": {
        "dependencies": [],
        "interfaces": {
            "LineOptions": [],
            "LineInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "LineAttribute",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@internal.component.ets.column_split": {
        "dependencies": [],
        "interfaces": {
            "ColumnSplitInterface": [],
            "ColumnSplitDividerStyle": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ColumnSplitAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.navigation": {
        "dependencies": [],
        "interfaces": {
            "NavigationCommonTitle": [],
            "NavigationCustomTitle": [],
            "NavigationMenuItem": [],
            "PopInfo": [],
            "NavigationOptions": [],
            "NavigationInterception": [],
            "NavigationInterface": [],
            "ToolbarItem": [],
            "NavigationTitleOptions": [],
            "NavigationToolbarOptions": [],
            "NavigationAnimatedTransition": [],
            "NavigationTransitionProxy": [],
            "NavContentInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "NavPathInfo",
                "extends": null
            },
            {
                "class": "NavPathStack",
                "extends": null
            },
            {
                "class": "NavigationAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.particle": {
        "dependencies": [],
        "interfaces": {
            "VelocityOptions": [],
            "PointParticleParameters": [],
            "ImageParticleParameters": [],
            "ParticleConfigs": [],
            "EmitterProperty": [],
            "ParticleColorOptions": [],
            "ParticleColorPropertyUpdaterConfigs": [],
            "ParticleInterface": [],
            "DisturbanceFieldOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ParticleAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.path": {
        "dependencies": [],
        "interfaces": {
            "PathOptions": [],
            "PathInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PathAttribute",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@internal.component.ets.swiper": {
        "dependencies": [],
        "interfaces": {
            "SwiperAutoFill": [],
            "ArrowStyle": [],
            "SwiperInterface": [],
            "IndicatorStyle": [],
            "SwiperAnimationEvent": [],
            "SwiperContentAnimatedTransition": [],
            "SwiperContentTransitionProxy": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "dot",
                "return_type": "DotIndicator",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "digit",
                "return_type": "DigitIndicator",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "SwiperController",
                "extends": null
            },
            {
                "class": "Indicator",
                "extends": null
            },
            {
                "class": "object",
                "extends": null
            },
            {
                "class": "object",
                "extends": null
            },
            {
                "class": "object",
                "extends": null
            },
            {
                "class": "object",
                "extends": null
            },
            {
                "class": "DotIndicator",
                "extends": "Indicator"
            },
            {
                "class": "DigitIndicator",
                "extends": "Indicator"
            },
            {
                "class": "SwiperAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.hyperlink": {
        "dependencies": [],
        "interfaces": {
            "HyperlinkInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "HyperlinkAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.radio": {
        "dependencies": [],
        "interfaces": {
            "RadioOptions": [],
            "RadioStyle": [],
            "RadioInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RadioAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.polygon": {
        "dependencies": [],
        "interfaces": {
            "PolygonOptions": [],
            "PolygonInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PolygonAttribute",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@internal.component.ets.component3d": {
        "dependencies": [],
        "interfaces": {
            "SceneOptions": [],
            "Component3DInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "Component3DAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.embedded_component": {
        "dependencies": [],
        "interfaces": {
            "EmbeddedComponentInterface": [],
            "TerminationInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "EmbeddedComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.folder_stack": {
        "dependencies": [],
        "interfaces": {
            "FolderStackOptions": [],
            "FolderStackInterface": [],
            "OnFoldStatusChangeInfo": [],
            "HoverEventParam": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "FolderStackAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.stepper": {
        "dependencies": [],
        "interfaces": {
            "StepperInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "StepperAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.enums": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@internal.component.ets.screen": {
        "dependencies": [],
        "interfaces": {
            "ScreenInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ScreenAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.video": {
        "dependencies": [],
        "interfaces": {
            "FullscreenInfo": [],
            "PreparedInfo": [],
            "PlaybackInfo": [],
            "VideoOptions": [],
            "VideoInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "VideoController",
                "extends": null
            },
            {
                "class": "VideoAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.menu_item": {
        "dependencies": [],
        "interfaces": {
            "MenuItemOptions": [],
            "MenuItemInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "MenuItemAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.with_theme": {
        "dependencies": [],
        "interfaces": {
            "WithThemeOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "WithThemeAttribute",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.ui_extension_component": {
        "dependencies": [],
        "interfaces": {
            "UIExtensionOptions": [],
            "TerminationInfo": [],
            "UIExtensionProxy": [],
            "UIExtensionComponentInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "UIExtensionComponentAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.scroll_bar": {
        "dependencies": [],
        "interfaces": {
            "ScrollBarOptions": [],
            "ScrollBarInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ScrollBarAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.relative_container": {
        "dependencies": [],
        "interfaces": {
            "RelativeContainerInterface": [],
            "GuideLinePosition": [],
            "GuideLineStyle": [],
            "BarrierStyle": [],
            "LocalizedBarrierStyle": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RelativeContainerAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.inspector": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "getInspectorNodes",
                "return_type": "object",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInspectorNodeById",
                "return_type": "object",
                "parameters": [
                    {
                        "name": "id",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unregisterVsyncCallback",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setAppBgColor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "@internal.component.ets.grid_row": {
        "dependencies": [],
        "interfaces": {
            "GridRowSizeOption": [],
            "GridRowColumnOption": [],
            "GutterOption": [],
            "BreakPoints": [],
            "GridRowOptions": [],
            "GridRowInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "GridRowAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.time_picker": {
        "dependencies": [],
        "interfaces": {
            "TimePickerResult": [],
            "TimePickerOptions": [],
            "TimePickerInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TimePickerAttribute",
                "extends": "CommonMethod"
            },
            {
                "class": "TimePickerDialog",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.image": {
        "dependencies": [],
        "interfaces": {
            "ImageInterface": [],
            "ImageSourceSize": [],
            "ImageError": [],
            "ResizableOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "is",
                "return_type": "ImageAttribute",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "ImageAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.custom_dialog_controller": {
        "dependencies": [],
        "interfaces": {
            "CustomDialogControllerOptions": [],
            "DismissDialogAction": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "CustomDialogController",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.flex": {
        "dependencies": [],
        "interfaces": {
            "FlexOptions": [],
            "FlexSpaceOptions": [],
            "FlexInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "FlexAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.counter": {
        "dependencies": [],
        "interfaces": {
            "CounterInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "CounterAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.gauge": {
        "dependencies": [],
        "interfaces": {
            "GaugeOptions": [],
            "GaugeInterface": [],
            "GaugeIndicatorOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "GaugeAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.rich_editor": {
        "dependencies": [],
        "interfaces": {
            "RichEditorSpanPosition": [],
            "RichEditorTextStyle": [],
            "LeadingMarginPlaceholder": [],
            "RichEditorParagraphStyle": [],
            "PasteEvent": [],
            "RichEditorTextSpan": [],
            "RichEditorLayoutStyle": [],
            "RichEditorImageSpanStyle": [],
            "RichEditorSymbolSpanStyle": [],
            "RichEditorTextStyleResult": [],
            "RichEditorParagraphResult": [],
            "RichEditorSymbolSpanStyleResult": [],
            "RichEditorTextSpanResult": [],
            "RichEditorImageSpanStyleResult": [],
            "RichEditorImageSpanResult": [],
            "RichEditorImageSpan": [],
            "RichEditorRange": [],
            "RichEditorGesture": [],
            "RichEditorTextSpanOptions": [],
            "KeyboardOptions": [],
            "RichEditorImageSpanOptions": [],
            "RichEditorBuilderSpanOptions": [],
            "PlaceholderStyle": [],
            "RichEditorSymbolSpanOptions": [],
            "RichEditorSelection": [],
            "RichEditorInsertValue": [],
            "RichEditorDeleteValue": [],
            "RichEditorChangeValue": [],
            "RichEditorOptions": [],
            "RichEditorStyledStringOptions": [],
            "SelectionMenuOptions": [],
            "CutEvent": [],
            "CopyEvent": [],
            "RichEditorInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RichEditorBaseController",
                "extends": null
            },
            {
                "class": "RichEditorController",
                "extends": "RichEditorBaseController"
            },
            {
                "class": "RichEditorStyledStringController",
                "extends": "RichEditorBaseController"
            },
            {
                "class": "RichEditorAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.symbol_span": {
        "dependencies": [],
        "interfaces": {
            "SymbolSpanInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SymbolSpanAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.styled_string": {
        "dependencies": [],
        "interfaces": {
            "StyleOptions": [],
            "SpanStyle": [],
            "TextStyleInterface": [],
            "DecorationStyleInterface": [],
            "GestureStyleInterface": [],
            "ParagraphStyleInterface": [],
            "ImageAttachmentInterface": [],
            "ImageAttachmentLayoutStyle": [],
            "CustomSpanMetrics": [],
            "CustomSpanDrawInfo": [],
            "CustomSpanMeasureInfo": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "fromHtml",
                "return_type": "Promise<StyledString>",
                "parameters": [
                    {
                        "name": "html",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "toHtml",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "styledString",
                        "type": "StyledString"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "marshalling",
                "return_type": "ArrayBuffer",
                "parameters": [
                    {
                        "name": "styledString",
                        "type": "StyledString"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unmarshalling",
                "return_type": "Promise<StyledString>",
                "parameters": [
                    {
                        "name": "buffer",
                        "type": "ArrayBuffer"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "onMeasure",
                "return_type": "CustomSpanMetrics",
                "parameters": [
                    {
                        "name": "measureInfo",
                        "type": "CustomSpanMeasureInfo"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "onDraw",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "context",
                        "type": "DrawContext"
                    },
                    {
                        "name": "drawInfo",
                        "type": "CustomSpanDrawInfo"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "StyledString",
                "extends": null
            },
            {
                "class": "TextStyle",
                "extends": null
            },
            {
                "class": "DecorationStyle",
                "extends": null
            },
            {
                "class": "BaselineOffsetStyle",
                "extends": null
            },
            {
                "class": "LetterSpacingStyle",
                "extends": null
            },
            {
                "class": "TextShadowStyle",
                "extends": null
            },
            {
                "class": "BackgroundColorStyle",
                "extends": null
            },
            {
                "class": "GestureStyle",
                "extends": null
            },
            {
                "class": "ParagraphStyle",
                "extends": null
            },
            {
                "class": "LineHeightStyle",
                "extends": null
            },
            {
                "class": "UrlStyle",
                "extends": null
            },
            {
                "class": "MutableStyledString",
                "extends": "StyledString"
            },
            {
                "class": "ImageAttachment",
                "extends": null
            },
            {
                "class": "CustomSpan",
                "extends": null
            },
            {
                "class": "UserDataSpan",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.image_common": {
        "dependencies": [],
        "interfaces": {
            "ImageAnalyzerConfig": [],
            "ImageAIOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ImageAnalyzerController",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.ellipse": {
        "dependencies": [],
        "interfaces": {
            "EllipseOptions": [],
            "EllipseInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "EllipseAttribute",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@internal.component.ets.grid_container": {
        "dependencies": [],
        "interfaces": {
            "GridContainerOptions": [],
            "GridContainerInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "GridContainerAttribute",
                "extends": "ColumnAttribute"
            }
        ]
    },
    "@internal.component.ets.qrcode": {
        "dependencies": [],
        "interfaces": {
            "QRCodeInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "QRCodeAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.search": {
        "dependencies": [],
        "interfaces": {
            "SearchOptions": [],
            "SearchInterface": [],
            "IconOptions": [],
            "SearchButtonOptions": [],
            "CancelButtonOptions": [],
            "CancelButtonSymbolOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SearchController",
                "extends": "TextContentControllerBase"
            },
            {
                "class": "SearchAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.list": {
        "dependencies": [],
        "interfaces": {
            "ChainAnimationOptions": [],
            "CloseSwipeActionOptions": [],
            "VisibleListContentInfo": [],
            "ListOptions": [],
            "ListInterface": [],
            "ListDividerOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ListScroller",
                "extends": "Scroller"
            },
            {
                "class": "ListAttribute",
                "extends": "ScrollableCommonMethod"
            }
        ]
    },
    "@internal.component.ets.shape": {
        "dependencies": [],
        "interfaces": {
            "ViewportRect": [],
            "ShapeInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ShapeAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.text_picker": {
        "dependencies": [],
        "interfaces": {
            "TextPickerRangeContent": [],
            "TextCascadePickerRangeContent": [],
            "TextPickerOptions": [],
            "TextPickerInterface": [],
            "DividerOptions": [],
            "TextPickerResult": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TextPickerAttribute",
                "extends": "CommonMethod"
            },
            {
                "class": "TextPickerDialog",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.for_each": {
        "dependencies": [],
        "interfaces": {
            "ForEachInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ForEachAttribute",
                "extends": "DynamicNode"
            }
        ]
    },
    "@internal.component.ets.date_picker": {
        "dependencies": [],
        "interfaces": {
            "DatePickerResult": [],
            "DatePickerOptions": [],
            "DatePickerInterface": [],
            "LunarSwitchStyle": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "DatePickerAttribute",
                "extends": "CommonMethod"
            },
            {
                "class": "DatePickerDialog",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.symbolglyph": {
        "dependencies": [],
        "interfaces": {
            "SymbolGlyphInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SymbolEffect",
                "extends": null
            },
            {
                "class": "ScaleSymbolEffect",
                "extends": "SymbolEffect"
            },
            {
                "class": "HierarchicalSymbolEffect",
                "extends": "SymbolEffect"
            },
            {
                "class": "AppearSymbolEffect",
                "extends": "SymbolEffect"
            },
            {
                "class": "DisappearSymbolEffect",
                "extends": "SymbolEffect"
            },
            {
                "class": "BounceSymbolEffect",
                "extends": "SymbolEffect"
            },
            {
                "class": "ReplaceSymbolEffect",
                "extends": "SymbolEffect"
            },
            {
                "class": "PulseSymbolEffect",
                "extends": "SymbolEffect"
            },
            {
                "class": "SymbolGlyphAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.content_slot": {
        "dependencies": [],
        "interfaces": {
            "ContentSlotInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ContentSlotAttribute",
                "extends": null
            },
            {
                "class": "object",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.slider": {
        "dependencies": [],
        "interfaces": {
            "SlideRange": [],
            "SliderOptions": [],
            "SliderBlockStyle": [],
            "SliderInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SliderAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.common": {
        "dependencies": [],
        "interfaces": {
            "ComponentOptions": [],
            "InputCounterOptions": [],
            "TextDecorationOptions": [],
            "EntryOptions": [],
            "ProvideOptions": [],
            "IMonitor": [],
            "Configuration": [],
            "Rectangle": [],
            "ExpectedFrameRateRange": [],
            "AnimateParam": [],
            "ICurve": [],
            "MotionPathOptions": [],
            "sharedTransitionOptions": [],
            "GeometryTransitionOptions": [],
            "TranslateOptions": [],
            "ScaleOptions": [],
            "AlignRuleOption": [],
            "LocalizedHorizontalAlignParam": [],
            "LocalizedVerticalAlignParam": [],
            "LocalizedAlignRuleOptions": [],
            "RotateOptions": [],
            "TransitionOptions": [],
            "PreviewParams": [],
            "ItemDragInfo": [],
            "DragItemInfo": [],
            "EventTarget": [],
            "BlurOptions": [],
            "BlurStyleOptions": [],
            "BackgroundEffectOptions": [],
            "ForegroundEffectOptions": [],
            "PickerTextStyle": [],
            "PickerDialogButtonStyle": [],
            "ShadowOptions": [],
            "MultiShadowOptions": [],
            "BaseEvent": [],
            "BorderImageOption": [],
            "TouchObject": [],
            "HistoricalPoint": [],
            "PixelMapMock": [],
            "DragEvent": [],
            "KeyEvent": [],
            "BindOptions": [],
            "DismissContentCoverAction": [],
            "SheetTitleOptions": [],
            "SheetDismiss": [],
            "DismissSheetAction": [],
            "SpringBackAction": [],
            "StateStyles": [],
            "PopupMessageOptions": [],
            "DismissPopupAction": [],
            "PopupOptions": [],
            "CustomPopupOptions": [],
            "ContextMenuAnimationOptions": [],
            "ContextMenuOptions": [],
            "PixelStretchEffectOptions": [],
            "ClickEffect": [],
            "FadingEdgeOptions": [],
            "NestedScrollOptions": [],
            "MenuElement": [],
            "DragPreviewOptions": [],
            "DragInteractionOptions": [],
            "InvertOptions": [],
            "CommonInterface": [],
            "OverlayOptions": [],
            "OverlayOffset": [],
            "LinearGradient": [],
            "PixelRoundPolicy": [],
            "LinearGradientBlurOptions": [],
            "MotionBlurAnchor": [],
            "MotionBlurOptions": [],
            "LayoutBorderInfo": [],
            "LayoutInfo": [],
            "LayoutChild": [],
            "Layoutable": [],
            "Measurable": [],
            "SizeResult": [],
            "RectResult": [],
            "CaretOffset": [],
            "EdgeEffectOptions": [],
            "BackgroundBrightnessOptions": [],
            "PointLightStyle": [],
            "LightSource": [],
            "KeyframeAnimateParam": [],
            "KeyframeState": [],
            "VisibleAreaEventOptions": [],
            "UICommonEvent": [],
            "UIGestureEvent": [],
            "GestureModifier": [],
            "SelectionOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "getContext",
                "return_type": "Context",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "postCardAction",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "component",
                        "type": "Object"
                    },
                    {
                        "name": "action",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "translate",
                "return_type": "TransitionEffect<",
                "parameters": [
                    {
                        "name": "options",
                        "type": "TranslateOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rotate",
                "return_type": "TransitionEffect<",
                "parameters": [
                    {
                        "name": "options",
                        "type": "RotateOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "scale",
                "return_type": "TransitionEffect<",
                "parameters": [
                    {
                        "name": "options",
                        "type": "ScaleOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "opacity",
                "return_type": "TransitionEffect<",
                "parameters": [
                    {
                        "name": "alpha",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "move",
                "return_type": "TransitionEffect<",
                "parameters": [
                    {
                        "name": "edge",
                        "type": "TransitionEdge"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "asymmetric",
                "return_type": "TransitionEffect<",
                "parameters": [
                    {
                        "name": "appear",
                        "type": "TransitionEffect"
                    },
                    {
                        "name": "disappear",
                        "type": "TransitionEffect"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "vp2px",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "px2vp",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fp2px",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "px2fp",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lpx2px",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "px2lpx",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestFocus",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "value",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setCursor",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "value",
                        "type": "PointerStyle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "restoreDefault",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "childDefaultSize",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "with",
                "extends": null
            },
            {
                "class": "object",
                "extends": null
            },
            {
                "class": "object",
                "extends": null
            },
            {
                "class": "DrawModifier",
                "extends": null
            },
            {
                "class": "TransitionEffect",
                "extends": null
            },
            {
                "class": "ProgressMask",
                "extends": null
            },
            {
                "class": "TouchTestInfo",
                "extends": null
            },
            {
                "class": "TouchResult",
                "extends": null
            },
            {
                "class": "CommonMethod",
                "extends": null
            },
            {
                "class": "CommonAttribute",
                "extends": "CommonMethod"
            },
            {
                "class": "CommonShapeMethod",
                "extends": null
            },
            {
                "class": "CustomComponent",
                "extends": "CommonAttribute"
            },
            {
                "class": "View",
                "extends": null
            },
            {
                "class": "TextContentControllerBase",
                "extends": null
            },
            {
                "class": "ScrollableCommonMethod",
                "extends": null
            },
            {
                "class": "ScrollResult",
                "extends": null
            },
            {
                "class": "DynamicNode",
                "extends": null
            },
            {
                "class": "ChildrenMainSize",
                "extends": null
            },
            {
                "class": "WrappedBuilder",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.stepper_item": {
        "dependencies": [],
        "interfaces": {
            "StepperItemInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "StepperItemAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.window_scene": {
        "dependencies": [],
        "interfaces": {
            "WindowSceneInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "WindowSceneAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.save_button": {
        "dependencies": [],
        "interfaces": {
            "SaveButtonOptions": [],
            "SaveButtonInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "SaveButtonAttribute",
                "extends": "SecurityComponentMethod"
            }
        ]
    },
    "@internal.component.ets.divider": {
        "dependencies": [],
        "interfaces": {
            "DividerInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "DividerAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.tabs": {
        "dependencies": [],
        "interfaces": {
            "TabsOptions": [],
            "TabsInterface": [],
            "DividerStyle": [],
            "TabsAnimationEvent": [],
            "BarGridColumnOptions": [],
            "ScrollableBarModeOptions": [],
            "TabContentAnimatedTransition": [],
            "TabContentTransitionProxy": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TabsController",
                "extends": null
            },
            {
                "class": "TabsAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.column": {
        "dependencies": [],
        "interfaces": {
            "ColumnOptions": [],
            "ColumnInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ColumnAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.loading_progress": {
        "dependencies": [],
        "interfaces": {
            "LoadingProgressInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "LoadingProgressAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.blank": {
        "dependencies": [],
        "interfaces": {
            "BlankInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "BlankAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.text_area": {
        "dependencies": [],
        "interfaces": {
            "TextAreaOptions": [],
            "TextAreaInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "TextAreaController",
                "extends": "TextContentControllerBase"
            },
            {
                "class": "TextAreaAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.polyline": {
        "dependencies": [],
        "interfaces": {
            "PolylineOptions": [],
            "PolylineInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "PolylineAttribute",
                "extends": "CommonShapeMethod"
            }
        ]
    },
    "@internal.component.ets.calendar_picker": {
        "dependencies": [],
        "interfaces": {
            "CalendarOptions": [],
            "CalendarPickerInterface": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "show",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "CalendarPickerAttribute",
                "extends": "CommonMethod"
            },
            {
                "class": "CalendarPickerDialog",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.checkboxgroup": {
        "dependencies": [],
        "interfaces": {
            "CheckboxGroupOptions": [],
            "CheckboxGroupResult": [],
            "CheckboxGroupInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "CheckboxGroupAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.rich_text": {
        "dependencies": [],
        "interfaces": {
            "RichTextInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "RichTextAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.text_common": {
        "dependencies": [],
        "interfaces": {
            "TextDataDetectorConfig": [],
            "TextRange": [],
            "InsertValue": [],
            "DeleteValue": [],
            "TextBaseController": [],
            "PreviewText": [],
            "StyledStringController": [],
            "StyledStringChangedListener": [],
            "StyledStringChangeValue": [],
            "LayoutManager": [],
            "PositionWithAffinity": [],
            "CaretStyle": [],
            "TextMenuItem": [],
            "EditMenuOptions": [],
            "DecorationStyleResult": [],
            "FontSettingOptions": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "of",
                "return_type": "TextMenuItemId",
                "parameters": [
                    {
                        "name": "id",
                        "type": "ResourceStr"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "TextMenuItemId",
                "extends": null
            }
        ]
    },
    "@internal.component.ets.button": {
        "dependencies": [],
        "interfaces": {
            "ButtonOptions": [],
            "ButtonInterface": [],
            "LabelStyle": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "ButtonAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.index-full": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@internal.component.ets.web": {
        "dependencies": [],
        "interfaces": {
            "NativeMediaPlayerConfig": [],
            "AdsBlockedDetails": [],
            "WebKeyboardOptions": [],
            "WebKeyboardCallbackInfo": [],
            "WebMediaOptions": [],
            "ScreenCaptureConfig": [],
            "FullScreenEnterEvent": [],
            "Header": [],
            "WebOptions": [],
            "ScriptItem": [],
            "LoadCommittedDetails": [],
            "IntelligentTrackingPreventionDetails": [],
            "WebInterface": [],
            "NativeEmbedInfo": [],
            "NativeEmbedDataInfo": [],
            "NativeEmbedVisibilityInfo": [],
            "NativeEmbedTouchInfo": [],
            "FirstMeaningfulPaint": [],
            "LargestContentfulPaint": [],
            "RenderProcessNotRespondingData": [],
            "OnPageEndEvent": [],
            "OnPageBeginEvent": [],
            "OnProgressChangeEvent": [],
            "OnTitleReceiveEvent": [],
            "OnGeolocationShowEvent": [],
            "OnAlertEvent": [],
            "OnBeforeUnloadEvent": [],
            "OnConfirmEvent": [],
            "OnPromptEvent": [],
            "OnConsoleEvent": [],
            "OnErrorReceiveEvent": [],
            "OnHttpErrorReceiveEvent": [],
            "OnDownloadStartEvent": [],
            "OnRefreshAccessedHistoryEvent": [],
            "OnRenderExitedEvent": [],
            "OnShowFileSelectorEvent": [],
            "OnResourceLoadEvent": [],
            "OnScaleChangeEvent": [],
            "OnHttpAuthRequestEvent": [],
            "OnInterceptRequestEvent": [],
            "OnPermissionRequestEvent": [],
            "OnScreenCaptureRequestEvent": [],
            "OnContextMenuShowEvent": [],
            "OnSearchResultReceiveEvent": [],
            "OnScrollEvent": [],
            "OnSslErrorEventReceiveEvent": [],
            "OnClientAuthenticationEvent": [],
            "OnWindowNewEvent": [],
            "OnTouchIconUrlReceivedEvent": [],
            "OnFaviconReceivedEvent": [],
            "OnPageVisibleEvent": [],
            "OnDataResubmittedEvent": [],
            "OnAudioStateChangedEvent": [],
            "OnFirstContentfulPaintEvent": [],
            "OnLoadInterceptEvent": [],
            "OnOverScrollEvent": [],
            "JavaScriptProxy": [],
            "SelectionMenuOptionsExt": [],
            "SslErrorEvent": [],
            "ExpandedMenuItemOptions": [],
            "NestedScrollOptionsExt": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "WebKeyboardController",
                "extends": null
            },
            {
                "class": "FullScreenExitHandler",
                "extends": null
            },
            {
                "class": "FileSelectorParam",
                "extends": null
            },
            {
                "class": "JsResult",
                "extends": null
            },
            {
                "class": "FileSelectorResult",
                "extends": null
            },
            {
                "class": "HttpAuthHandler",
                "extends": null
            },
            {
                "class": "SslErrorHandler",
                "extends": null
            },
            {
                "class": "ClientAuthenticationHandler",
                "extends": null
            },
            {
                "class": "PermissionRequest",
                "extends": null
            },
            {
                "class": "ScreenCaptureHandler",
                "extends": null
            },
            {
                "class": "DataResubmissionHandler",
                "extends": null
            },
            {
                "class": "ControllerHandler",
                "extends": null
            },
            {
                "class": "WebContextMenuParam",
                "extends": null
            },
            {
                "class": "WebContextMenuResult",
                "extends": null
            },
            {
                "class": "ConsoleMessage",
                "extends": null
            },
            {
                "class": "WebResourceRequest",
                "extends": null
            },
            {
                "class": "WebResourceResponse",
                "extends": null
            },
            {
                "class": "WebResourceError",
                "extends": null
            },
            {
                "class": "JsGeolocation",
                "extends": null
            },
            {
                "class": "WebCookie",
                "extends": null
            },
            {
                "class": "EventResult",
                "extends": null
            },
            {
                "class": "WebController",
                "extends": null
            },
            {
                "class": "WebAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.marquee": {
        "dependencies": [],
        "interfaces": {
            "MarqueeOptions": [],
            "MarqueeInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "MarqueeAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.component.ets.linearindicator": {
        "dependencies": [],
        "interfaces": {
            "LinearIndicatorStartOptions": [],
            "LinearIndicatorStyle": [],
            "LinearIndicatorInterface": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "LinearIndicatorController",
                "extends": null
            },
            {
                "class": "LinearIndicatorAttribute",
                "extends": "CommonMethod"
            }
        ]
    },
    "@internal.ets.index": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "@internal.ets.lifecycle": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.data.rdb.resultSet",
                "imported_as": "ResultSet"
            },
            {
                "module": "@ohos.bundle.abilityInfo",
                "imported_as": "AbilityInfo"
            },
            {
                "module": "@ohos.ability.dataAbilityResult",
                "imported_as": "DataAbilityResult"
            },
            {
                "module": "@ohos.ability.dataAbilityOperation",
                "imported_as": "DataAbilityOperation"
            },
            {
                "module": "@ohos.data.dataAbility",
                "imported_as": "dataAbility"
            },
            {
                "module": "@ohos.application.formBindingData",
                "imported_as": "formBindingData"
            },
            {
                "module": "@ohos.app.form.formInfo",
                "imported_as": "formInfo"
            },
            {
                "module": "@ohos.data.rdb",
                "imported_as": "rdb"
            },
            {
                "module": "@ohos.rpc",
                "imported_as": "rpc"
            },
            {
                "module": "@ohos.resourceManager",
                "imported_as": "resourceManager"
            },
            {
                "module": "@ohos.ability.dataAbilityHelper",
                "imported_as": "PacMap"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "LifecycleForm": [],
            "LifecycleApp": [],
            "LifecycleService": [],
            "LifecycleData": []
        },
        "methods": [],
        "inheritance": []
    },
    "@internal.ets.global": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "debug",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "log",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "info",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "warn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "error",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "assert",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "arguments",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "count",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "countReset",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dir",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "dirxml",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "arguments",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "group",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "arguments",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "groupCollapsed",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "arguments",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "groupEnd",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "table",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "time",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "timeEnd",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "timeLog",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "arguments",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "trace",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "arguments",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "traceHybridStack",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setInterval",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "handler",
                        "type": "Function"
                    },
                    {
                        "name": "delay",
                        "type": "number"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTimeout",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "handler",
                        "type": "Function"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearInterval",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearTimeout",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canIUse",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "syscap",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInspectorByKey",
                "return_type": "string",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getInspectorTree",
                "return_type": "Object",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendEventByKey",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "type": "number"
                    },
                    {
                        "name": "params",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendTouchEvent",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "event",
                        "type": "TouchObject"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendKeyEvent",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "event",
                        "type": "KeyEvent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendMouseEvent",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "event",
                        "type": "MouseEvent"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "markModuleCollectable",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "namespace",
                        "type": "Object"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "loadNativeModule",
                "return_type": "Object",
                "parameters": [
                    {
                        "name": "moduleName",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "console",
                "extends": null
            }
        ]
    },
    "commonEvent.commonEventSubscribeInfo": {
        "dependencies": [],
        "interfaces": {
            "CommonEventSubscribeInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "commonEvent.commonEventSubscriber": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.commonEventSubscribeInfo",
                "imported_as": "CommonEventSubscribeInfo"
            }
        ],
        "interfaces": {
            "CommonEventSubscriber": []
        },
        "methods": [],
        "inheritance": []
    },
    "commonEvent.commonEventData": {
        "dependencies": [],
        "interfaces": {
            "CommonEventData": []
        },
        "methods": [],
        "inheritance": []
    },
    "commonEvent.commonEventPublishData": {
        "dependencies": [],
        "interfaces": {
            "CommonEventPublishData": []
        },
        "methods": [],
        "inheritance": []
    },
    "security.PermissionRequestResult": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PermissionRequestResult",
                "extends": null
            }
        ]
    },
    "common.lite.featureability": {
        "dependencies": [],
        "interfaces": {
            "SubscribeMessageResponse": [
                "deviceId",
                "bundleName",
                "abilityName",
                "message"
            ],
            "SendMessageOptions": [
                "deviceId",
                "bundleName",
                "abilityName",
                "data"
            ],
            "SubscribeMessageOptions": [
                "data",
                "data"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "sendMsg",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SendMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeMsg",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeMsg",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "FeatureAbility",
                "extends": null
            }
        ]
    },
    "common.lite.index": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "common.lite.viewmodel": {
        "dependencies": [],
        "interfaces": {
            "ViewModel": [],
            "ListScrollToOptions": [],
            "ListElement": [],
            "ImageAnimatorElement": [],
            "ElementReferences": [
                "k"
            ]
        },
        "methods": [],
        "inheritance": []
    },
    "common.lite.console": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "debug",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "log",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "info",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "warn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "error",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "console",
                "extends": null
            }
        ]
    },
    "common.lite.global": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setInterval",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "handler",
                        "type": "Function"
                    },
                    {
                        "name": "delay",
                        "type": "number"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTimeout",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "handler",
                        "type": "Function"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearInterval",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearTimeout",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createLocalParticleAbility",
                "return_type": "any",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canIUse",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "syscap",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApp",
                "return_type": "object",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": []
    },
    "common.full.featureability": {
        "dependencies": [],
        "interfaces": {
            "Result": [
                "code",
                "data"
            ],
            "SubscribeMessageResponse": [
                "deviceId",
                "bundleName",
                "abilityName",
                "message"
            ],
            "CallAbilityParam": [
                "bundleName",
                "abilityName",
                "messageCode",
                "0",
                "0"
            ],
            "SubscribeAbilityEventParam": [
                "bundleName",
                "abilityName",
                "messageCode",
                "0",
                "0"
            ],
            "SendMessageOptions": [
                "deviceId",
                "bundleName",
                "abilityName",
                "data"
            ],
            "SubscribeMessageOptions": [
                "data",
                "data"
            ],
            "RequestParams": [
                "0"
            ],
            "FinishWithResultParams": [
                "code",
                "result"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "startAbility",
                "return_type": "Promise<Result>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "RequestParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "startAbilityForResult",
                "return_type": "Promise<Result>",
                "parameters": [
                    {
                        "name": "request",
                        "type": "RequestParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "finishWithResult",
                "return_type": "Promise<Result>",
                "parameters": [
                    {
                        "name": "param",
                        "type": "FinishWithResultParams"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getDeviceList",
                "return_type": "Promise<Result>",
                "parameters": [
                    {
                        "name": "flag",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "callAbility",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "param",
                        "type": "CallAbilityParam"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "continueAbility",
                "return_type": "Promise<Result>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeAbilityEvent",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "param",
                        "type": "SubscribeAbilityEventParam"
                    },
                    {
                        "name": "func",
                        "type": "Function"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeAbilityEvent",
                "return_type": "Promise<string>",
                "parameters": [
                    {
                        "name": "param",
                        "type": "SubscribeAbilityEventParam"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sendMsg",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SendMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "subscribeMsg",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "options",
                        "type": "SubscribeMessageOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "unsubscribeMsg",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "FeatureAbility",
                "extends": null
            }
        ]
    },
    "common.full.index": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": []
    },
    "common.full.dom": {
        "dependencies": [
            {
                "module": "@ohos.common.full.viewmodel",
                "imported_as": "Element"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "createElement",
                "return_type": "Element",
                "parameters": [
                    {
                        "name": "tag",
                        "type": "string"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "dom",
                "extends": null
            }
        ]
    },
    "common.full.viewmodel": {
        "dependencies": [
            {
                "module": "@ohos.common.full.canvaspattern",
                "imported_as": "CanvasPattern"
            }
        ],
        "interfaces": {
            "FocusParamObj": [],
            "RectObj": [],
            "ContextAttrOptions": [],
            "AnimateStyle": [],
            "TransformObject": [],
            "AnimateOptions": [],
            "AnimationResult": [],
            "Element": [],
            "observer": [],
            "ScrollParam": [],
            "CurrentOffsetResultValue": [],
            "ListScrollToOptions": [],
            "CameraTakePhotoOptions": [],
            "TextMetrics": [],
            "OffscreenCanvasRenderingContext2D": [],
            "CanvasRenderingContext2D": [],
            "CanvasGradient": [],
            "Path2D": [],
            "ScrollOptions": [],
            "ScrollOffset": [],
            "Application": [],
            "ViewModel": [],
            "ElementReferences": [
                "k"
            ]
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "within",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "scaleX",
                        "type": "number"
                    },
                    {
                        "name": "skewX",
                        "type": "number"
                    },
                    {
                        "name": "skewY",
                        "type": "number"
                    },
                    {
                        "name": "scaleY",
                        "type": "number"
                    },
                    {
                        "name": "translateX",
                        "type": "number"
                    },
                    {
                        "name": "translateY",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Locate",
                "extends": null
            },
            {
                "class": "Configuration",
                "extends": null
            }
        ]
    },
    "common.full.console": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "debug",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "log",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "info",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "warn",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "error",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "message",
                        "type": "string"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "console",
                "extends": null
            }
        ]
    },
    "common.full.canvaspattern": {
        "dependencies": [],
        "interfaces": {
            "CanvasPattern": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "Matrix2D",
                "extends": null
            }
        ]
    },
    "common.full.global": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "setInterval",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "handler",
                        "type": "Function"
                    },
                    {
                        "name": "delay",
                        "type": "number"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "setTimeout",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "handler",
                        "type": "Function"
                    },
                    {
                        "name": "arguments",
                        "type": "any"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "requestAnimationFrame",
                "return_type": "number",
                "parameters": [
                    {
                        "name": "handler",
                        "type": "Function"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "cancelAnimationFrame",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "requestId",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearInterval",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clearTimeout",
                "return_type": "void",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createLocalParticleAbility",
                "return_type": "any",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canIUse",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "syscap",
                        "type": "string"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "getApp",
                "return_type": "object",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Image",
                "extends": null
            },
            {
                "class": "ImageData",
                "extends": null
            },
            {
                "class": "OffscreenCanvas",
                "extends": null
            },
            {
                "class": "ImageBitmap",
                "extends": null
            }
        ]
    },
    "bundleManager.AppProvisionInfo": {
        "dependencies": [],
        "interfaces": {
            "AppProvisionInfo": [],
            "Validity": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.RecoverableApplicationInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            }
        ],
        "interfaces": {
            "RecoverableApplicationInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.SharedBundleInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.HapModuleInfo",
                "imported_as": "Dependency"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            }
        ],
        "interfaces": {
            "SharedBundleInfo": [],
            "SharedModuleInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.ApplicationInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.Metadata",
                "imported_as": "Metadata"
            },
            {
                "module": "@ohos.global.resource",
                "imported_as": "Resource"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            }
        ],
        "interfaces": {
            "ApplicationInfo": [],
            "ModuleMetadata": [],
            "MultiAppMode": [],
            "PreinstalledApplicationInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.OverlayModuleInfo": {
        "dependencies": [],
        "interfaces": {
            "OverlayModuleInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.ExtensionAbilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ApplicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundleManager.Metadata",
                "imported_as": "Metadata"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            },
            {
                "module": "@ohos.Skill",
                "imported_as": "Skill"
            }
        ],
        "interfaces": {
            "ExtensionAbilityInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.BundleInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ApplicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundleManager.HapModuleInfo",
                "imported_as": "HapModuleInfo"
            },
            {
                "module": "@ohos.bundleManager.HapModuleInfo",
                "imported_as": "RouterItem"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            }
        ],
        "interfaces": {
            "BundleInfo": [],
            "ReqPermissionDetail": [],
            "UsedScene": [],
            "SignatureInfo": [],
            "AppCloneIdentity": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.ElementName": {
        "dependencies": [],
        "interfaces": {
            "ElementName": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            }
        ]
    },
    "bundleManager.DispatchInfo": {
        "dependencies": [],
        "interfaces": {
            "DispatchInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.Metadata": {
        "dependencies": [],
        "interfaces": {
            "Metadata": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.LauncherAbilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ApplicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {
            "LauncherAbilityInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.PermissionDef": {
        "dependencies": [],
        "interfaces": {
            "PermissionDef": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.ShortcutInfo": {
        "dependencies": [],
        "interfaces": {
            "ShortcutInfo": [],
            "ShortcutWant": [],
            "ParameterItem": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.Skill": {
        "dependencies": [],
        "interfaces": {
            "Skill": [],
            "SkillUri": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.LauncherAbilityResourceInfo": {
        "dependencies": [
            {
                "module": "@ohos.arkui.drawableDescriptor",
                "imported_as": "DrawableDescriptor"
            }
        ],
        "interfaces": {
            "LauncherAbilityResourceInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.AbilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ApplicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundleManager.Metadata",
                "imported_as": "Metadata"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            },
            {
                "module": "@ohos.Skill",
                "imported_as": "Skill"
            }
        ],
        "interfaces": {
            "AbilityInfo": [],
            "WindowSize": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "bundleManager.HapModuleInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.AbilityInfo",
                "imported_as": "AbilityInfo"
            },
            {
                "module": "@ohos.bundleManager.ExtensionAbilityInfo",
                "imported_as": "ExtensionAbilityInfo"
            },
            {
                "module": "@ohos.bundleManager.Metadata",
                "imported_as": "Metadata"
            },
            {
                "module": "@ohos.bundle.bundleManager",
                "imported_as": "bundleManager"
            }
        ],
        "interfaces": {
            "HapModuleInfo": [],
            "Dependency": [],
            "PreloadItem": [],
            "RouterItem": [],
            "DataItem": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.RemoteAbilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {
            "RemoteAbilityInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.BundlePackInfo": {
        "dependencies": [],
        "interfaces": {
            "BundlePackInfo": [],
            "PackageConfig": [],
            "PackageSummary": [],
            "BundleConfigInfo": [],
            "ExtensionAbility": [],
            "ModuleConfigInfo": [],
            "ModuleDistroInfo": [],
            "ModuleAbilityInfo": [],
            "AbilityFormInfo": [],
            "Version": [],
            "ApiVersion": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundleManager.BundleResourceInfo": {
        "dependencies": [
            {
                "module": "@ohos.arkui.drawableDescriptor",
                "imported_as": "DrawableDescriptor"
            }
        ],
        "interfaces": {
            "BundleResourceInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "ability.dataAbilityResult": {
        "dependencies": [],
        "interfaces": {
            "DataAbilityResult": []
        },
        "methods": [],
        "inheritance": []
    },
    "ability.abilityResult": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "AbilityResult": []
        },
        "methods": [],
        "inheritance": []
    },
    "ability.want": {
        "dependencies": [],
        "interfaces": {
            "Want": []
        },
        "methods": [],
        "inheritance": []
    },
    "ability.dataAbilityOperation": {
        "dependencies": [
            {
                "module": "@ohos.ability.featureAbility",
                "imported_as": "featureAbility"
            },
            {
                "module": "@ohos.data.dataAbility",
                "imported_as": "dataAbility"
            },
            {
                "module": "@ohos.data.rdb",
                "imported_as": "rdb"
            }
        ],
        "interfaces": {
            "DataAbilityOperation": []
        },
        "methods": [],
        "inheritance": []
    },
    "ability.dataAbilityHelper": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.data.rdb.resultSet",
                "imported_as": "ResultSet"
            },
            {
                "module": "@ohos.dataAbilityOperation",
                "imported_as": "DataAbilityOperation"
            },
            {
                "module": "@ohos.dataAbilityResult",
                "imported_as": "DataAbilityResult"
            },
            {
                "module": "@ohos.data.dataAbility",
                "imported_as": "dataAbility"
            },
            {
                "module": "@ohos.data.rdb",
                "imported_as": "rdb"
            }
        ],
        "interfaces": {
            "DataAbilityHelper": [],
            "PacMap": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "loader",
                "extends": null
            },
            {
                "class": "loader",
                "extends": null
            }
        ]
    },
    "ability.startAbilityParameter": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            }
        ],
        "interfaces": {
            "StartAbilityParameter": []
        },
        "methods": [],
        "inheritance": []
    },
    "ability.connectOptions": {
        "dependencies": [
            {
                "module": "@ohos.bundleManager.ElementName",
                "imported_as": "ElementName"
            },
            {
                "module": "@ohos.rpc",
                "imported_as": "rpc"
            }
        ],
        "interfaces": {
            "ConnectOptions": []
        },
        "methods": [],
        "inheritance": []
    },
    "graphics3d.SceneResources": {
        "dependencies": [
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Vec2"
            },
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Vec3"
            },
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Vec4"
            },
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Aabb"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "SceneResource": [],
            "SubMesh": []
        },
        "methods": [],
        "inheritance": []
    },
    "graphics3d.SceneTypes": {
        "dependencies": [],
        "interfaces": {
            "Vec2": [],
            "Vec3": [],
            "Vec4": [],
            "Quaternion": [],
            "Aabb": [],
            "Color": [],
            "Rect": []
        },
        "methods": [],
        "inheritance": []
    },
    "graphics3d.ScenePostProcessSettings": {
        "dependencies": [],
        "interfaces": {
            "ToneMappingSettings": [],
            "PostProcessSettings": []
        },
        "methods": [],
        "inheritance": []
    },
    "graphics3d.Scene": {
        "dependencies": [
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "Shader"
            },
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "MaterialType"
            },
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "Material"
            },
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "Animation"
            },
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "Environment"
            },
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "Image"
            },
            {
                "module": "@ohos.graphics3d.SceneNodes",
                "imported_as": "Camera"
            },
            {
                "module": "@ohos.graphics3d.SceneNodes",
                "imported_as": "LightType"
            },
            {
                "module": "@ohos.graphics3d.SceneNodes",
                "imported_as": "Light"
            },
            {
                "module": "@ohos.graphics3d.SceneNodes",
                "imported_as": "Node"
            },
            {
                "module": "@ohos.graphics3d.SceneNodes",
                "imported_as": "NodeType"
            }
        ],
        "interfaces": {
            "SceneResourceParameters": [],
            "SceneNodeParameters": [],
            "SceneResourceFactory": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "load",
                "return_type": "Promise<Scene>",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "Scene",
                "extends": null
            }
        ]
    },
    "graphics3d.SceneNodes": {
        "dependencies": [
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "SceneResource"
            },
            {
                "module": "@ohos.graphics3d.SceneResources",
                "imported_as": "Mesh"
            },
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Position3"
            },
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Quaternion"
            },
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Scale3"
            },
            {
                "module": "@ohos.graphics3d.SceneTypes",
                "imported_as": "Color"
            },
            {
                "module": "@ohos.graphics3d.ScenePostProcessSettings",
                "imported_as": "PostProcessSettings"
            }
        ],
        "interfaces": {
            "LayerMask": []
        },
        "methods": [],
        "inheritance": []
    },
    "tag.nfctech": {
        "dependencies": [
            {
                "module": "@ohos.nfc.tag",
                "imported_as": "tag"
            },
            {
                "module": "@ohos.tagSession",
                "imported_as": "TagSession"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.base",
                "imported_as": "Callback"
            }
        ],
        "interfaces": {
            "NdefMessage": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "is",
                "extends": null
            },
            {
                "class": "inherits",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "inherits",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "inherits",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "inherits",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "inherits",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            },
            {
                "class": "inherits",
                "extends": null
            },
            {
                "class": "and",
                "extends": null
            }
        ]
    },
    "tag.tagSession": {
        "dependencies": [
            {
                "module": "@ohos.nfc.tag",
                "imported_as": "tag"
            },
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "TagSession": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "to",
                "extends": null
            }
        ]
    },
    "wantAgent.triggerInfo": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.app.ability.StartOptions",
                "imported_as": "StartOptions"
            }
        ],
        "interfaces": {
            "TriggerInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "wantAgent.wantAgentInfo": {
        "dependencies": [
            {
                "module": "@ohos.app.ability.Want",
                "imported_as": "Want"
            },
            {
                "module": "@ohos.wantAgent",
                "imported_as": "wantAgent"
            },
            {
                "module": "@ohos.app.ability.wantAgent",
                "imported_as": "type abilityWantAgent"
            }
        ],
        "interfaces": {
            "WantAgentInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "arkui.NavigationModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "NavigationModifier",
                "extends": "NavigationAttribute"
            }
        ]
    },
    "arkui.TextTimerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TextTimerModifier",
                "extends": "TextTimerAttribute"
            }
        ]
    },
    "arkui.MenuItemModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "MenuItemModifier",
                "extends": "MenuItemAttribute"
            }
        ]
    },
    "arkui.NavRouterModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "NavRouterModifier",
                "extends": "NavRouterAttribute"
            }
        ]
    },
    "arkui.RowSplitModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "RowSplitModifier",
                "extends": "RowSplitAttribute"
            }
        ]
    },
    "arkui.DatePickerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "DatePickerModifier",
                "extends": "DatePickerAttribute"
            }
        ]
    },
    "arkui.ImageSpanModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ImageSpanModifier",
                "extends": "ImageSpanAttribute"
            }
        ]
    },
    "arkui.AlphabetIndexerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "AlphabetIndexerModifier",
                "extends": "AlphabetIndexerAttribute"
            }
        ]
    },
    "arkui.TimePickerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TimePickerModifier",
                "extends": "TimePickerAttribute"
            }
        ]
    },
    "arkui.RectModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "RectModifier",
                "extends": "RectAttribute"
            }
        ]
    },
    "arkui.GridColModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "GridColModifier",
                "extends": "GridColAttribute"
            }
        ]
    },
    "arkui.FormComponentModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "FormComponentModifier",
                "extends": "FormComponentAttribute"
            }
        ]
    },
    "arkui.GridRowModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "GridRowModifier",
                "extends": "GridRowAttribute"
            }
        ]
    },
    "arkui.SymbolSpanModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SymbolSpanModifier",
                "extends": "SymbolSpanAttribute"
            }
        ]
    },
    "arkui.RenderNode": {
        "dependencies": [
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "DrawContext"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Size"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Offset"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Position"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Pivot"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Scale"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Translation"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Matrix4"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Rotation"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Frame"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "BorderRadiuses"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "ShapeMask"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "ShapeClip"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "Edges"
            },
            {
                "module": "@ohos.arkui.Graphics",
                "imported_as": "LengthMetricsUnit"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "backgroundColor",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "clipToFrame",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "opacity",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "size",
                "return_type": "Size",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "position",
                "return_type": "Position",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "frame",
                "return_type": "Frame",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "pivot",
                "return_type": "Pivot",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "scale",
                "return_type": "Scale",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "translation",
                "return_type": "Translation",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rotation",
                "return_type": "Rotation",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "transform",
                "return_type": "Matrix4",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shadowColor",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shadowOffset",
                "return_type": "Offset",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "label",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shadowAlpha",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shadowElevation",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shadowRadius",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "borderStyle",
                "return_type": "Edges<BorderStyle>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "borderWidth",
                "return_type": "Edges<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "borderColor",
                "return_type": "Edges<number>",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "borderRadius",
                "return_type": "BorderRadiuses",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shapeMask",
                "return_type": "ShapeMask",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "shapeClip",
                "return_type": "ShapeClip",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "markNodeGroup",
                "return_type": "boolean",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lengthMetricsUnit",
                "return_type": "LengthMetricsUnit",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "RenderNode",
                "extends": null
            }
        ]
    },
    "arkui.SliderModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SliderModifier",
                "extends": "SliderAttribute"
            }
        ]
    },
    "arkui.Graphics": {
        "dependencies": [
            {
                "module": "@ohos.graphics.drawing",
                "imported_as": "drawing"
            },
            {
                "module": "@ohos.graphics.common2D",
                "imported_as": "type common2D"
            },
            {
                "module": "@ohos.global.resource",
                "imported_as": "Resource"
            }
        ],
        "interfaces": {
            "Size": [],
            "Vector2": [],
            "Vector3": [],
            "Frame": [],
            "RoundRect": [],
            "Circle": [],
            "CommandPath": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "size",
                "return_type": "Size",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "sizeInPixel",
                "return_type": "Size",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "canvas",
                "return_type": "drawing",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "px",
                "return_type": "LengthMetrics",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "vp",
                "return_type": "LengthMetrics",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "fp",
                "return_type": "LengthMetrics",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "percent",
                "return_type": "LengthMetrics",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "lpx",
                "return_type": "LengthMetrics",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resource",
                "return_type": "LengthMetrics",
                "parameters": [
                    {
                        "name": "value",
                        "type": "Resource"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "numeric",
                "return_type": "ColorMetrics",
                "parameters": [
                    {
                        "name": "value",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "rgba",
                "return_type": "ColorMetrics",
                "parameters": [
                    {
                        "name": "red",
                        "type": "number"
                    },
                    {
                        "name": "green",
                        "type": "number"
                    },
                    {
                        "name": "blue",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "resourceColor",
                "return_type": "ColorMetrics",
                "parameters": [
                    {
                        "name": "color",
                        "type": "ResourceColor"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "color",
                "return_type": "string",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "red",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "green",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "blue",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "alpha",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "edgeColors",
                "return_type": "Edges<number>",
                "parameters": [
                    {
                        "name": "all",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "edgeWidths",
                "return_type": "Edges<number>",
                "parameters": [
                    {
                        "name": "all",
                        "type": "number"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "borderStyles",
                "return_type": "Edges<BorderStyle>",
                "parameters": [
                    {
                        "name": "all",
                        "type": "BorderStyle"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "borderRadiuses",
                "return_type": "BorderRadiuses",
                "parameters": [
                    {
                        "name": "all",
                        "type": "number"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "DrawContext",
                "extends": null
            },
            {
                "class": "LengthMetrics",
                "extends": null
            },
            {
                "class": "ColorMetrics",
                "extends": null
            },
            {
                "class": "using",
                "extends": null
            },
            {
                "class": "using",
                "extends": null
            },
            {
                "class": "using",
                "extends": null
            },
            {
                "class": "ShapeMask",
                "extends": null
            },
            {
                "class": "ShapeClip",
                "extends": null
            }
        ]
    },
    "arkui.TextAreaModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TextAreaModifier",
                "extends": "TextAreaAttribute"
            }
        ]
    },
    "arkui.RichEditorModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "RichEditorModifier",
                "extends": "RichEditorAttribute"
            }
        ]
    },
    "arkui.SymbolGlyphModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SymbolGlyphModifier",
                "extends": "SymbolGlyphAttribute"
            }
        ]
    },
    "arkui.StepperItemModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "StepperItemModifier",
                "extends": "StepperItemAttribute"
            }
        ]
    },
    "arkui.VideoModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "VideoModifier",
                "extends": "VideoAttribute"
            }
        ]
    },
    "arkui.LoadingProgressModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "LoadingProgressModifier",
                "extends": "LoadingProgressAttribute"
            }
        ]
    },
    "arkui.GridItemModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "GridItemModifier",
                "extends": "GridItemAttribute"
            }
        ]
    },
    "arkui.ImageAnimatorModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ImageAnimatorModifier",
                "extends": "ImageAnimatorAttribute"
            }
        ]
    },
    "arkui.TabsModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TabsModifier",
                "extends": "TabsAttribute"
            }
        ]
    },
    "arkui.RefreshModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "RefreshModifier",
                "extends": "RefreshAttribute"
            }
        ]
    },
    "arkui.ColumnModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ColumnModifier",
                "extends": "ColumnAttribute"
            }
        ]
    },
    "arkui.WaterFlowModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "WaterFlowModifier",
                "extends": "WaterFlowAttribute"
            }
        ]
    },
    "arkui.SearchModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SearchModifier",
                "extends": "SearchAttribute"
            }
        ]
    },
    "arkui.SideBarContainerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SideBarContainerModifier",
                "extends": "SideBarContainerAttribute"
            }
        ]
    },
    "arkui.NavigatorModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "NavigatorModifier",
                "extends": "NavigatorAttribute"
            }
        ]
    },
    "arkui.RadioModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "RadioModifier",
                "extends": "RadioAttribute"
            }
        ]
    },
    "arkui.ColumnSplitModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ColumnSplitModifier",
                "extends": "ColumnSplitAttribute"
            }
        ]
    },
    "arkui.AttributeUpdater": {
        "dependencies": [],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "attribute",
                "return_type": "T",
                "parameters": [],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "AttributeUpdater",
                "extends": null
            }
        ]
    },
    "arkui.MenuModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "MenuModifier",
                "extends": "MenuAttribute"
            }
        ]
    },
    "arkui.FrameNode": {
        "dependencies": [
            {
                "module": "@ohos.arkui.UIContext",
                "imported_as": "UIContext"
            },
            {
                "module": "@ohos.RenderNode",
                "imported_as": "RenderNode"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "Size"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "Position"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "Edges"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "LengthMetrics"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "SizeT"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "DrawContext"
            },
            {
                "module": "@ohos.ComponentContent",
                "imported_as": "ComponentContent"
            }
        ],
        "interfaces": {
            "LayoutConstraint": []
        },
        "methods": [
            {
                "is_static": false,
                "method_name": "commonEvent",
                "return_type": "UICommonEvent",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "gestureEvent",
                "return_type": "UIGestureEvent",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "commonAttribute",
                "return_type": "CommonAttribute",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Text",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Column",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Row",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Stack",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "GridRow",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "GridCol",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Flex",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Swiper",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Progress",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Scroll",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "RelativeContainer",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Divider",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "LoadingProgress",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Search",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Blank",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Image",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "List",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "ListItem",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "TextInput",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Button",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "ListItemGroup",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "WaterFlow",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "FlowItem",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "XComponent",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "XComponent",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    },
                    {
                        "name": "options",
                        "type": "XComponentOptions"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Checkbox",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "CheckboxGroup",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Radio",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Rating",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Select",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Slider",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Toggle",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Marquee",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "TextArea",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "SymbolGlyph",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "QRCode",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Badge",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "TextClock",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "TextTimer",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "Grid",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "createNode",
                "return_type": "GridItem",
                "parameters": [
                    {
                        "name": "context",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "totalNodeCount",
                "return_type": "number",
                "parameters": [],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "attachNodeAdapter",
                "return_type": "boolean",
                "parameters": [
                    {
                        "name": "adapter",
                        "type": "NodeAdapter"
                    },
                    {
                        "name": "node",
                        "type": "FrameNode"
                    }
                ],
                "exceptions": []
            },
            {
                "is_static": false,
                "method_name": "detachNodeAdapter",
                "return_type": "void",
                "parameters": [
                    {
                        "name": "node",
                        "type": "FrameNode"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "FrameNode",
                "extends": null
            },
            {
                "class": "NodeAdapter",
                "extends": null
            }
        ]
    },
    "arkui.NodeContent": {
        "dependencies": [
            {
                "module": "@ohos.arkui.Content",
                "imported_as": "Content"
            },
            {
                "module": "@ohos.arkui.FrameNode",
                "imported_as": "FrameNode"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "NodeContent",
                "extends": "Content"
            }
        ]
    },
    "arkui.SpanModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SpanModifier",
                "extends": "SpanAttribute"
            }
        ]
    },
    "arkui.DividerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "DividerModifier",
                "extends": "DividerAttribute"
            }
        ]
    },
    "arkui.GridModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "GridModifier",
                "extends": "GridAttribute"
            }
        ]
    },
    "arkui.ImageModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ImageModifier",
                "extends": "ImageAttribute"
            }
        ]
    },
    "arkui.RowModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "RowModifier",
                "extends": "RowAttribute"
            }
        ]
    },
    "arkui.HyperlinkModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "HyperlinkModifier",
                "extends": "HyperlinkAttribute"
            }
        ]
    },
    "arkui.ProgressModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ProgressModifier",
                "extends": "ProgressAttribute"
            }
        ]
    },
    "arkui.ListModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ListModifier",
                "extends": "ListAttribute"
            }
        ]
    },
    "arkui.ShapeModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ShapeModifier",
                "extends": "ShapeAttribute"
            }
        ]
    },
    "arkui.SwiperModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SwiperModifier",
                "extends": "SwiperAttribute"
            }
        ]
    },
    "arkui.TextClockModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TextClockModifier",
                "extends": "TextClockAttribute"
            }
        ]
    },
    "arkui.Content": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "Content",
                "extends": null
            }
        ]
    },
    "arkui.QRCodeModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "QRCodeModifier",
                "extends": "QRCodeAttribute"
            }
        ]
    },
    "arkui.PathModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PathModifier",
                "extends": "PathAttribute"
            }
        ]
    },
    "arkui.CheckboxModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "CheckboxModifier",
                "extends": "CheckboxAttribute"
            }
        ]
    },
    "arkui.StackModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "StackModifier",
                "extends": "StackAttribute"
            }
        ]
    },
    "arkui.ButtonModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ButtonModifier",
                "extends": "ButtonAttribute"
            }
        ]
    },
    "arkui.ComponentContent": {
        "dependencies": [
            {
                "module": "@ohos.arkui.BuilderNode",
                "imported_as": "BuildOptions"
            },
            {
                "module": "@ohos.arkui.Content",
                "imported_as": "Content"
            },
            {
                "module": "@ohos.arkui.UIContext",
                "imported_as": "UIContext"
            },
            {
                "module": "@ohos.wrappedBuilderObject",
                "imported_as": "WrappedBuilder"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ComponentContent",
                "extends": null
            }
        ]
    },
    "arkui.NodeController": {
        "dependencies": [
            {
                "module": "@ohos.arkui.UIContext",
                "imported_as": "UIContext"
            },
            {
                "module": "@ohos.FrameNode",
                "imported_as": "FrameNode"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "Size"
            }
        ],
        "interfaces": {},
        "methods": [
            {
                "is_static": false,
                "method_name": "makeNode",
                "return_type": "FrameNode",
                "parameters": [
                    {
                        "name": "uiContext",
                        "type": "UIContext"
                    }
                ],
                "exceptions": []
            }
        ],
        "inheritance": [
            {
                "class": "NodeController",
                "extends": null
            }
        ]
    },
    "arkui.ScrollModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ScrollModifier",
                "extends": "ScrollAttribute"
            }
        ]
    },
    "arkui.PolylineModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PolylineModifier",
                "extends": "PolylineAttribute"
            }
        ]
    },
    "arkui.TextPickerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TextPickerModifier",
                "extends": "TextPickerAttribute"
            }
        ]
    },
    "arkui.GaugeModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "GaugeModifier",
                "extends": "GaugeAttribute"
            }
        ]
    },
    "arkui.CheckboxGroupModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "CheckboxGroupModifier",
                "extends": "CheckboxGroupAttribute"
            }
        ]
    },
    "arkui.NavDestinationModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "NavDestinationModifier",
                "extends": "NavDestinationAttribute"
            }
        ]
    },
    "arkui.PatternLockModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PatternLockModifier",
                "extends": "PatternLockAttribute"
            }
        ]
    },
    "arkui.BlankModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "BlankModifier",
                "extends": "BlankAttribute"
            }
        ]
    },
    "arkui.TextInputModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TextInputModifier",
                "extends": "TextInputAttribute"
            }
        ]
    },
    "arkui.TextModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "TextModifier",
                "extends": "TextAttribute"
            }
        ]
    },
    "arkui.ListItemModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ListItemModifier",
                "extends": "ListItemAttribute"
            }
        ]
    },
    "arkui.SelectModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "SelectModifier",
                "extends": "SelectAttribute"
            }
        ]
    },
    "arkui.CommonModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "CommonModifier",
                "extends": "CommonAttribute"
            }
        ]
    },
    "arkui.PolygonModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PolygonModifier",
                "extends": "PolygonAttribute"
            }
        ]
    },
    "arkui.CalendarPickerModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "CalendarPickerModifier",
                "extends": "CalendarPickerAttribute"
            }
        ]
    },
    "arkui.ContainerSpanModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "for",
                "extends": null
            },
            {
                "class": "ContainerSpanModifier",
                "extends": "ContainerSpanAttribute"
            }
        ]
    },
    "arkui.CounterModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "CounterModifier",
                "extends": "CounterAttribute"
            }
        ]
    },
    "arkui.PanelModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "PanelModifier",
                "extends": "PanelAttribute"
            }
        ]
    },
    "arkui.ToggleModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ToggleModifier",
                "extends": "ToggleAttribute"
            }
        ]
    },
    "arkui.XComponentNode": {
        "dependencies": [
            {
                "module": "@ohos.arkui.UIContext",
                "imported_as": "UIContext"
            },
            {
                "module": "@ohos.BuilderNode",
                "imported_as": "NodeRenderType"
            },
            {
                "module": "@ohos.BuilderNode",
                "imported_as": "RenderOptions"
            },
            {
                "module": "@ohos.FrameNode",
                "imported_as": "FrameNode"
            }
        ],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "XComponentNode",
                "extends": "FrameNode"
            }
        ]
    },
    "arkui.ListItemGroupModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ListItemGroupModifier",
                "extends": "ListItemGroupAttribute"
            }
        ]
    },
    "arkui.ParticleModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "ParticleModifier",
                "extends": "ParticleAttribute"
            }
        ]
    },
    "arkui.LineModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "LineModifier",
                "extends": "LineAttribute"
            }
        ]
    },
    "arkui.MarqueeModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "MarqueeModifier",
                "extends": "MarqueeAttribute"
            }
        ]
    },
    "arkui.BuilderNode": {
        "dependencies": [
            {
                "module": "@ohos.arkui.UIContext",
                "imported_as": "UIContext"
            },
            {
                "module": "@ohos.FrameNode",
                "imported_as": "FrameNode"
            },
            {
                "module": "@ohos.Graphics",
                "imported_as": "Size"
            }
        ],
        "interfaces": {
            "RenderOptions": [],
            "BuildOptions": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "BuilderNode",
                "extends": null
            }
        ]
    },
    "arkui.RatingModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "RatingModifier",
                "extends": "RatingAttribute"
            }
        ]
    },
    "arkui.DataPanelModifier": {
        "dependencies": [],
        "interfaces": {},
        "methods": [],
        "inheritance": [
            {
                "class": "DataPanelModifier",
                "extends": "DataPanelAttribute"
            }
        ]
    },
    "notification.notificationSorting": {
        "dependencies": [
            {
                "module": "@ohos.notification.notificationSlot",
                "imported_as": "NotificationSlot"
            }
        ],
        "interfaces": {
            "NotificationSorting": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationFlags": {
        "dependencies": [],
        "interfaces": {
            "NotificationFlags": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationContent": {
        "dependencies": [
            {
                "module": "@ohos.notification",
                "imported_as": "notification"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.global.resource",
                "imported_as": "Resource"
            },
            {
                "module": "@ohos.notificationManager",
                "imported_as": "type notificationManager"
            }
        ],
        "interfaces": {
            "NotificationBasicContent": [],
            "NotificationCapsule": [],
            "NotificationButton": [],
            "NotificationTime": [],
            "NotificationProgress": [],
            "NotificationContent": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationRequest": {
        "dependencies": [
            {
                "module": "@ohos.notification",
                "imported_as": "notification"
            },
            {
                "module": "@ohos.multimedia.image",
                "imported_as": "image"
            },
            {
                "module": "@ohos.notificationManager",
                "imported_as": "type notificationManager"
            },
            {
                "module": "@ohos.notificationSubscribe",
                "imported_as": "type notificationSubscribe"
            },
            {
                "module": "@ohos.wantAgent",
                "imported_as": "WantAgent"
            },
            {
                "module": "@ohos.notificationContent",
                "imported_as": "NotificationContent"
            },
            {
                "module": "@ohos.notificationActionButton",
                "imported_as": "NotificationActionButton"
            },
            {
                "module": "@ohos.notificationTemplate",
                "imported_as": "NotificationTemplate"
            },
            {
                "module": "@ohos.notificationFlags",
                "imported_as": "NotificationFlags"
            }
        ],
        "interfaces": {
            "NotificationRequest": [],
            "DistributedOptions": [],
            "NotificationFilter": [],
            "NotificationCheckRequest": [],
            "UnifiedGroupInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationSubscriber": {
        "dependencies": [
            {
                "module": "@ohos.notification.notificationRequest",
                "imported_as": "NotificationRequest"
            },
            {
                "module": "@ohos.notification.notificationSortingMap",
                "imported_as": "NotificationSortingMap"
            },
            {
                "module": "@ohos.notification",
                "imported_as": "notification"
            },
            {
                "module": "@ohos.notificationManager",
                "imported_as": "type notificationManager"
            }
        ],
        "interfaces": {
            "NotificationSubscriber": [],
            "SubscribeCallbackData": [],
            "EnabledNotificationCallbackData": [],
            "BadgeNumberCallbackData": [],
            "BadgeEnabledChangedCallback": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationSlot": {
        "dependencies": [
            {
                "module": "@ohos.notification",
                "imported_as": "notification"
            },
            {
                "module": "@ohos.notificationManager",
                "imported_as": "type notificationManager"
            }
        ],
        "interfaces": {
            "NotificationSlot": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationSubscribeInfo": {
        "dependencies": [],
        "interfaces": {
            "NotificationSubscribeInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationUserInput": {
        "dependencies": [],
        "interfaces": {
            "NotificationUserInput": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationTemplate": {
        "dependencies": [],
        "interfaces": {
            "NotificationTemplate": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationSortingMap": {
        "dependencies": [
            {
                "module": "@ohos.notification.notificationSorting",
                "imported_as": "NotificationSorting"
            }
        ],
        "interfaces": {
            "NotificationSortingMap": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.NotificationCommonDef": {
        "dependencies": [],
        "interfaces": {
            "BundleOption": []
        },
        "methods": [],
        "inheritance": []
    },
    "notification.notificationActionButton": {
        "dependencies": [
            {
                "module": "@ohos.notification.notificationUserInput",
                "imported_as": "NotificationUserInput"
            },
            {
                "module": "@ohos.wantAgent",
                "imported_as": "WantAgent"
            }
        ],
        "interfaces": {
            "NotificationActionButton": []
        },
        "methods": [],
        "inheritance": []
    },
    "advertising.advertisement": {
        "dependencies": [],
        "interfaces": {
            "Advertisement": []
        },
        "methods": [],
        "inheritance": []
    },
    "multimedia.soundPool": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.audio",
                "imported_as": "type audio"
            }
        ],
        "interfaces": {
            "PlayParameters": [],
            "SoundPool": []
        },
        "methods": [],
        "inheritance": []
    },
    "multimedia.ringtonePlayer": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.audio",
                "imported_as": "type audio"
            },
            {
                "module": "@ohos.multimedia.media",
                "imported_as": "type media"
            }
        ],
        "interfaces": {
            "RingtoneOptions": [],
            "RingtonePlayer": []
        },
        "methods": [],
        "inheritance": []
    },
    "multimedia.systemTonePlayer": {
        "dependencies": [
            {
                "module": "@ohos.multimedia.systemSoundManager",
                "imported_as": "type systemSoundManager"
            }
        ],
        "interfaces": {
            "SystemTonePlayer": [],
            "SystemToneOptions": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.moduleInfo": {
        "dependencies": [],
        "interfaces": {
            "ModuleInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.bundleStatusCallback": {
        "dependencies": [],
        "interfaces": {
            "BundleStatusCallback": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            }
        ]
    },
    "bundle.elementName": {
        "dependencies": [],
        "interfaces": {
            "ElementName": [
                "bundleName",
                "abilityName"
            ]
        },
        "methods": [],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            },
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "bundle.bundleInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundle.abilityInfo",
                "imported_as": "AbilityInfo"
            },
            {
                "module": "@ohos.bundle.applicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundle.hapModuleInfo",
                "imported_as": "HapModuleInfo"
            }
        ],
        "interfaces": {
            "UsedScene": [],
            "ReqPermissionDetail": [],
            "BundleInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.applicationInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundle.moduleInfo",
                "imported_as": "ModuleInfo"
            },
            {
                "module": "@ohos.bundle.customizeData",
                "imported_as": "CustomizeData"
            }
        ],
        "interfaces": {
            "ApplicationInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.customizeData": {
        "dependencies": [],
        "interfaces": {
            "CustomizeData": [
                "name",
                "value",
                "extra"
            ]
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.bundleInstaller": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            },
            {
                "module": "@ohos.bundle",
                "imported_as": "bundle"
            }
        ],
        "interfaces": {
            "InstallParam": [],
            "InstallStatus": [],
            "BundleInstaller": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.PermissionDef": {
        "dependencies": [],
        "interfaces": {
            "PermissionDef": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.hapModuleInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundle.abilityInfo",
                "imported_as": "AbilityInfo"
            }
        ],
        "interfaces": {
            "HapModuleInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "bundle.abilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundle.applicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundle.customizeData",
                "imported_as": "CustomizeData"
            },
            {
                "module": "@ohos.bundle",
                "imported_as": "bundle"
            }
        ],
        "interfaces": {
            "AbilityInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "bundle.launcherAbilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundle.applicationInfo",
                "imported_as": "ApplicationInfo"
            },
            {
                "module": "@ohos.bundle.elementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {
            "LauncherAbilityInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "to",
                "extends": null
            }
        ]
    },
    "bundle.shortcutInfo": {
        "dependencies": [],
        "interfaces": {
            "ShortcutWant": [],
            "ShortcutInfo": []
        },
        "methods": [],
        "inheritance": [
            {
                "class": "name",
                "extends": null
            }
        ]
    },
    "bundle.remoteAbilityInfo": {
        "dependencies": [
            {
                "module": "@ohos.bundle.elementName",
                "imported_as": "ElementName"
            }
        ],
        "interfaces": {
            "RemoteAbilityInfo": []
        },
        "methods": [],
        "inheritance": []
    },
    "data.rdb.resultSet": {
        "dependencies": [
            {
                "module": "@ohos.base",
                "imported_as": "AsyncCallback"
            }
        ],
        "interfaces": {
            "ResultSet": [
                "columnNames",
                "columnCount",
                "rowCount",
                "rowIndex",
                "isAtFirstRow",
                "isAtLastRow",
                "isEnded",
                "isStarted",
                "isClosed"
            ]
        },
        "methods": [],
        "inheritance": [
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            },
            {
                "class": "determines",
                "extends": null
            }
        ]
    }
}